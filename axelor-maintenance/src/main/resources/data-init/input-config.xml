<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_7.4.xsd">

  <input file="auth_permission.csv" separator=";" type="com.axelor.auth.db.Permission"
    search="self.name = :name">
    <bind column="name" to="name"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.isValuePresent(name)"
      check-message="Name must not be null"/>
    <bind column="object" to="object"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.isValuePresent(object)"
      check-message="Object must not be null"/>
  </input>

  <input file="auth_role.csv" separator=";" type="com.axelor.auth.db.Role"
    search="self.name = :name">
    <bind column="name" to="name"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.isValuePresent(name)"
      check-message="Name must not be null"/>
    <bind column="permissions" to="permissions" search="self.name in :permissions"
      eval="permissions.split('\\|') as List"/>
  </input>

  <input file="meta_helpEN.csv" separator=";" type="com.axelor.meta.db.MetaHelp">
    <bind to="help"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.isValuePresent(help)"
      check-message="Help value must not be null"/>
    <bind to="language" eval="'en'"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.checkSelection('com.axelor.meta.db.MetaHelp', 'language', 'en')"
      check-message="Invalid language"/>
    <bind to="type" eval="'tooltip'"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.checkSelection('com.axelor.meta.db.MetaHelp', 'type', 'tooltip')"
      check-message="Invalid help type"/>
    <bind to="model" eval="__repo__(MetaModel).findByName(object)?.getFullName()"
      column="object"/>
  </input>

  <input file="meta_helpFR.csv" separator=";" type="com.axelor.meta.db.MetaHelp">
    <bind to="help"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.isValuePresent(help)"
      check-message="Help value must not be null"/>
    <bind to="language" eval="'fr'"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.checkSelection('com.axelor.meta.db.MetaHelp', 'language', 'fr')"
      check-message="Invalid language"/>
    <bind to="type" eval="'tooltip'"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.checkSelection('com.axelor.meta.db.MetaHelp', 'type', 'tooltip')"
      check-message="Invalid help type"/>
    <bind to="model" eval="__repo__(MetaModel).findByName(object)?.getFullName()"
      column="object"/>
  </input>

  <input file="base_birtTemplate.csv" separator=";"
    type="com.axelor.apps.base.db.BirtTemplate" search="self.importId = :importId">
    <bind column="name" to="name"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.isValuePresent(name)"
      check-message="Name must not be null"/>
    <bind column="format" to="format"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.checkSelection('com.axelor.apps.base.db.BirtTemplate', 'format', format)"
      check-message="Invalid format"/>
    <bind column="templateEngineSelect" to="templateEngineSelect"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.checkSelection('com.axelor.apps.base.db.BirtTemplate', 'templateEngineSelect', templateEngineSelect)"
      check-message="Invalid templateEngineSelect"/>
    <bind to="metaModel" search="self.fullName = :modelName"/>
  </input>

  <input file="base_birtTemplateParameter.csv" separator=";"
    type="com.axelor.apps.base.db.BirtTemplateParameter" search="self.importId = :importId">
    <bind column="name" to="name"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.isValuePresent(name)"
      check-message="Name must not be null"/>
    <bind column="type" to="type"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.checkSelection('com.axelor.apps.base.db.BirtTemplateParameter', 'type', type)"
      check-message="Invalid type"/>
  </input>

  <input file="base_printingTemplate.csv" type="com.axelor.apps.base.db.PrintingTemplate"
    separator=";" search="self.importId = :importId">
    <bind column="statusSelect" to="statusSelect"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.checkSelection('com.axelor.apps.base.db.PrintingTemplate', 'statusSelect', statusSelect)"
      check-message="Invalid statusSelect"/>
    <bind to="metaModel" search="self.fullName = :modelName"/>
  </input>

  <input file="base_printingTemplateLine.csv"
    type="com.axelor.apps.base.db.PrintingTemplateLine" separator=";"
    search="self.importId = :importId">
    <bind column="typeSelect" to="typeSelect"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.checkSelection('com.axelor.apps.base.db.PrintingTemplateLine', 'typeSelect', typeSelect)"
      check-message="Invalid typeSelect"/>
  </input>

</csv-inputs>