<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_6.1.xsd">

  <input file="studio_appBudget.csv" separator=";" search="self.app.code = :code"
    update="true" type="com.axelor.studio.db.AppBudget"/>

  <input file="budget_budget_scenario_variable.csv" separator=";"
    search="self.importId = :importId" type="com.axelor.apps.budget.db.BudgetScenarioVariable"/>

  <input file="budget_budget_scenario.csv" separator=";"
    type="com.axelor.apps.budget.db.BudgetScenario" search="self.importId = :importId">
    <bind column="years" to="yearSet" search="self.importId in :years"
      eval="years.split('\\|') as List"/>
  </input>

  <input file="budget_budget_scenario_line.csv" separator=";"
    type="com.axelor.apps.budget.db.BudgetScenarioLine" search="self.importId = :importId">
  </input>

  <input file="budget_global_budget_template.csv" separator=";"
    type="com.axelor.apps.budget.db.GlobalBudgetTemplate" search="self.importId = :importId">
    <bind to="fromDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(fromDate)"
      column="fromDate"/>
    <bind to="toDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(toDate)"
      column="toDate"/>
  </input>

  <input file="budget_global_budget.csv" separator=";"
    type="com.axelor.apps.budget.db.GlobalBudget" search="self.importId = :importId">
    <bind to="fromDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(fromDate)"
      column="fromDate"/>
    <bind to="toDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(toDate)"
      column="toDate"/>
  </input>


  <input file="budget_budgetLevel.csv" separator=";"
    type="com.axelor.apps.budget.db.BudgetLevel" search="self.importId = :importId">
    <bind to="fromDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(fromDate)"
      column="fromDate"/>
    <bind to="toDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(toDate)"
      column="toDate"/>
    <bind to="startDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(startDate)"
      column="startDate"/>
    <bind to="endDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(endDate)"
      column="endDate"/>
  </input>

  <input file="budget_budget_level_template.csv" separator=";"
    type="com.axelor.apps.budget.db.BudgetLevel" search="self.importId = :importId">
    <bind to="fromDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(fromDate)"
      column="fromDate"/>
    <bind to="toDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(toDate)"
      column="toDate"/>
    <bind column="variables" to="budgetScenarioVariableSet"
      search="self.importId in :variables" eval="variables.split('\\|') as List"/>
  </input>

  <input file="budget_budget.csv" separator=";" type="com.axelor.apps.budget.db.Budget"
    search="self.importId = :importId">
    <bind to="fromDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(fromDate)"
      column="fromDate"/>
    <bind to="toDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(toDate)"
      column="toDate"/>
    <bind to="company" search="self.importId in :companyImportId" column="companyImportId"/>
    <bind column="accountSet" to="accountSet"
      search="self.code in :accountSet AND self.company.importId = :companyImportId"
      eval="accountSet.split('\\|') as List"/>
  </input>

  <input file="budget_budgetLine.csv" separator=";"
    type="com.axelor.apps.budget.db.BudgetLine" search="self.importId = :importId">
    <bind to="fromDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(fromDate)"
      column="fromDate"/>
    <bind to="toDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(toDate)"
      column="toDate"/>
  </input>

</csv-inputs>