plugins {
	id 'com.axelor.app'
}

apply from: "../libs.gradle"
apply from: "../version.gradle"

apply {
	version = openSuiteVersion
}

axelor {
	title "Axelor Bank Payment"
	description "Axelor Bank Payment Module"
}

configurations {
	jaxb
}

dependencies {
	api project(":modules:axelor-account")

    jaxb libs.jaxb_xjc

	implementation libs.bcprov_jdk15on
	implementation libs.bcpkix_jdk15on

	implementation libs.commons_codec
	implementation libs.commons_httpclient

	implementation libs.xmlsec
	implementation libs.xalan
	implementation libs.jdom

	implementation libs.jaxb_bind_api
}

license {
	// Don't generate license header on java classes generated from xsd
	// exclude "**/xsd/pain_001_001_*/**"
	exclude "**/xsd/sepa/**"
}

task xjc () {
	def source = "${projectDir}/src/main/resources/xsd/sepa"
	def target = "${buildDir}/src-gen/xjc"

	inputs.dir(source)
	outputs.dir(target)

	def xsdToGenerate = [
		['package': 'com.axelor.apps.bankpayment.xsd.sepa.pain_001_001_02', 'destdir': "$target", 'schema': "$source/pain.001.001.02.xsd"],
		['package': 'com.axelor.apps.bankpayment.xsd.sepa.pain_001_001_03', 'destdir': "$target", 'schema': "$source/pain.001.001.03.xsd"],
		['package': 'com.axelor.apps.bankpayment.xsd.sepa.pain_008_001_01', 'destdir': "$target", 'schema': "$source/pain.008.001.01.xsd"], // SEPA Direct Debit v01
		['package': 'com.axelor.apps.bankpayment.xsd.sepa.pain_008_001_02', 'destdir': "$target", 'schema': "$source/pain.008.001.02.xsd"]  // SEPA Direct Debit v02
	]

	doLast {
		ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.jaxb.asPath)

		xsdToGenerate.each { argsin ->
			ant.xjc	( argsin )
		}
	}

	sourceSets {
		main {
			java {
				srcDirs target
			}
		}
	}
}

compileJava.dependsOn xjc
generateCode.finalizedBy xjc

task xjc_bankstatement() {
	def source = "${projectDir}/src/main/resources/xsd/bankstatement"
	def target = "${buildDir}/src-gen/xjc"

	inputs.dir(source)
	outputs.dir(target)

	def xsdToGenerate = [
			['package': 'com.axelor.apps.bankpayment.xsd.bankstatement.camt_053_001_02', 'destdir': "$target", 'schema': "$source/camt.053.001.02.xsd"]
	]

	doLast {
		ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask', classpath: configurations.jaxb.asPath)

		xsdToGenerate.each { argsin ->
			ant.xjc(argsin)
		}

		// Post-processing task to add imports and @XmlRootElement annotations
		fileTree("${target}/com/axelor/apps/bankpayment/xsd/bankstatement/camt_053_001_02")
				.include('*.java')
				.each { javaFile ->
					def content = javaFile.text

					// Add imports after the package statement
					if (content =~ /package com\.axelor\.apps\.bankpayment\.xsd\.bankstatement\.camt_053_001_02;/) {
						content = content.replaceFirst(/package com\.axelor\.apps\.bankpayment\.xsd\.bankstatement\.camt_053_001_02;/, { match ->
							match + '\n\nimport jakarta.xml.bind.annotation.XmlRootElement;'
						})
					}

					// Add @XmlRootElement with the class name before the class declaration
					def classDeclarationIndex = content.indexOf("public class ")
					if (classDeclarationIndex != -1) {
						def classNameStart = classDeclarationIndex + "public class ".length()
						def classNameEnd = content.indexOf(" ", classNameStart)
						def className = content.substring(classNameStart, classNameEnd)

						content = content.substring(0, classDeclarationIndex) +
								"@XmlRootElement(name=\"$className\")\n" +
								content.substring(classDeclarationIndex)
					}

					javaFile.text = content
				}
	}

	sourceSets {
		main {
			java {
				srcDirs target
			}
		}
	}
}

compileJava.dependsOn xjc_bankstatement
generateCode.finalizedBy xjc_bankstatement