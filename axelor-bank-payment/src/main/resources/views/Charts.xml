<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_5.4.xsd">

  <chart name="chart.sales.turnover.per.analytic.account.per.month"
    title="Turnover invoiced for an Analytic Axis by Month" onInit="action.chart.set.active.company">
    <search-fields>
      <field name="_company" title="Company" type="reference"
        target="com.axelor.apps.base.db.Company"/>
      <field name="_axis" title="Analytic Axis" type="reference"
        target="com.axelor.apps.account.db.AnalyticAxis"/>
    </search-fields>
    <dataset type="jpql"><![CDATA[

	  SELECT

				SUM(sign(_moveLine.credit-_moveLine.debit)*self.amount) AS amount,
				_analyticAccount.name as analyticAccountName,
	to_char(_moveLine.date,'yyyy-MM') as month
	  FROM
				AnalyticMoveLine self
	  LEFT JOIN
				self.analyticAccount as _analyticAccount
	  LEFT JOIN
	      self.moveLine as _moveLine
	  LEFT JOIN
				_moveLine.move as _move
		LEFT JOIN
				_moveLine.account as _account
	  LEFT JOIN
				self.analyticAxis as _analyticAxis
	  WHERE
	      (_move.statusSelect = 3 OR _move.statusSelect = 2) AND (:_company is null OR _move.company = :_company)
	 			AND _account.code LIKE '7%'  AND (:_axis is null OR _analyticAxis = :_axis)
	  GROUP BY
	      to_char(_moveLine.date,'yyyy-MM'),
				_analyticAccount.name
	  ORDER BY
	      month

	  ]]></dataset>
    <category key="month" type="month"/>
    <series key="amount" groupBy="analyticAccountName" type="bar"/>
    <!-- <config name="colors" value="blue,yellow,red,green" /> -->
    <config name="colors"
      value="#f63,#28a745,#007bff,#ffc107,#6c757d,#6f42c1,#17a2b8,#dc3545,#6f42c1,#f8f9fa"/>

  </chart>

  <chart name="chart.purchases.invoice.per.month.pie"
    title="Supplier invoices by reason of refusal to pay" onInit="action.chart.set.active.company">
    <search-fields>
      <field name="_company" title="Company" type="reference"
        target="com.axelor.apps.base.db.Company"/>
    </search-fields>
    <dataset type="jpql"><![CDATA[

	  SELECT
	      SUM(self.companyInTaxTotalRemaining) AS amountRemaining,
	      _reasonOfRefusalToPay.name AS reasonOfRefusalToPayName,
	      _reasonOfRefusalToPay.id AS _reasonOfRefusalToPayNameId
	  FROM
	      Invoice self
	  LEFT JOIN
	      self.reasonOfRefusalToPay as _reasonOfRefusalToPay

	  WHERE
	      self.statusSelect in (2,3) AND (:_company is null OR self.company = :_company)
	      AND (self.operationTypeSelect = 1 OR self.operationTypeSelect = 2) AND self.pfpValidateStatusSelect = 3
	  GROUP BY
	      _reasonOfRefusalToPay.id,
	      _reasonOfRefusalToPay.name

	  ORDER BY
	      _reasonOfRefusalToPay.name

	  ]]></dataset>
    <category key="reasonOfRefusalToPayName" type="text"/>
    <series key="amountRemaining" type="pie" title="Amount"/>
    <config name="colors" value="#f63,#28a745,#007bff,#ffc107,#6c757d,#6f42c1,#17a2b8"/>
    <config name="percent" value="true"/>
    <config name="onClick" value="account.root.payments.suppl.invoices.to.pay.from.chart"/>
  </chart>

  <custom name="report-delay-rate" title="Supplier's delay on payment" css="report-box">
    <dataset type="jpql"><![CDATA[

	Select 100*(select sum((self.operationTypeSelect + 1.5) * 2 * self.companyExTaxTotal)
	 from Invoice as self
	 WHERE self.statusSelect = 3 and self.amountRemaining > 0
	 and (self.operationTypeSelect = 1 OR self.operationTypeSelect = 2) and self.dueDate <= :__date__) / (select sum((self.operationTypeSelect + 1.5)*2*self.companyExTaxTotal)
	 from Invoice as self
	 WHERE self.statusSelect = 3 and self.amountRemaining > 0
	 and (self.operationTypeSelect = 1 OR self.operationTypeSelect = 2)) as total,

	  (select sum( :__date__ - self.dueDate)
	 from Invoice as self
	 WHERE self.statusSelect = 3 and self.amountRemaining > 0
	 and (self.operationTypeSelect = 1 OR self.operationTypeSelect = 2) and self.dueDate <= :__date__) / (select count(id)
	 from Invoice as self
	 WHERE self.statusSelect = 3 and self.amountRemaining > 0
	 and (self.operationTypeSelect = 1 OR self.operationTypeSelect = 2) and self.dueDate <= :__date__) as avgdelay
	 FROM Invoice as self

	 ]]></dataset>
    <template><![CDATA[

	 <div class="report-data">
	   <h1>{{first.total | number : 2}} %</h1>

	   <small x-translate>Delay rate</small>
	   <div class="report-percent font-bold text-error pull-right">
	    <span x-translate>Average delay :</span> {{first.avgdelay | number : 2}} <span x-translate> days</span>
	   </div>
	   <div class="report-tags"><span class="label label-success" x-translate>Today</span></div>
	 </div>

	 ]]></template>
  </custom>


  <custom name="report-supplier-amount-remaining" title="Supplier amount in progress"
    css="report-box">
    <dataset type="jpql"><![CDATA[

	  Select  CONCAT((select sum(self.companyInTaxTotalRemaining)
	  from Invoice as self
	  WHERE self.statusSelect = 3 and (self.company = :_company)
	  and self.operationTypeSelect = 1)
	- COALESCE((select sum(self.companyInTaxTotalRemaining)
	  from Invoice as self
	  WHERE self.statusSelect = 3 and (self.company = :_company)
	  and self.operationTypeSelect = 2), 0), self.company.currency.symbol) as total
	from Invoice as self

	  ]]></dataset>
    <template><![CDATA[

	  <div class="report-data">
	    <h1>{{first.total | number : 2}}</h1>
	  </div>
	  ]]></template>
  </custom>

  <custom name="report-top-3-suppliers" title="Top 3 supplier" css="report-box">
    <dataset type="jpql"><![CDATA[

	 select sum((self.operationTypeSelect + 1.5)*2*self.companyExTaxTotal) as Amount,
	 CONCAT(ceil(sum((self.operationTypeSelect + 1.5)*2*self.companyExTaxTotal)), self.company.currency.symbol) as AmountPrint,
	 _partner.name as Supplier
	 from Invoice as self
	 left join self.partner as _partner
	 where self.statusSelect = 3 and (self.company = :_company)
	 and self.operationTypeSelect in (1,2)
	 group by _partner.id, self.company.currency.symbol
	 order by Amount desc


	  ]]></dataset>
    <template><![CDATA[

	 <report-table data='data' columns='Supplier,AmountPrint'></report-table>


	  ]]></template>
  </custom>


  <action-record name="action.chart.set.active.company"
    model="com.axelor.apps.account.db.Invoice">
    <field name="_company" expr="eval:__repo__(User).find(__user__.id)?.activeCompany"/>
  </action-record>

  <action-view name="account.root.payments.suppl.invoices.to.pay.from.chart"
    model="com.axelor.apps.account.db.Invoice" title="Suppl. Invoices to pay">
    <view name="invoice-supplier-grid" type="grid"/>
    <view name="invoice-form" type="form"/>
    <view-param name="search-filters" value="supplier-invoices-filters"/>
    <domain>self.operationTypeSelect in (1,2) and self.statusSelect in (2,3) and
      self.pfpValidateStatusSelect = 3 AND self.reasonOfRefusalToPay.name =
      :_reasonOfRefusalToPayName AND (:_company is null OR self.company = :_company)</domain>
    <context name="todayDate"
      expr="eval:__config__.app.getTodayDate(__user__.activeCompany)"/>
    <context name="_chart" expr="eval: _chart"/>
    <context name="_reasonOfRefusalToPayName" expr="eval: reasonOfRefusalToPayName"/>
    <context name="_company" expr="eval: _company"/>
  </action-view>

</object-views>