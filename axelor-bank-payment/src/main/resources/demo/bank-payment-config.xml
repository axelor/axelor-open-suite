<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://axelor.com/xml/ns/data-import" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_5.4.xsd">

  <input file="bankpayment_bankOrderEconomicReason.csv" separator=";" type="com.axelor.apps.bankpayment.db.BankOrderEconomicReason">
    <bind to="name" eval="label != null &amp;&amp; label != '' ? code + ' - ' + label : code" />
  </input>

  <input file="bankpayment_bankPaymentConfig.csv" separator=";" type="com.axelor.apps.bankpayment.db.BankPaymentConfig" search="self.importId = :importId" />

  <input file="account_accountingBatch.csv" separator=";" type="com.axelor.apps.account.db.AccountingBatch" search="self.code = :code">
    <bind to="dueDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(dueDate)" column="dueDate" />
    <bind to="startDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(startDate)" column="startDate" />
    <bind to="endDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(endDate)" column="endDate" />
  </input>

  <input file="base_sequence.csv" separator=";" type="com.axelor.apps.base.db.Sequence" search="self.importId = :importId" call="com.axelor.csv.script.SequenceScript:computeFullname">
    <bind to="yearlyResetOk" column="yearlyResetOk" eval="yearlyResetOk == '1' ? true : false" />
    <bind to="nextNum" column="nextNum" eval="nextNum?.empty ? '1' : nextNum" />
    <bind to="padding" column="padding" eval="padding?.empty ? '1' : padding" />
    <bind to="toBeAdded" column="toBeAdded" eval="toBeAdded?.empty ? '1' : toBeAdded" />
  </input>
  
  <input file="bankpayment_bankStatementQuery.csv" separator=";" type="com.axelor.apps.bankpayment.db.BankStatementQuery" search="self.importId = :importId" />

  <input file="bankpayment_bankStatementRule.csv" separator=";" type="com.axelor.apps.bankpayment.db.BankStatementRule" search="self.importId = :importId" />
  
  <input file="bankpayment_bankStatement_GG.csv" separator=";" type="com.axelor.apps.bankpayment.db.BankStatement" search="self.importId = :importId" />

  <input file="bankpayment_bankStatementLine_GG.csv" separator=";" type="com.axelor.apps.bankpayment.db.BankStatementLineAFB120" search="self.importId = :importId" />
  
  <input file="base_move_inv_GG.csv" separator=";" type="com.axelor.apps.account.db.Move" search="self.importId = :importId" />
  
  <input file="base_move_line_inv_GG.csv" separator=";" type="com.axelor.apps.account.db.MoveLine" search="self.importId = :importId" >
    <bind column="move" search="self.importId = :move" to="move"/>
  </input>
  
  <input file="base_move_pay_GG.csv" separator=";" type="com.axelor.apps.account.db.Move" search="self.importId = :importId" />
  
  <input file="base_move_line_pay_GG.csv" separator=";" type="com.axelor.apps.account.db.MoveLine" search="self.importId = :importId" >
    <bind column="move" search="self.importId = :move" to="move"/>
  </input>
  
  <input file="base_move_line_reconcile_GG.csv" separator=";" type="com.axelor.apps.account.db.Reconcile" search="self.importId = :importId" >
    <bind column="debitMoveLine" search="self.importId = :moveLine" to="moveLine"/>
    <bind column="creditMoveLine" search="self.importId = :moveLine" to="moveLine"/>
  </input>
  
</csv-inputs>