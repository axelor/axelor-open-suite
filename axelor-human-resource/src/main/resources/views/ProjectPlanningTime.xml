<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_6.1.xsd">

  <grid name="project-planning-time-grid" title="Planned time"
    model="com.axelor.apps.project.db.ProjectPlanningTime">
    <field name="plannedTime"/>
    <field name="timeUnit"/>
    <field name="project"/>
    <field name="projectTask"/>
    <field name="employee"/>
    <field name="startDateTime"/>
    <field name="endDateTime"/>
    <button name="deleteProjectPlanningTime" icon="fa-times-circle"
      onClick="action-project-planning-time-method-remove-single-project-planning-time"
      help="Delete"/>
  </grid>

  <grid name="project-planning-db-grid" title="Project Plannings"
    model="com.axelor.apps.project.db.ProjectPlanningTime">
    <field name="project"/>
    <field name="projectTask"/>
    <field name="plannedTime"/>
  </grid>

  <form name="project-planning-time-form" title="Planned time"
    model="com.axelor.apps.project.db.ProjectPlanningTime"
    onNew="action-project-planning-time-attrs-default">
    <panel name="mainPanel">
      <field name="projectTask" domain="self.project = :project" canEdit="false"
        onChange="action-project-planning-time-attrs-project-task-onChange"/>
      <field name="plannedTime" colSpan="3"/>
      <field name="timeUnit" colSpan="3"
        onSelect="action-project-task-attrs-set-time-unit-domain"
        if="__config__.app.isApp('business-project')"/>

      <field name="employee" onSelect="action-project-planning-time-attrs-project-domain"
        canEdit="false" onChange="action-project-planning-time-attrs-employee-change"
        form-view="employee-form"/>
      <field name="product" canEdit="false"
        onSelect="action-project-planning-time-attrs-domain-product" widget="SuggestBox"
        form-view="product-form" grid-view="product-grid" required="true"
        title="ProjectPlanningTime.Activity"/>
      <field name="startDateTime"
        onChange="action-project-planning-time-record-start-time-onchange"/>
      <field name="endDateTime"/>
      <field name="project" hidden="true"/>
      <field name="description" colSpan="12" widget="html"/>
    </panel>
  </form>

  <form name="project-planning-time-wizard-form" model="com.axelor.utils.db.Wizard"
    title="Project planning time" onNew="action-project-planning-time-attrs-default">
    <panel name="mainPanel">
      <field name="fromDate" required="true" type="datetime" title="From"/>
      <field name="toDate" required="true" type="datetime" title="To"/>
      <field name="projectTask" canEdit="false" type="many-to-one" title="Task"
        target="com.axelor.apps.project.db.ProjectTask" target-name="name"
        domain="self.project = :project"/>
      <field name="employee" canEdit="false" title="Employee" type="many-to-one"
        target="com.axelor.apps.hr.db.Employee" target-name="name" required="true"
        onSelect="action-project-planning-time-attrs-project-domain"
        onChange="action-project-planning-time-attrs-employee-change"/>
      <field name="product" canEdit="false" title="ProjectPlanningTime.Activity"
        type="many-to-one" target="com.axelor.apps.base.db.Product" target-name="name"
        onSelect="action-project-planning-time-attrs-domain-product" required="true"
        help="The field Activity is filled automatically from the field &quot;Default Activity Product&quot; from the employee form, on the timesheets panel. You can still modify for each task though"/>
      <field name="timepercent" title="Time%" widget="SelectProgress" type="integer"
        selection="project.task.progress.select"/>
      <button name="addMultipleProjectPlanningTimeBtn" title="Add lines"
        onClick="action-project-planning-time-method-add-multiple-project-planning-time" colSpan="3"
        readonlyIf="fromDate == null || toDate == null || employee == null"/>
      <field name="project" type="many-to-one" target="com.axelor.apps.project.db.Project"
        hidden="true"/>
    </panel>
  </form>

  <action-view name="action-project-view-add-multiple-project-planning-time"
    title="Planned Time Planning" model="com.axelor.utils.db.Wizard">
    <view type="form" name="project-planning-time-wizard-form"/>
    <view-param name="show-confirm" value="false"/>
    <view-param name="show-toolbar" value="false"/>
    <view-param name="popup" value="reload"/>
    <view-param name="popup-save" value="false"/>
    <view-param name="forceTitle" value="true"/>
    <context name="_projectTask" expr="eval:__self__"
      if="_model == 'com.axelor.apps.project.db.ProjectTask'"/>
    <context name="_project" expr="eval:__self__.project"
      if="_model == 'com.axelor.apps.project.db.ProjectTask'"/>
    <context name="_project" expr="eval:__self__"
      if="_model == 'com.axelor.apps.project.db.Project'"/>
    <context name="_employee" expr="eval:assignedTo.employee"
      if="_model == 'com.axelor.apps.project.db.ProjectTask'"/>
  </action-view>

  <action-view name="action-project-dashlet-project-planning-time"
    title="Planned Time Planning" model="com.axelor.apps.project.db.ProjectPlanningTime">
    <view type="grid" name="project-planning-time-grid"/>
    <view type="form" name="project-planning-time-form"/>
    <view-param name="popup" value="true"/>
    <domain>self.project.id in (:_projectIds)</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-view-project-planning-time-add-new"
    title="Planned Time Planning" model="com.axelor.apps.project.db.ProjectPlanningTime">
    <view type="form" name="project-planning-time-form"/>
    <view-param name="popup" value="reload"/>
    <view-param name="show-toolbar" value="false"/>
    <view-param name="forceTitle" value="true"/>
    <context name="_project" expr="eval:__self__"/>
    <context name="_timePlannedPopup" expr="eval: true"/>
  </action-view>

  <action-attrs name="action-project-planning-time-attrs-domain-product">
    <attribute name="domain"
      expr="eval:project == null || __repo__(Project).find(project.id).productSet?.empty ? &quot;self.isActivity = true AND self.dtype = 'Product'&quot; : &quot;self.isActivity = true AND EXISTS(SELECT p FROM Project p WHERE p = :project AND self MEMBER OF p.productSet) AND self.dtype = 'Product'&quot;"
      for="product"/>
  </action-attrs>

  <action-attrs name="action-project-planning-time-attrs-project-domain">
    <attribute name="domain"
      expr="eval:&quot;self.id in (${([0]+__repo__(Project).find(project.id).membersUserSet.collect{it->it.employee?.id}).join(',')})&quot;"
      for="employee" if="project != null"/>
    <attribute name="domain"
      expr="eval:&quot;self.employee != null and self.id in (${([0]+__repo__(Project).find(project.id).membersUserSet.collect{it->it.id}).join(',')})&quot;"
      for="userSet" if="project != null"/>
    <attribute name="domain"
      expr="eval:&quot;self.employee != null and self.id in (${([0]+__repo__(Project).all().filter('self.projectStatus.isCompleted = false').fetch().collect{it->it.membersUserSet.id}.flatten()).join(',')})&quot;"
      for="userSet" if="project == null"/>
  </action-attrs>

  <action-attrs name="action-project-planning-time-attrs-employee-change">
    <attribute name="value" for="product" expr="eval: employee?.product"/>
  </action-attrs>

  <action-attrs name="action-project-planning-time-attrs-default">
    <attribute name="value" for="projectTask" expr="eval:_projectTask"/>
    <attribute name="value" for="timeUnit" expr="eval:_timeUnit" if="_projectTask"/>
    <attribute for="timeUnit" name="readonly" expr="eval: true"
      if="_projectTask &amp;&amp; _timeUnit"/>
    <attribute name="value" for="project" expr="eval:_project"/>
    <attribute name="value" for="userSet" expr="eval:_project.membersUserSet"
      if="_project != null"/>
    <attribute name="value" for="employee" expr="eval:__user__.employee"
      if="_project &amp;&amp; __user__ in __repo__(Project).find(_project.id).membersUserSet"/>
    <attribute name="value" for="product" expr="eval: __user__.employee.product"
      if="_project &amp;&amp; __user__ in __repo__(Project).find(_project.id).membersUserSet &amp;&amp; __user__.employee"/>

    <attribute name="value" for="startDateTime" expr="eval: __datetime__"/>
    <attribute name="value" for="endDateTime" expr="eval: __datetime__.plusMinutes(60)"/>
    <attribute name="value" for="employee" expr="eval: _employee" if="_employee"/>
    <attribute name="value" for="project" expr="eval:__parent__?.project"
      if="__parent__?._model == 'com.axelor.apps.project.db.ProjectTask'"/>
    <attribute name="value" for="projectTask" expr="eval:__parent__"
      if="__parent__?._model == 'com.axelor.apps.project.db.ProjectTask'"/>
    <attribute name="readonly" for="projectTask" expr="eval:true"
      if="__parent__?._model == 'com.axelor.apps.project.db.ProjectTask' || _projectTask"/>
    <attribute name="value" for="product" expr="eval: __user__.employee.product"
      if="__parent__?._model == 'com.axelor.apps.project.db.ProjectTask' &amp;&amp; __parent__?.project &amp;&amp; __user__ in __repo__(Project).find(__parent__.project.id).membersUserSet &amp;&amp; __user__.employee"/>
  </action-attrs>

  <action-attrs name="action-project-attrs-project-planning-time-remove">
    <attribute name="readonly" for="removeProjectPlanningTimeLineBtn" expr="eval:true"/>
    <attribute name="hidden" for="cancelRemovePlanningTimeBtn" expr="eval:false"/>
    <attribute name="hidden" for="removeSelectedPlanningTimeBtn" expr="eval:false"/>
    <attribute name="hidden" for="$projectPlanningTimeSet" expr="eval:false"/>
    <attribute name="value" for="$projectPlanningTimeSet" expr="eval:null"/>
    <attribute name="title" for="$projectPlanningTimeSet"
      expr="eval:com.axelor.i18n.I18n.get('Select lines to remove')"/>
    <attribute name="domain" for="$projectPlanningTimeSet"
      expr="eval:&quot;self.project.id = :id&quot;" if="!isShowPhasesElements"/>
    <attribute name="domain" for="$projectPlanningTimeSet"
      expr="eval:&quot;(self.project.id = :id OR self.project.parentProject.id = :id)&quot;"
      if="isShowPhasesElements"/>
  </action-attrs>

  <action-attrs name="action-project-attrs-project-planning-time-cancel-remove">
    <attribute name="readonly" for="removeProjectPlanningTimeLineBtn" expr="eval:false"/>
    <attribute name="hidden" for="cancelRemovePlanningTimeBtn" expr="eval:true"/>
    <attribute name="hidden" for="removeSelectedPlanningTimeBtn" expr="eval:true"/>
    <attribute name="hidden" for="$projectPlanningTimeSet" expr="eval:true"/>
  </action-attrs>

  <action-method
    name="action-project-planning-time-method-add-multiple-project-planning-time">
    <call class="com.axelor.apps.hr.web.project.ProjectPlanningTimeController"
      method="addMultipleProjectPlanningTime"/>
  </action-method>

  <action-method
    name="action-project-planning-time-method-remove-project-planning-time">
    <call class="com.axelor.apps.hr.web.project.ProjectPlanningTimeController"
      method="removeProjectPlanningTime"/>
  </action-method>

  <action-method
    name="action-project-planning-time-method-remove-single-project-planning-time">
    <call class="com.axelor.apps.hr.web.project.ProjectPlanningTimeController"
      method="removeSingleProjectPlanningTime"/>
  </action-method>

  <action-validate name="action-project-validate-remove-project-planning-time">
    <alert message="Are you sure wants to remove selected lines?"/>
  </action-validate>

  <action-record name="action-project-planning-time-record-start-time-onchange"
    model="com.axelor.apps.project.db.ProjectPlanningTime">
    <field name="endDateTime" expr="eval: startDateTime.plusMinutes(60)" if="startDateTime"/>
  </action-record>

  <action-attrs name="action-project-planning-time-attrs-project-task-onChange">
    <attribute for="timeUnit" name="value" expr="eval: projectTask.timeUnit"
      if="projectTask"/>
    <attribute for="timeUnit" name="readonly" expr="eval: true" if="projectTask"/>
    <attribute for="timeUnit" name="value" expr="" if="!projectTask"/>
    <attribute for="timeUnit" name="readonly" expr="eval: false" if="!projectTask"/>
  </action-attrs>

</object-views>
