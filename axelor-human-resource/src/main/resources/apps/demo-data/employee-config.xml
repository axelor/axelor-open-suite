<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_6.1.xsd">

  <input file="studio_appEmployee.csv" separator=";" type="com.axelor.studio.db.AppEmployee"
    search="self.app.code = :code" update="true"/>

  <input file="hr_weeklyPlanning.csv" separator=";"
    type="com.axelor.apps.base.db.WeeklyPlanning" search="self.importId  = :importId"/>

  <input file="hr_dayPlanning.csv" separator=";" type="com.axelor.apps.base.db.DayPlanning"
    search="self.importId  = :importId"/>

  <input file="hr_eventsPlanning.csv" type="com.axelor.apps.base.db.EventsPlanning"
    separator=";" search="self.importId = :importId"/>

  <input file="hr_eventsPlanningLine.csv" type="com.axelor.apps.base.db.EventsPlanningLine"
    separator=";" search="self.importId = :importId">
    <bind to="date" eval="call:com.axelor.csv.script.ImportDateTime:importDate(date)"
      column="date"/>
    <bind to="year" eval="java.time.Year.now().getValue() + year.toInteger()" column="year"/>
  </input>

  <input file="hr_leaveReason.csv" type="com.axelor.apps.hr.db.LeaveReason" separator=";"
    search="self.importId  = :importId"/>

  <input file="hr_hrConfig.csv" type="com.axelor.apps.hr.db.HRConfig" separator=";"
    search="self.importId = :importId"/>

  <input file="hr_kilometricAllowParam.csv" type="com.axelor.apps.hr.db.KilometricAllowParam"
    separator=";" search="self.code = :code"/>

  <input file="hr_kilometricAllowanceRate.csv"
    type="com.axelor.apps.hr.db.KilometricAllowanceRate" separator=";"
    search="self.importId = :importId"/>

  <input file="hr_kilometricAllowanceRule.csv"
    type="com.axelor.apps.hr.db.KilometricAllowanceRule" separator=";"/>

  <input file="hr_employee.csv" separator=";" type="com.axelor.apps.hr.db.Employee"
    search="self.importId  = :importId">
    <bind to="hireDate" column="hireDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(hireDate)"/>
    <bind to="leavingDate" column="leavingDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(leavingDate)"/>
  </input>

  <input file="hr_contract.csv" separator=";" type="com.axelor.apps.hr.db.EmploymentContract"
    search="self.importId = :importId"/>

  <input file="hr_employee.csv" separator=";" type="com.axelor.apps.hr.db.Employee"
    search="self.importId  = :importId" update="true">
    <bind to="mainEmploymentContract" search="self.importId = :importId"/>
    <bind to="hireDate" column="hireDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(hireDate)"/>
    <bind to="leavingDate" column="leavingDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(leavingDate)"/>
  </input>

  <input file="auth_user.csv" separator=";" search="self.importId = :importId"
    type="com.axelor.auth.db.User" update="true"/>

  <input file="hr_hrBatch.csv" type="com.axelor.apps.hr.db.HrBatch" separator=";"/>

  <input file="hr_anonymizer.csv" type="com.axelor.apps.base.db.Anonymizer" separator=";"/>

  <input file="hr_anonymizerLine.csv" type="com.axelor.apps.base.db.AnonymizerLine"
    separator=";">
    <bind to="metaModel" column="metaModel" search="self.name = :metaModel"/>
    <bind to="metaField" column="metaField"
      search="self.name = :metaField AND self.metaModel.name = :metaModel"/>
    <bind to="anonymizer" column="anonymizer_importId"
      search="self.importId = :anonymizer_importId"/>
    <bind to="useFakeData" column="useFakeData"/>
  </input>

</csv-inputs>

