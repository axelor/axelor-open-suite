<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_6.1.xsd">

  <input file="studio_appHumanResource.csv" separator=";"
    type="com.axelor.studio.db.AppHumanResource" search="self.app.code = :code" update="true"/>

  <input file="hr_hrConfig.csv" type="com.axelor.apps.hr.db.HRConfig" separator=";"
    search="self.importId = :importId"/>

  <!-- Employee -->
  <input file="hr_weeklyPlanning.csv" separator=";"
    type="com.axelor.apps.base.db.WeeklyPlanning" search="self.importId  = :importId"/>

  <input file="hr_dayPlanning.csv" separator=";" type="com.axelor.apps.base.db.DayPlanning"
    search="self.importId  = :importId"/>

  <input file="hr_eventsPlanning.csv" type="com.axelor.apps.base.db.EventsPlanning"
    separator=";" search="self.importId = :importId"/>

  <input file="hr_eventsPlanningLine.csv" type="com.axelor.apps.base.db.EventsPlanningLine"
    separator=";" search="self.importId = :importId"/>

  <input file="hr_leaveReason.csv" type="com.axelor.apps.hr.db.LeaveReason" separator=";"
    search="self.importId  = :importId"/>

  <input file="hr_kilometricAllowParam.csv" type="com.axelor.apps.hr.db.KilometricAllowParam"
    separator=";" search="self.code = :code"/>

  <input file="hr_kilometricAllowanceRate.csv"
    type="com.axelor.apps.hr.db.KilometricAllowanceRate" separator=";"
    search="self.importId = :importId"/>

  <input file="hr_kilometricAllowanceRule.csv"
    type="com.axelor.apps.hr.db.KilometricAllowanceRule" separator=";"/>

  <input file="hr_employee.csv" separator=";" type="com.axelor.apps.hr.db.Employee"
    search="self.importId  = :importId">
    <bind to="hireDate" column="hireDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(hireDate)"/>
    <bind to="leavingDate" column="leavingDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(leavingDate)"/>
  </input>

  <input file="hr_contract.csv" separator=";" type="com.axelor.apps.hr.db.EmploymentContract"
    search="self.importId = :importId"/>

  <input file="hr_employee.csv" separator=";" type="com.axelor.apps.hr.db.Employee"
    search="self.importId  = :importId" update="true">
    <bind to="mainEmploymentContract" search="self.importId = :importId"/>
    <bind to="hireDate" column="hireDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(hireDate)"/>
    <bind to="leavingDate" column="leavingDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(leavingDate)"/>
  </input>

  <input file="auth_user.csv" separator=";" search="self.importId = :importId"
    type="com.axelor.auth.db.User" update="true"/>

  <input file="hr_hrBatch.csv" type="com.axelor.apps.hr.db.HrBatch" separator=";"/>

  <input file="hr_anonymizer.csv" type="com.axelor.apps.base.db.Anonymizer" separator=";"/>

  <input file="hr_anonymizerLine.csv" type="com.axelor.apps.base.db.AnonymizerLine"
    separator=";">
    <bind to="metaModel" column="metaModel" search="self.name = :metaModel"/>
    <bind to="metaField" column="metaField"
      search="self.name = :metaField AND self.metaModel.name = :metaModel"/>
    <bind to="anonymizer" column="anonymizer_importId"
      search="self.importId = :anonymizer_importId"/>
    <bind to="useFakeData" column="useFakeData"/>
  </input>

  <!-- Timesheet -->
  <input file="hr_timesheet.csv" type="com.axelor.apps.hr.db.Timesheet" separator=";"
    search="self.importId = :importId">
    <bind to="fromDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(fromDate)"
      column="fromDate"/>
    <bind to="toDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(toDate)"
      column="toDate"/>
  </input>

  <input file="hr_timesheetLine.csv" type="com.axelor.apps.hr.db.TimesheetLine" separator=";"
    search="self.importId = :importId">
    <bind to="employee" search="self.importId = :employee_importId"/>
    <bind to="date" eval="call:com.axelor.csv.script.ImportDateTime:importDate(date)"
      column="date"/>
    <bind to="duration" column="hoursDuration"/>
    <bind to="hoursDuration" column="hoursDuration"/>
  </input>

  <input file="base_template.csv" separator=";" type="com.axelor.message.db.Template"
    search="self.name = :name">
    <bind to="language" search="self.code = :languageCode"/>
    <bind column="birtTemplateSet_importId" to="birtTemplateSet"
      search="self.importId in :birtTemplateSet_importId"
      eval="birtTemplateSet_importId.split('\\|') as List" update="true"/>
  </input>

  <!-- Expense -->
  <input file="hr_expense.csv" separator=";" type="com.axelor.apps.hr.db.Expense"/>

  <input file="hr_expenseLine.csv" separator=";" type="com.axelor.apps.hr.db.ExpenseLine">
    <bind to="expenseDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(expenseDate)" column="expenseDate"/>
  </input>

  <input file="hr_employeeBonusType.csv" separator=";"
    type="com.axelor.apps.hr.db.EmployeeBonusType"/>

  <input file="base_sequence.csv" separator=";" type="com.axelor.apps.base.db.Sequence"
    search="self.importId = :importId" call="com.axelor.csv.script.ImportSequence:importSequence">
    <bind to="yearlyResetOk" column="yearlyResetOk" eval="yearlyResetOk == '1' ? true : false"
      if="yearlyResetOk"/>
    <bind to="nextNum" column="nextNum" eval="nextNum?.empty ? '1' : nextNum"/>
    <bind to="padding" column="padding" eval="padding?.empty ? '1' : padding"/>
    <bind to="toBeAdded" column="toBeAdded" eval="toBeAdded?.empty ? '1' : toBeAdded"/>
  </input>

  <input file="base_expenseTemplate.csv" separator=";" type="com.axelor.message.db.Template"
    search="self.importId = :importId"/>

  <input file="account_accountConfig.csv" separator=";"
    type="com.axelor.apps.account.db.AccountConfig" search="self.importId = :importId" update="true"/>

  <!-- Leave -->
  <input file="hr_leaveLine.csv" separator=";" type="com.axelor.apps.hr.db.LeaveLine">
    <bind to="name" column="leaveReasonName"/>
    <bind to="leaveReason" search="self.name = :leaveReasonName" column="leaveReasonName"/>
  </input>

  <input file="hr_leaveManagement.csv" separator=";"
    type="com.axelor.apps.hr.db.LeaveManagement">
    <bind to="date" eval="call:com.axelor.csv.script.ImportDateTime:importDate(date)"
      column="date"/>
    <bind to="fromDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(fromDate)"
      column="fromDate"/>
    <bind to="toDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(toDate)"
      column="toDate"/>
  </input>

  <input file="base_leaveTemplate.csv" separator=";" type="com.axelor.message.db.Template"
    search="self.importId = :importId"/>

</csv-inputs>

