<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_7.4.xsd">

  <input file="auth_permission.csv" separator=";" type="com.axelor.auth.db.Permission"
    search="self.name = :name" call="com.axelor.csv.script.ImportPermission:importPermissionToRole">
    <bind column="name" to="name"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.isValuePresent(name)"
      check-message="Name must not be null"/>
    <bind column="object" to="object"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.isValuePresent(object)"
      check-message="Object must not be null"/>
    <bind to="canRead" eval="can_read == 'x' ? 'true' : 'false'"/>
    <bind to="canWrite" eval="can_write == 'x' ? 'true' : 'false'"/>
    <bind to="canCreate" eval="can_create == 'x' ? 'true' : 'false'"/>
    <bind to="canRemove" eval="can_remove == 'x' ? 'true' : 'false'"/>
    <bind to="canExport" eval="can_export == 'x' ? 'true' : 'false'"/>
  </input>

  <input file="meta_metaMenu.csv" separator=";" type="com.axelor.meta.db.MetaMenu"
    search="self.name = :name" update="true">
    <bind column="name" to="name"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.isValuePresent(name)"
      check-message="Name must not be null"/>
    <bind column="title" to="title"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.isValuePresent(title)"
      check-message="Title must not be null"/>
    <bind column="xmlId" to="xmlId"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.checkUniqueConstraint('com.axelor.meta.db.MetaMenu', 'name', name, 'xmlId', xmlId)"
      check-message="Xml id must be unique"/>
    <bind column="tagStyle" to="tagStyle"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.checkSelection('com.axelor.meta.db.MetaMenu', 'tagStyle', tagStyle)"
      check-message="Invalid tagStyle :tagStyle"/>
  </input>

  <input file="project_status.csv" separator=";"
    type="com.axelor.apps.project.db.ProjectStatus" search="self.importId = :importId"/>

  <input file="project_priority.csv" separator=";"
    type="com.axelor.apps.project.db.ProjectPriority" search="self.importId = :importId">
    <bind column="technicalTypeSelect" to="technicalTypeSelect"
      check="com.axelor.apps.base.service.imports.importer.ImportHelper.checkSelection('com.axelor.apps.project.db.ProjectPriority', 'technicalTypeSelect', technicalTypeSelect)"
      check-message="Invalid technicalTypeSelect :technicalTypeSelect"/>
  </input>

</csv-inputs>