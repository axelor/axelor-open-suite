<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_6.1.xsd">

  <grid name="project-task-grid" title="Tasks" model="com.axelor.apps.project.db.ProjectTask"
    edit-icon="true" orderBy="-priority.technicalTypeSelect">
    <hilite if="$get('status.isCompleted') &amp;&amp; $get('status.isDefaultCompleted')"
      color="success"/>
    <hilite if="$moment(taskEndDate).diff(todayDate,'days') &lt; 0" color="danger"/>
    <hilite if="$get('priority.technicalTypeSelect') == 4" color="warning"/>
    <field name="ticketNumber"/>
    <field name="name"/>
    <field name="project"/>
    <field name="taskDate"/>
    <field name="status"/>
    <field name="priority"/>
    <field name="projectTaskCategory"/>
    <field name="targetVersion" if-module="axelor-business-support"
      if="__config__.app.isApp('business-support')"/>
    <field name="taskEndDate" hidden="true"/>
    <field name="priority.technicalTypeSelect" hidden="true"/>
    <field name="status.isCompleted" hidden="true"/>
    <field name="status.isDefaultCompleted" hidden="true"/>
  </grid>

  <form name="project-task-form" title="Task" model="com.axelor.apps.project.db.ProjectTask"
    onNew="action-project-task-group-onnew" onLoad="action-project-task-group-timer-process"
    width="large">
    <toolbar>
      <button name="grabEventBtn" icon="fa-suitcase" help="Take charge"
        onClick="action-project-task-record-assigned-yourself,save"/>
      <button name="doneBtn" icon="fa-check"
        onClick="action-project-task-record-change-status,save" showIf="project.isShowStatus"/>
    </toolbar>
    <menubar>
      <menu name="projectTaskMenu" title="Tools"
        if="__config__.app.getApp('project')?.resourceManagement">
        <item name="bookResourceItem" title="Book resource"
          action="save,action-project-task-book-resource"/>
      </menu>
    </menubar>

    <panel showIf="nextProjectTask">
      <field name="doApplyToAllNextTasks" widget="InlineCheckbox" colSpan="12"/>
    </panel>

    <panel name="mainPanel" colSpan="12">
      <panel name="statusPanel" stacked="true" colSpan="6">
        <field name="status" widget="NavSelect" showTitle="false"
          showIf="project.isShowStatus" x-order="sequence"/>
      </panel>
      <panel name="viewerTagsPanel" colSpan="4">
        <field name="$viewerTags" showTitle="false" readonly="true"
          showIf="typeSelect == 'ticket' &amp;&amp; $readonly()" colSpan="12"
          if-module="axelor-business-support" if="__config__.app.isApp('business-support')"
          hidden="true">
          <viewer>
              <![CDATA[
                   <>
                       <Box d="flex" justifyContent="flex-end" gap="4" alignItems="center">
                           {assignment == 1 && <Badge bg="danger">{_t('Task assigned to the client')}</Badge>}
                           {assignment == 2 && !$provider && <Badge bg="success">{_t('Task assigned to the provider')}</Badge>}
                           {assignment == 2 && $provider && <Badge bg="success">{_t('Task assigned to')} {$provider}</Badge>}
                           {((!isOrderAccepted && invoicingType == 2 && exTaxTotal != 0) || (!isOrderAccepted && invoicingType == 1)) && <Badge bg="danger">{_t('Order Proposed')}</Badge>}
                           {isOrderAccepted && <Badge bg="success">{_t('Order Accepted')}</Badge>}
                       </Box>
                   </>
	        ]]>
          </viewer>
        </field>
      </panel>
      <button name="timeSpentBtn" title="Log time"
        onClick="save,action-project-task-validate-check-employee,action-project-task-view-time-spent"
        colSpan="2" hidden="true"/>
      <field name="project.isShowTimeSpent" hidden="true"/>
      <field name="$provider" hidden="true" type="string"/>
      <panel name="projectDetailsPanel" colSpan="12">
        <panel name="detailsPanel" colSpan="8">
          <field name="fullName" showTitle="false" colSpan="12">
            <viewer depends="name">
						<![CDATA[
							<>
								<h3>
									<span>{name}</span>
								</h3>
							</>
						]]>
            </viewer>
            <editor>
              <field name="name" title="Subject" colSpan="12" css="label-bold bold large"
                required="true"/>
            </editor>
          </field>
          <field name="ticketNumber"
            if="__config__.app.getApp('project')?.isEnablePerProjectTaskSequence"/>
          <field name="project" colSpan="6"
            onChange="action-project-task-group-project-onchange"
            domain="self.projectStatus.isCompleted = false" required="true"/>
          <field name="parentTask" readonlyIf="project == null" colSpan="6"
            onSelect="action-project-task-attrs-project-parent-task-configurations"/>
          <field name="assignedTo" readonlyIf="project == null" colSpan="6" canNew="false"
            canView="false" canEdit="false"
            onSelect="action-project-task-attrs-project-assigned-to-configurations" required="true"
            form-view="user-form" grid-view="user-grid"
            onChange="action-project-task-attrs-hide-time-spent-button"/>
          <field name="customerReferral"
            onSelect="action-project-task-attrs-customer-referral-domain" hidden="true"
            showIf="typeSelect == 'ticket'" if="__config__.app.isApp('business-project')"/>
          <field name="isPrivate" hidden="true" showIf="typeSelect == 'ticket'" colSpan="6"
            if-module="axelor-business-support" if="__config__.app.isApp('business-support')"/>
          <field name="isOrderAccepted" colSpan="3" hidden="true"
            showIf="typeSelect == 'ticket'" if-module="axelor-business-support"
            if="__config__.app.isApp('business-support')"/>
          <field name="isOrderProposed" hidden="true" colSpan="3"
            if-module="axelor-business-support" if="__config__.app.isApp('business-support')"/>
        </panel>
        <panel name="actionPanel" colSpan="4">
          <button name="acceptOrderBtn" title="Accept Order" hidden="true"
            hideIf="invoicingType != 1  || isOrderAccepted || typeSelect != 'ticket'"
            onClick="action-project-task-attrs-onclick-order-accepted,save" colSpan="12"
            if-module="axelor-business-support" if="__config__.app.isApp('business-support')"/>
          <button name="assigningProviderBtn" colSpan="12" title="Assigning to the provider"
            hidden="true" onClick="action-project-task-attrs-assginment-provider,save"
            if-module="axelor-business-support" if="__config__.app.isApp('business-support')"
            showIf="assignment == 1 &amp;&amp; typeSelect == 'ticket'"/>
          <button name="assigningCustomerBtn" colSpan="12" title="Assigning to the customer"
            hidden="true" onClick="action-project-task-attrs-assginment-customer,save"
            if-module="axelor-business-support" if="__config__.app.isApp('business-support')"
            showIf="assignment == 2 &amp;&amp; typeSelect == 'ticket'"/>
        </panel>
      </panel>
      <panel name="characteristicsPanel" title="Characteristics" colSpan="12">
        <panel name="categoryPanel" showIf="project.isShowTaskCategory" colSpan="4">
          <field name="projectTaskCategory" colSpan="12"
            onSelect="action-project-task-attrs-project-task-category-configurations"
            onChange="action-project-task-group-project-category-onchange"/>
        </panel>
        <panel name="sectionPanel" showIf="project.isShowSection" colSpan="4">
          <field name="projectTaskSection" colSpan="12" form-view="project-task-section-form"
            grid-view="project-task-section-grid"/>
        </panel>
        <panel name="priorityPanel" showIf="project.isShowPriority" colSpan="4">
          <field name="priority" colSpan="12"
            onSelect="action-project-task-atts-priority-on-select"
            requiredIf="project.isShowPriority" canView="false"/>
        </panel>
        <field name="targetVersion" if-module="axelor-business-support"
          if="__config__.app.isApp('business-support')" domain=":project member of self.projectSet"
          colSpan="4" form-view="project-version-form" grid-view="project-version-grid"/>
        <field name="assignment" hidden="true" showIf="typeSelect == 'ticket'"
          if-module="axelor-business-support" if="__config__.app.isApp('business-support')"
          colSpan="4"/>
        <field name="taskDate" colSpan="4"
          onChange="action-project-task-attrs-set-task-duration,action-project-task-record-set-date-or-frequency-changed"
          required="true"/>
        <field name="taskEndDate" colSpan="4"
          onChange="action-project-task-attrs-set-task-duration"/>
        <field name="taskDeadline" title="Task deadline" colSpan="4"
          if="!__config__.app.isApp('business-support')"/>
        <field name="projectTaskTagSet" widget="TagSelect" x-color-field="colorSelect"
          form-view="project-task-tag-form" grid-view="project-task-tag-grid" colSpan="4"/>
        <field name="progressSelect" widget="SelectProgress"
          onChange="action-project-task-update-planned-progress" showIf="project.isShowProgress"
          colSpan="4"/>
        <field name="description" colSpan="12" widget="html"/>
        <field name="project.isShowProgress" hidden="true"/>
        <field name="project.isShowSection" hidden="true"/>
        <field name="project.isShowStatus" hidden="true"/>
        <field name="project.isShowPriority" hidden="true"/>
        <field name="project.isShowTaskCategory" hidden="true"/>
      </panel>

      <field name="typeSelect" hidden="true"/>
    </panel>
    <panel-tabs name="mainPanelTab">
      <panel name="internalDescriptionPanel" title="Internal Description"
        if="__config__.app.isApp('business-support')" if-module="axelor-business-support">
        <field name="internalDescription" colSpan="12" widget="html"/>
      </panel>

      <panel name="planningPanel" title="Planning" if="__config__.app.isApp('employee')"
        if-module="axelor-human-resource" showIf="project.isShowPlanning">
        <field name="budgetedTime" colSpan="4">
          <viewer><![CDATA[
                   	<><span>{$fmt('budgetedTime')} </span><span>{_t('hours')}</span></>
       			]]></viewer>
        </field>
        <spacer name="budgetedTimeSpacer" colSpan="4"/>
        <button name="addMultipleLinesBtn" title="Add multiple lines"
          css="btn-custom text-left"
          onClick="save,action-project-view-add-multiple-project-planning-time" colSpan="3"
          hideIf="$popup()"/>
        <button name="projectPlanningTimeLineBtn" title="New line" colSpan="3"
          css="btn-custom text-left" onClick="save,action-project-task-view-time-planned,save"/>
        <button name="removeProjectPlanningTimeLineBtn" title="Remove lines"
          css="btn-custom text-left" colSpan="3"
          onClick="save,action-project-task-attrs-project-planning-time-remove,save"/>
        <field name="$projectPlanningTimeSet" hidden="true" type="many-to-many"
          widget="TagSelect" title="Planned Time Planning" colSpan="12"
          target="com.axelor.apps.project.db.ProjectPlanningTime" canEdit="false" canNew="false"
          grid-view="project-planning-time-grid" form-view="project-planning-time-form"/>
        <button name="removeSelectedPlanningTimeBtn" colSpan="3" hidden="true"
          title="Remove selected lines"
          onClick="action-project-validate-remove-project-planning-time,action-project-planning-time-method-remove-project-planning-time"/>
        <button name="cancelRemovePlanningTimeBtn" colSpan="3" hidden="true" title="Cancel"
          onClick="action-project-attrs-project-planning-time-cancel-remove"/>
        <panel-dashlet name="projectPlanningTimePanel" title="Planned Time Planning"
          action="action-project-task-dashlet-project-planning-time" colSpan="12" canSearch="true"/>
        <field name="plannedProgress" hidden="true" colSpan="12" widget="progress"/>
        <field name="project.isShowPlanning" hidden="true"/>
      </panel>
      <panel name="treeViewPanel" title="Tree view" colSpan="12" showIf="id">
        <panel-dashlet name="taskTreePanel" title="Task Tree" colSpan="12"
          action="action-view-show-task-tree"/>
        <panel-related name="finishToStartSetPanel" field="finishToStartSet"
          colSpan="12">
          <field name="name"/>
        </panel-related>
      </panel>

      <panel name="frequencyPanel" title="Frequency" showIf="project.isShowFrequency">
        <field name="frequency"
          onChange="action-project-task-record-set-date-or-frequency-changed" domain="1 &lt;&gt; 1"
          canNew="true" grid-view="frequency-grid" form-view="frequency-form"/>
        <field name="nextProjectTask" hidden="true" showIf="nextProjectTask"/>
        <field name="isFirst" hidden="true"/>
        <field name="doUpdateNextTasks" hidden="true"/>
        <field name="hasDateOrFrequencyChanged" hidden="true"/>
        <field name="project.isShowFrequency" hidden="true"/>
      </panel>

      <panel name="timeSpentPanel" title="Time Spent" if-module="axelor-human-resource"
        if="__config__.app.isApp('timesheet')" showIf="project.isShowTimeSpent">
        <panel-dashlet name="validatedTimesheetLinesPanel"
          action="action-project-task-dashlet-validated-timesheet-lines"
          title="Validated Timesheet lines" colSpan="12" canSearch="true"
          if="__config__.app.getApp('timesheet')?.needValidation"/>
        <panel-dashlet name="waitingTimesheetLinesPanel"
          action="action-project-task-dashlet-waiting-timesheet-lines"
          title="Waiting Timesheet lines" colSpan="12" canSearch="true"
          if="__config__.app.getApp('timesheet')?.needValidation"/>
        <panel-dashlet name="allTimesheetLinesPanel"
          action="action-project-task-dashlet-all-timesheet-lines" title="TimesheetLine.timeSpent"
          colSpan="12" canSearch="true" if="!__config__.app.getApp('timesheet')?.needValidation"/>
      </panel>

      <panel name="timerPanel" title="Timer" showIf="id" hidden="true"
        if-module="axelor-helpdesk" if="__config__.app.isApp('helpdesk')">
        <panel name="actionsPanel" title="Actions">
          <button name="startTimerBtn" title="Start" icon="fa-play" colSpan="12"
            hidden="true" onClick="action-project-task-method-start-timer"/>
          <button name="stopTimerBtn" title="Stop" icon="fa-pause" colSpan="12" hidden="true"
            onClick="action-project-task-method-stop-timer"/>
          <button name="cancelTimerBtn" title="Cancel" icon="fa-times-circle" colSpan="12"
            hidden="true" onClick="action-project-task-method-cancel-timer"/>
        </panel>
        <panel name="durationPanel">
          <field name="$_totalTimerDuration" type="decimal" readonly="true"
            title="Total duration (Hours)" colSpan="12"/>
        </panel>
      </panel>
    </panel-tabs>
    <panel name="attrsPanel">
      <field name="attrs" colSpan="12"/>
    </panel>
    <panel-mail name="mailPanel">
      <mail-messages/>
      <mail-followers/>
    </panel-mail>
  </form>

  <gantt name="task-gantt" title="Tasks" model="com.axelor.apps.project.db.ProjectTask"
    taskStart="taskDate" taskEnd="taskEndDate" taskDuration="durationHours" taskParent="parentTask"
    taskSequence="sequence" taskProgress="plannedProgress" x-start-to-start="startToStartSet"
    x-finish-to-start="finishToStartSet" x-finish-to-finish="finishToFinishSet"
    taskUser="assignedTo">
    <field name="name"/>
  </gantt>

  <gantt name="project-task-gantt" title="Project Task"
    model="com.axelor.apps.project.db.ProjectTask" taskStart="taskDate" taskEnd="taskEndDate"
    taskDuration="durationHours" taskParent="parentTask" taskSequence="sequence"
    taskProgress="plannedProgress" x-start-to-start="startToStartSet"
    x-finish-to-start="finishToStartSet" x-finish-to-finish="finishToFinishSet">
    <field name="name"/>
    <field name="project"/>
  </gantt>

  <gantt name="user-task-gantt" title="User Task"
    model="com.axelor.apps.project.db.ProjectTask" taskStart="taskDate" taskEnd="taskEndDate"
    taskDuration="durationHours" taskParent="parentTask" taskSequence="sequence"
    taskProgress="plannedProgress" x-start-to-start="startToStartSet"
    x-finish-to-start="finishToStartSet" x-finish-to-finish="finishToFinishSet">
    <field name="name"/>
    <field name="assignedTo"/>
  </gantt>

  <action-view name="action-view-show-task-tree" title="Task Tree"
    model="com.axelor.apps.project.db.ProjectTask">
    <view type="tree" name="task-tree"/>
    <view type="form" name="project-task-form"/>
    <domain>self.id = :_id</domain>
    <context name="_id" expr="eval: id"/>
  </action-view>

  <tree name="task-tree" title="Tasks">

    <column name="name" type="string"/>
    <column name="assignedTo" type="reference"/>
    <column name="progress" type="decimal"/>

    <node model="com.axelor.apps.project.db.ProjectTask" domain="self.id = :_id"
      onClick="action-project-task-view-task">
      <field name="name" as="name"/>
      <field name="assignedTo" as="assignedTo"/>
      <field name="progressSelect" as="progress"/>
    </node>

    <node model="com.axelor.apps.project.db.ProjectTask" parent="parentTask" draggable="true"
      onClick="action-project-task-view-task">
      <field name="name" as="name"/>
      <field name="assignedTo" as="assignedTo"/>
      <field name="progressSelect" as="progress"/>
    </node>

  </tree>

  <kanban name="project-task-kanban" columnBy="status" title="Tasks" limit="30"
    sequenceBy="sequence" model="com.axelor.apps.project.db.ProjectTask">
    <field name="name"/>
    <field name="project"/>
    <field name="assignedTo"/>
    <field name="taskDate"/>
    <field name="taskDeadline"/>
    <field name="priority.name"/>
    <field name="priority.technicalTypeSelect"/>
    <field name="progressSelect"/>
    <field name="project.isShowProgress"/>
    <template>
		<![CDATA[
			<>
				<h4>{name}</h4>
				<h4><Box as="span" fontWeight="normal">{project.fullName}</Box></h4>
				{assignedTo && <Image src={$image('assignedTo', 'image')}></Image>}
				<Box d="flex" justifyContent="space-between">
					<Box>
						<Icon icon="calendar"/>
						{!taskDeadline && <span> {_t('Not specified')} </span>}
						{$moment(taskDeadline).isSame($moment().subtract(1, 'days'), 'day') && <span> {_t('Deadline Yesterday')} </span>}
						{$moment(taskDeadline).isSame($moment(), 'day') && <span> {_t('Deadline Today')} </span>}
						{$moment(taskDeadline).isSame($moment().add(1, 'days'), 'day') && <span> {_t('Deadline Tomorrow')} </span>}
						{$moment(taskDeadline).isAfter($moment().add(1, 'days'), 'days') && <span> {_t('Deadline')} {$moment().to($moment(taskDeadline), false)} </span>}
						{$moment(taskDeadline).isBefore($moment().subtract(1, 'days'), 'days') && <span> {_t('Deadline')} {$moment(taskDeadline).from($moment(), false)} </span>}
					</Box>
					<Box>
						{priority.technicalTypeSelect == 1 && <Badge bg="success">{priority.name}</Badge>}
						{priority.technicalTypeSelect == 2 && <Badge bg="info">{priority.name}</Badge>}
						{priority.technicalTypeSelect == 3 && <Badge bg="warning">{priority.name}</Badge>}
						{priority.technicalTypeSelect == 4 && <Badge bg="danger">{priority.name}</Badge>}
					</Box>
				</Box>
				{project.isShowProgress &&
					<Box mt={1}>
						{progressSelect == 0 ? <span>{progressSelect}%</span> : <LinearProgress value={progressSelect} striped animated/>}
					</Box>
				}
         		<Box mt={4} color="secondary" style={{ fontSize: "12px" }}>
         			<Icon icon="clock"/> {taskDate ? <span>{$fmt('taskDate')}</span> : <span>{_t('Not specified')}</span>}
         		</Box>
			</>
		]]>
    </template>
  </kanban>

  <kanban name="task-per-section-kanban" columnBy="projectTaskSection" title="Tasks"
    limit="30" sequenceBy="sequence" model="com.axelor.apps.project.db.ProjectTask">
    <field name="name"/>
    <field name="project"/>
    <field name="assignedTo"/>
    <field name="taskDate"/>
    <field name="taskDeadline"/>
    <field name="priority.name"/>
    <field name="priority.technicalTypeSelect"/>
    <field name="progressSelect"/>
    <template>
		<![CDATA[
			<>
				<h4>{name}</h4>
				<h4><Box as="span" fontWeight="normal">{project.fullName}</Box></h4>
				{assignedTo && <Image src={$image('assignedTo', 'image')}></Image>}
				<Box d="flex" justifyContent="space-between">
					<Box>
						<Icon icon="calendar"/>
						{!taskDeadline && <span> {_t('Not specified')} </span>}
						{$moment(taskDeadline).isSame($moment().subtract(1, 'days'), 'day') && <span> {_t('Deadline Yesterday')} </span>}
						{$moment(taskDeadline).isSame($moment(), 'day') && <span> {_t('Deadline Today')} </span>}
						{$moment(taskDeadline).isSame($moment().add(1, 'days'), 'day') && <span> {_t('Deadline Tomorrow')} </span>}
						{$moment(taskDeadline).isAfter($moment().add(1, 'days'), 'days') && <span> {_t('Deadline')} {$moment().to($moment(taskDeadline), false)} </span>}
						{$moment(taskDeadline).isBefore($moment().subtract(1, 'days'), 'days') && <span> {_t('Deadline')} {$moment(taskDeadline).from($moment(), false)} </span>}
					</Box>
					<Box>
						{priority.technicalTypeSelect == 1 && <Badge bg="success">{priority.name}</Badge>}
						{priority.technicalTypeSelect == 2 && <Badge bg="info">{priority.name}</Badge>}
						{priority.technicalTypeSelect == 3 && <Badge bg="warning">{priority.name}</Badge>}
						{priority.technicalTypeSelect == 4 && <Badge bg="danger">{priority.name}</Badge>}
					</Box>
				</Box>
				<Box mt={1}>
					{progressSelect == 0 ? <span>{progressSelect}%</span> : <LinearProgress value={progressSelect} striped animated/>}
				</Box>
         		<Box mt={4} color="secondary" style={{ fontSize: "12px" }}>
         			<Icon icon="clock"/> {taskDate ? <span>{$fmt('taskDate')}</span> : <span>{_t('Not specified')}</span>}
         		</Box>
			</>
		]]>
    </template>
  </kanban>

  <calendar name="project-task-per-status-calendar" title="Task Calendar"
    model="com.axelor.apps.project.db.ProjectTask" eventStart="taskDate" eventStop="taskEndDate"
    eventLength="1" mode="month" colorBy="status">
    <field name="fullName"/>
  </calendar>

  <calendar name="project-task-per-section-calendar" title="Task Calendar"
    model="com.axelor.apps.project.db.ProjectTask" eventStart="taskDate" eventStop="taskEndDate"
    eventLength="1" mode="month" colorBy="projectTaskSection">
    <field name="fullName"/>
  </calendar>

  <calendar name="project-task-per-user-calendar" title="Task Calendar"
    model="com.axelor.apps.project.db.ProjectTask" eventStart="taskDate" eventStop="taskEndDate"
    eventLength="1" mode="month" colorBy="assignedTo">
    <field name="fullName"/>
  </calendar>

  <action-group name="action-project-task-group-onnew">
    <action name="action-project-task-defaults"/>
    <action name="action-project-task-record-set-default"/>
    <action name="action-project-task-attrs-scale-and-precision"
      if="__config__.app.isApp('business-project')"/>
    <action name="action-project-task-record-project-configurations" if="project != null"/>
    <action name="action-project-task-business-support-provider"
      if="__config__.app.isApp('business-support')"/>
    <action name="action-project-task-attrs-project-filter-status"/>
    <action name="action-project-task-attrs-hide-time-spent-button"/>
    <action name="action-project-task-attrs-onchange-invoice-type"/>
    <action name="test" if="parentTask != null"/>
  </action-group>

  <action-group name="action-project-task-group-project-onchange">
    <action name="action-project-task-attrs-project-filter-status" if="project?.isShowStatus"/>
    <action name="action-project-task-record-project-configurations"/>
    <action name="action-project-task-method-update-discount"
      if="__config__.app.isApp('business-project')"/>
    <action name="action-project-task-method-compute"
      if="__config__.app.isApp('business-project')"/>
    <action name="action-project-task-attrs-hide-time-spent-button"/>
    <action name="action-project-task-attrs-onchange-invoice-type"/>
  </action-group>

  <action-group name="action-project-task-group-product-onchange">
    <action name="action-project-task-record-product-selected"/>
    <action name="action-project-task-method-update-discount"
      if="__config__.app.isApp('business-project')"/>
    <action name="action-project-task-method-compute"
      if="__config__.app.isApp('business-project')"/>
  </action-group>

  <action-group name="action-project-task-group-qty-onchange">
    <action name="action-project-task-method-update-discount"
      if="__config__.app.isApp('business-project')"/>
    <action name="action-project-task-method-compute"
      if="__config__.app.isApp('business-project')"/>
  </action-group>

  <action-group name="action-project-task-group-unit-price-onchange">
    <action name="action-project-task-method-compute"
      if="__config__.app.isApp('business-project')"/>
  </action-group>

  <action-view name="action-project-task-view-task" title="Tasks"
    model="com.axelor.apps.project.db.ProjectTask">
    <view type="form" name="project-task-form"/>
    <view-param name="popup" value="reload"/>
    <view-param name="show-toolbar" value="true"/>
    <view-param name="show-confirm" value="true"/>
    <context name="_showRecord" expr="eval: id"/>
  </action-view>

  <action-view name="action-project-task-open-task" title="Task"
    model="com.axelor.apps.project.db.ProjectTask">
    <view type="form" name="project-task-form"/>
    <context name="_showRecord" expr="eval: id"/>
  </action-view>

  <action-view name="action-project-task-edit-task" title="Task"
    model="com.axelor.apps.project.db.ProjectTask">
    <view type="form" name="project-task-form"/>
    <view-param name="popup" value="reload"/>
    <view-param name="show-toolbar" value="true"/>
    <view-param name="forceEdit" value="true"/>
    <context name="_showRecord" expr="eval: id"/>
  </action-view>

  <action-view name="action-project-task-view-time-planned"
    title="Planned Time Planning" model="com.axelor.apps.project.db.ProjectPlanningTime">
    <view type="form" name="project-planning-time-form"/>
    <view-param name="popup" value="reload"/>
    <view-param name="show-toolbar" value="false"/>
    <view-param name="forceEdit" value="true"/>
    <view-param name="forceTitle" value="true"/>
    <context name="_timePlannedPopup" expr="eval: true"/>
    <context name="_projectTask" expr="eval:__self__"
      if="_model == 'com.axelor.apps.project.db.ProjectTask'"/>
    <context name="_timeUnit" expr="eval:__self__.timeUnit"
      if="_model == 'com.axelor.apps.project.db.ProjectTask'"/>
    <context name="_employee" expr="eval:assignedTo.employee"
      if="_model == 'com.axelor.apps.project.db.ProjectTask'"/>
    <context name="_project" expr="eval:__self__.project"
      if="_model == 'com.axelor.apps.project.db.ProjectTask'"/>
    <context name="_project" expr="eval:__self__"
      if="_model == 'com.axelor.apps.project.db.Project'"/>
  </action-view>

  <action-record name="action-project-task-record-set-default"
    model="com.axelor.apps.project.db.ProjectTask">
    <field name="isFirst" expr="true"/>
    <field name="typeSelect" expr="eval: _typeSelect"/>
  </action-record>

  <action-record name="action-project-task-record-set-date-or-frequency-changed"
    model="com.axelor.apps.project.db.ProjectTask">
    <field name="hasDateOrFrequencyChanged" expr="true" if="nextProjectTask"/>
  </action-record>

  <action-record name="action-project-task-record-project-configurations"
    model="com.axelor.apps.project.db.ProjectTask">
    <field name="projectTaskCategory" expr="eval: null"/>
    <field name="assignedTo"
      expr="eval:(project?.membersUserSet ? project?.membersUserSet?.collect{it.id}.contains(assignedTo.id) : __repo__(Project).find(project?.id).membersUserSet?.collect{it.id}.contains(assignedTo.id)) ? assignedTo : null"
      if="project != null &amp;&amp; assignedTo != null"/>
    <field name="membersUserSet" expr="eval: null"/>
    <field name="team" expr="eval: project?.team"
      if="project?.synchronize &amp;&amp; project.team != null"/>
    <field name="team" expr="eval: __repo__(Project).find(project?.parentProject?.id)?.team"
      if="(!project?.synchronize || project.team == null) &amp;&amp; project?.extendsMembersFromParent &amp;&amp; __repo__(Project).find(project?.parentProject?.id)?.synchronize"/>
    <field name="invoicingType" expr="eval: 2"
      if="__config__.app.isApp('business-project') &amp;&amp; project?.invoicingSequenceSelect == 1"/>
    <field name="priority"
      expr="call: com.axelor.apps.project.service.ProjectTaskService:getPriority(project)"
      if="project?.isShowPriority"/>
    <field name="status"
      expr="call: com.axelor.apps.project.service.ProjectTaskService:getStatus(project)"
      if="project?.isShowStatus"/>
  </action-record>

  <action-record name="action-project-task-defaults"
    model="com.axelor.apps.project.db.ProjectTask">
    <field name="name" expr="eval: _value" if="_value"/>
    <field name="assignedTo" expr="eval:__user__"/>
    <field name="taskDate" expr="#{__config__.date}"/>
    <field name="project" expr="eval:_project"/>
    <field name="parentTask" expr="eval:_parentTask"/>
    <field name="customerReferral" expr="eval: __user__"
      if="__user__?.roles.contains(__repo__(Role).all().filter('self.name=?','role.customer').fetchOne())"/>
    <field name="assignment" expr="eval:2"/>
  </action-record>

  <action-record name="action-project-task-business-support-provider"
    model="com.axelor.apps.project.db.ProjectTask">
    <field name="$provider"
      expr="eval: __config__.app.getApp('business-support').providerCompany.name"
      if="__config__.app.getApp('business-support').providerCompany"/>
  </action-record>

  <action-record name="action-project-task-update-planned-progress"
    model="com.axelor.apps.project.db.ProjectTask">
    <field name="plannedProgress" expr="eval: progressSelect"/>
  </action-record>

  <action-attrs name="action-project-task-attrs-project-task-category-configurations"
    model="com.axelor.apps.project.db.ProjectTask">
    <attribute name="domain" for="projectTaskCategory"
      expr="eval: (project?.projectTaskCategorySet !=  null &amp;&amp; project?.projectTaskCategorySet?.size() &gt; 0) ? &quot;self.id IN (${project?.projectTaskCategorySet?.collect{it.id}?.join(',')})&quot; : &quot;self.id IN (null)&quot;"/>
  </action-attrs>

  <action-attrs name="action-project-task-attrs-project-assigned-to-configurations"
    model="com.axelor.apps.project.db.ProjectTask">
    <attribute name="domain"
      expr="eval: (project?.membersUserSet != null &amp;&amp; project?.membersUserSet?.size() &gt; 0) ? &quot;self.id IN(${project?.membersUserSet?.collect{it.id}?.join(',')})&quot; : &quot;self.id IN (null)&quot;"
      for="assignedTo"/>
  </action-attrs>

  <action-attrs name="action-project-task-attrs-parent-task-configurations"
    model="com.axelor.apps.project.db.ProjectTask">
    <attribute name="domain"
      expr="eval: (project?.projectTaskList !=null &amp;&amp; project?.projectTaskList?.size() > 0 ) ? &quot;self.id != ${id} AND self.id IN(${project?.projectTaskList?.collect{it.id}?.join(',')})&quot; : &quot;self.id IN (null)&quot;"
      for="parentTask"/>
  </action-attrs>

  <action-attrs name="action-project-task-attrs-set-task-duration">
    <attribute name="value" for="taskDuration"
      expr="eval:java.time.temporal.ChronoUnit.DAYS.between(taskDate, taskEndDate)*86400"
      if="taskDate != null &amp;&amp; taskEndDate != null"/>
  </action-attrs>

  <action-attrs name="action-project-task-attrs-set-dates">
    <attribute name="value" for="taskEndDate"
      expr="eval:taskDate.plus((taskDuration/86400).longValue(), java.time.temporal.ChronoUnit.DAYS)"
      if="taskDate != null"/>
  </action-attrs>

  <action-attrs name="action-project-task-attrs-onclick-order-accepted">
    <attribute name="value" for="isOrderAccepted" expr="eval:true"/>
    <attribute name="value" for="assignment" expr="eval:2"/>
    <attribute name="hidden" for="acceptOrderBtn" expr="eval:true"/>
  </action-attrs>

  <action-attrs name="action-project-task-attrs-customer-referral-domain">
    <attribute name="domain" for="customerReferral"
      expr="eval: &quot; (SELECT role FROM Role role WHERE role.name='role.customer') MEMBER OF self.roles AND self.id IN (SELECT userSet.id FROM Project p INNER JOIN p.membersUserSet userSet WHERE p.id = ${project?.id}) &quot;"/>
  </action-attrs>

  <action-view name="action-project-task-book-resource" title="Book resource"
    model="com.axelor.apps.project.db.ResourceBooking">
    <view type="form" name="resource-booking-form"/>
    <view type="grid" name="resource-booking-grid"/>
    <view type="calendar" name="resource-booking-calendar"/>
    <context name="_project" expr="eval:__self__.project"/>
    <context name="_task" expr="eval:__self__"/>
  </action-view>

  <action-record name="action-project-task-record-assigned-yourself"
    model="com.axelor.apps.project.db.ProjectTask">
    <field name="assignedTo" expr="eval: __user__"/>
  </action-record>

  <action-record name="action-project-task-record-status-in-progress"
    model="com.axelor.apps.project.db.ProjectTask">
    <field name="status" expr="in-progress"/>
  </action-record>

  <action-record name="action-project-task-record-status-closed"
    model="com.axelor.apps.project.db.ProjectTask">
    <field name="statusBeforeComplete" expr="eval: status"/>
    <field name="status" expr="closed"/>
  </action-record>

  <action-record name="action-project-task-record-status-canceled"
    model="com.axelor.apps.project.db.ProjectTask">
    <field name="statusBeforeComplete" expr="eval: status"/>
    <field name="status" expr="canceled"/>
  </action-record>

  <action-record name="action-project-task-record-product-selected"
    model="com.axelor.apps.project.db.ProjectTask">
    <field name="quantity" expr="1"/>
    <field name="invoicingUnit"
      expr="eval: (Unit) com.axelor.inject.Beans.get(com.axelor.apps.base.service.ProductCompanyService.class).get(product, 'salesUnit', project?.company) ?: (Unit) com.axelor.inject.Beans.get(com.axelor.apps.base.service.ProductCompanyService.class).get(product, 'unit', project?.company)"/>
    <field name="unitPrice"
      expr="call: com.axelor.apps.base.service.ProductCompanyServiceImpl:get(product, 'salePrice', project.company)"/>
    <field name="currency"
      expr="call: com.axelor.apps.base.service.ProductCompanyServiceImpl:get(product, 'saleCurrency', project.company)"/>
    <field name="unitCost" expr="eval: product?.costPrice"/>
    <field name="totalCosts" expr="eval: product?.costPrice"/>
  </action-record>

  <action-method name="action-project-task-method-manage-timer-buttons">
    <call class="com.axelor.apps.project.web.ProjectTaskController" method="manageTimerButtons"/>
  </action-method>

  <action-method name="action-project-task-method-compute-total-timer-duration">
    <call class="com.axelor.apps.project.web.ProjectTaskController"
      method="computeTotalTimerDuration"/>
  </action-method>

  <action-method name="action-project-task-method-defaults-from-parent-task">
    <call class="com.axelor.apps.project.web.ProjectTaskController" method="fillSubtask"/>
  </action-method>

  <action-group name="action-project-task-group-project-category-onchange">
    <action name="action-project-task-method-onchange-category"
      if="__config__.app.isApp('business-project')"/>
  </action-group>

  <action-attrs name="action-project-task-atts-priority-on-select">
    <attribute name="domain"
      expr="eval: (project?.projectTaskPrioritySet !=  null &amp;&amp; project?.projectTaskPrioritySet?.size() &gt; 0) ? &quot;self.id IN (${project?.projectTaskPrioritySet?.collect{it.id}?.join(',')})&quot; : &quot;self.id IN (null)&quot;"
      for="priority"/>
  </action-attrs>

  <action-attrs name="action-project-task-attrs-project-parent-task-configurations"
    model="com.axelor.apps.project.db.ProjectTask">
    <attribute name="domain"
      expr="eval: (project?.projectTaskList !=null &amp;&amp; project?.projectTaskList?.size() > 0 ) ? &quot;self.id != ${id} AND self.id IN(${project?.projectTaskList?.collect{it.id}?.join(',')})&quot; : &quot;self.id IN (null)&quot;"
      for="parentTask"/>
  </action-attrs>

  <action-attrs
    name="action-project-task-attrs-project-members-user-set-configurations"
    model="com.axelor.apps.project.db.ProjectTask">
    <attribute name="domain"
      expr="eval: (project?.membersUserSet != null &amp;&amp; project?.membersUserSet?.size() &gt; 0) ? &quot;self.id IN (${project?.membersUserSet?.collect{it.id}?.join(',')})&quot; : &quot;self.id IN (null)&quot;"
      for="membersUserSet"/>
  </action-attrs>

  <action-group name="action-project-task-group-timer-process">
    <action name="action-project-task-attrs-project-filter-status" if="project?.isShowStatus"/>
    <action name="action-project-task-method-manage-timer-buttons"
      if="timerList != null &amp;&amp; !timerList.isEmpty()"/>
    <action name="action-project-task-method-compute-total-timer-duration"
      if="timerList != null &amp;&amp; !timerList.isEmpty()"/>
    <action name="action-project-task-attrs-scale-and-precision"
      if="__config__.app.isApp('business-project')"/>
    <action name="action-project-task-business-support-provider"
      if="__config__.app.isApp('business-support')"/>
    <action name="action-project-attrs-project-planning-time-cancel-remove"/>
    <action name="action-project-task-attrs-hide-time-spent-button"/>
  </action-group>

  <action-method name="action-project-task-method-start-timer">
    <call class="com.axelor.apps.project.web.ProjectTaskController" method="startTimer"/>
  </action-method>

  <action-method name="action-project-task-method-stop-timer">
    <call class="com.axelor.apps.project.web.ProjectTaskController" method="stopTimer"/>
  </action-method>

  <action-method name="action-project-task-method-cancel-timer">
    <call class="com.axelor.apps.project.web.ProjectTaskController" method="cancelTimer"/>
  </action-method>

  <action-method name="action-project-task-method-onchange-category">
    <call class="com.axelor.apps.businessproject.web.ProjectTaskController"
      method="onChangeCategory"/>
  </action-method>

  <action-method name="action-project-task-method-delete-project-task">
    <call class="com.axelor.apps.project.web.ProjectTaskController" method="deleteProjectTask"/>
  </action-method>

  <action-attrs name="action-project-task-attrs-onchange-invoice-type">
    <attribute name="value" for="toInvoice" expr="eval: true"
      if="invoicingType == 1 || invoicingType == 2"/>
    <attribute name="value" for="toInvoice" expr="eval: false" if="invoicingType == 3"/>
    <attribute name="value" for="isOrderProposed" expr="eval: true"
      if="invoicingType == 1"/>
    <attribute name="value" for="isOrderProposed" expr="eval: false"
      if="invoicingType != 1"/>
  </action-attrs>

  <action-attrs name="action-project-task-attrs-assginment-customer">
    <attribute name="value" for="assignment" expr="eval: 1"/>
  </action-attrs>

  <action-attrs name="action-project-task-attrs-assginment-provider">
    <attribute name="value" for="assignment" expr="eval: 2"/>
  </action-attrs>

  <action-view name="action-project-task-dashlet-project-planning-time"
    title="Planned Time Planning" model="com.axelor.apps.project.db.ProjectPlanningTime">
    <view type="grid" name="project-planning-time-grid"/>
    <view type="form" name="project-planning-time-form"/>
    <view-param name="popup" value="true"/>
    <domain>self.projectTask.id = :id</domain>
  </action-view>

  <action-view name="dashlet.task" title="Tasks"
    model="com.axelor.apps.project.db.ProjectTask">
    <view type="grid" name="project-task-grid"/>
    <view type="form" name="project-task-form"/>
  </action-view>

  <action-attrs name="action-project-task-attrs-project-planning-time-remove">
    <attribute name="readonly" for="removeProjectPlanningTimeLineBtn" expr="eval:true"/>
    <attribute name="hidden" for="cancelRemovePlanningTimeBtn" expr="eval:false"/>
    <attribute name="hidden" for="removeSelectedPlanningTimeBtn" expr="eval:false"/>
    <attribute name="hidden" for="$projectPlanningTimeSet" expr="eval:false"/>
    <attribute name="value" for="$projectPlanningTimeSet" expr="eval:null"/>
    <attribute name="title" for="$projectPlanningTimeSet"
      expr="eval:com.axelor.i18n.I18n.get('Select lines to remove')"/>
    <attribute name="domain" for="$projectPlanningTimeSet"
      expr="eval:&quot;self.projectTask.id = :id&quot;"/>
  </action-attrs>

  <action-record name="action-project-task-record-change-status"
    model="com.axelor.apps.project.db.ProjectTask">
    <field name="statusBeforeComplete" expr="eval: status"/>
    <field name="status"
      expr="call:com.axelor.apps.project.service.ProjectTaskService:getDefaultCompletedStatus(project)"
      if="project.isShowStatus"/>
  </action-record>

  <action-view name="action-project-view-per-section-kanban" title="Tasks"
    model="com.axelor.apps.project.db.ProjectTask">
    <view type="kanban" name="task-per-section-kanban"/>
    <view type="form" name="project-task-form"/>
    <domain>self.typeSelect = :_typeSelect AND self.project.id = :_id</domain>
    <context name="_project" expr="eval:__this__"/>
    <context name="_typeSelect" expr="eval: __repo__(ProjectTask).TYPE_TASK"/>
  </action-view>

  <action-view name="action-project-view-per-status-calendar" title="Task Calendar"
    model="com.axelor.apps.project.db.ProjectTask">
    <view type="calendar" name="project-task-per-status-calendar"/>
    <view type="form" name="project-task-form"/>
    <domain>self.typeSelect = :_typeSelect AND self.project.id = :_id</domain>
    <context name="_project" expr="eval:__this__"/>
    <context name="_typeSelect" expr="eval: __repo__(ProjectTask).TYPE_TASK"/>
  </action-view>

  <action-view name="action-project-view-per-section-calendar" title="Task Calendar"
    model="com.axelor.apps.project.db.ProjectTask">
    <view type="calendar" name="project-task-per-section-calendar"/>
    <view type="form" name="project-task-form"/>
    <domain>self.typeSelect = :_typeSelect AND self.project.id = :_id</domain>
    <context name="_project" expr="eval:__this__"/>
    <context name="_typeSelect" expr="eval: __repo__(ProjectTask).TYPE_TASK"/>
  </action-view>

  <action-view name="action-project-view-per-user-calendar" title="Task Calendar"
    model="com.axelor.apps.project.db.ProjectTask">
    <view type="calendar" name="project-task-per-user-calendar"/>
    <view type="form" name="project-task-form"/>
    <domain>self.typeSelect = :_typeSelect AND self.project.id = :_id</domain>
    <context name="_project" expr="eval:__this__"/>
    <context name="_typeSelect" expr="eval: __repo__(ProjectTask).TYPE_TASK"/>
  </action-view>

  <action-attrs name="action-project-task-attrs-project-filter-status">
    <attribute name="selection-in" for="status"
      expr="eval: project?.projectTaskStatusSet?.collect{it.id}?.join(',')"
      if="project?.projectTaskStatusSet"/>
    <attribute name="selection-in" for="status" expr="eval: [-1]"
      if="!project?.projectTaskStatusSet"/>
  </action-attrs>

  <action-attrs name="action-project-task-attrs-hide-time-spent-button">
    <attribute name="hidden" for="timeSpentBtn"
      expr="!(project?.isShowTimeSpent &amp;&amp; assignedTo?.employee == __user__.employee)"/>
  </action-attrs>

  <search-filters name="project-task-filters"
    model="com.axelor.apps.project.db.ProjectTask" title="Project task filters">
    <field name="targetVersion" hidden="true" if="!__config__.app.isApp('business-support')"/>
    <field name="team" hidden="true" if="__config__.app.isApp('business-support')"/>
    <field name="customerReferral" hidden="true"
      if="!__config__.app.isApp('business-project')"/>
    <field name="isPrivate" hidden="true" if="!__config__.app.isApp('business-support')"/>
    <field name="isOrderAccepted" hidden="true" if="!__config__.app.isApp('business-support')"/>
    <field name="isOrderProposed" hidden="true" if="!__config__.app.isApp('business-support')"/>
    <field name="assignment" hidden="true" if="!__config__.app.isApp('business-support')"/>
    <field name="taskDeadline" hidden="true" if="__config__.app.isApp('business-support')"/>
    <field name="internalDescription" hidden="true"
      if="!__config__.app.isApp('business-support')"/>
    <field name="totalPlannedHrs" hidden="true" if="!__config__.app.isApp('employee')"/>
    <field name="budgetedTime" hidden="true" if="!__config__.app.isApp('employee')"/>
    <field name="plannedProgress" hidden="true" if="!__config__.app.isApp('employee')"/>
    <field name="invoicingType" hidden="true" if="!__config__.app.isApp('business-project')"/>
    <field name="toInvoice" hidden="true" if="!__config__.app.isApp('business-project')"/>
    <field name="isPaid" hidden="true" if="!__config__.app.isApp('business-project')"/>
    <field name="isTaskRefused" hidden="true" if="!__config__.app.isApp('business-project')"/>
    <field name="invoiced" hidden="true" if="!__config__.app.isApp('business-project')"/>
    <field name="project.invoicingSequenceSelect" hidden="true"
      if="!__config__.app.isApp('business-project')"/>
    <field name="saleOrderLine" hidden="true" if="!__config__.app.isApp('business-project')"/>
    <field name="invoiceLine" hidden="true" if="!__config__.app.isApp('business-project')"/>
    <field name="product" hidden="true" if="!__config__.app.isApp('business-project')"/>
    <field name="quantity" hidden="true" if="!__config__.app.isApp('business-project')"/>
    <field name="invoicingUnit" hidden="true" if="!__config__.app.isApp('business-project')"/>
    <field name="unitPrice" hidden="true" if="!__config__.app.isApp('business-project')"/>
    <field name="currency" hidden="true" if="!__config__.app.isApp('business-project')"/>
    <field name="discountTypeSelect" hidden="true"
      if="!__config__.app.isApp('business-project')"/>
    <field name="discountAmount" hidden="true" if="!__config__.app.isApp('business-project')"/>
    <field name="priceDiscounted" hidden="true" if="!__config__.app.isApp('business-project')"/>
    <field name="exTaxTotal" hidden="true" if="!__config__.app.isApp('business-project')"/>
    <field name="metaFile" hidden="true"
      if="!__config__.app.getApp('project')?.isEnableSignature"/>
  </search-filters>

</object-views>

