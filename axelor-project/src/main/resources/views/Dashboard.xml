<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_7.1.xsd">

  <dashboard name="project-my-projects" title="My projects">
    <dashlet action="action-project-db-my-tasks-to-do"/>
    <dashlet action="action-project-db-my-tasks-due"/>
    <dashlet action="action-project-db-my-today-planning"/>
    <dashlet action="action-project-db-my-upcomming-planning"/>
  </dashboard>

  <dashboard name="project-planned-charge" title="Planned charge">
    <dashlet action="chart:chart.daily.planned.charge.in.month.per.project" colSpan="12"/>
    <dashlet action="chart:chart.daily.planned.charge.in.month.per.employee" colSpan="12"/>
    <dashlet action="chart:chart.average.daily.planned.charge.in.month.per.employee"
      colSpan="12"/>
  </dashboard>

  <form name="project-dashboard-form" title="Project dashboard"
    model="com.axelor.utils.db.Wizard" onNew="action-project-dashboard-method-on-new" width="large"
    canNew="false" canEdit="false" canDelete="false">
    <panel name="overviewPanel" title="Overview" readonly="true">
      <panel name="descriptionPanel" itemSpan="12">
        <field name="$description" showTitle="false">
          <viewer>
            <![CDATA[
              <>
                <Box as="p">
                  {$description && <Box dangerouslySetInnerHTML={{__html : $description}} style={{ wordBreak: "break-all" }}></Box>}
                </Box>
              </>
            ]]>
          </viewer>
        </field>
      </panel>
      <spacer/>
      <panel name="issueTrackingPanel" title="Issue tracking" icon="fa-sticky-note">
        <field name="$categoryList" showTitle="false" hideIf="$categoryList.length == 0">
          <viewer>
					<![CDATA[
						<>
					        <Table striped>
					            <TableHead>
					              	<TableRow>
						                <TableCell as="th"></TableCell>
						                <TableCell as="th">{_t('Open')}</TableCell>
						                <TableCell as="th">{_t('Closed')}</TableCell>
						                <TableCell as="th">{_t('Total')}</TableCell>
					              	</TableRow>
					            </TableHead>
					            <TableBody>
						           {$categoryList.map((item,index) => (
						                <TableRow key={item.categoryId}>
					                  	<TableCell><Button variant="link" onClick={() => $execute("action-project-dashboard-show-tasks-opened-per-category", {categoryId : item.categoryId})}>{item.categoryName}</Button></TableCell>
						                  	<TableCell><Button variant="link" onClick={() => $execute("action-project-dashboard-show-tasks-opened-per-category", {categoryId : item.categoryId})}>{item.open}</Button></TableCell>
						                  	<TableCell><Button variant="link" onClick={() => $execute("action-project-dashboard-show-tasks-closed-per-category", {categoryId : item.categoryId})}>{item.closed}</Button></TableCell>
						                  	<TableCell><Button variant="link" onClick={() => $execute("action-project-dashboard-show-tasks-per-category", {categoryId : item.categoryId})}>{item.total}</Button></TableCell>
						                </TableRow>
						            ))}
					            </TableBody>
					            <TableCaption>
							    	<Button variant="link" p={0} style={{verticalAlign: "unset"}} onClick={() => $execute("all.open.project.tasks")}>{_t('View all issues')}</Button>
							    	{$isShowCalendarView && <span> | <Button variant="link" p={0} style={{verticalAlign: "unset"}} onClick={() => $execute("action-project-dashboard-view-per-user-calendar")}>{_t('Calendar')}</Button></span>}
							    	{$isShowGanttView && <span> | <Button variant="link" p={0} style={{verticalAlign: "unset"}} onClick={() => $execute("action-project-dashboard-view-open-gantt")}>{_t('Gantt')}</Button></span>}
					            </TableCaption>
					        </Table>
						</>
			        ]]>
          </viewer>
        </field>
      </panel>
      <panel name="membersPanel" title="Members" icon="fa-users"
        hideIf="$membersList.length == 0">
        <field name="$membersList" showTitle="false">
          <viewer>
            <![CDATA[
				         <>
				         	{$membersList.map((item, index) => (
				         		<span key={index}>
				         			<Button variant="link" p={0} style={{verticalAlign: "unset"}} onClick={() => $execute("action-auth-users", {userId : item.id})}>{item.name}</Button>
				         		</span>
				         	)).reduce((prev, curr) => prev ? [prev, ', ', curr] : [curr],'')}
				         </>
				        ]]>
          </viewer>
        </field>
      </panel>
      <panel name="spentTimePanel" title="Spent time" icon="fa-clock-o"
        if="__config__.app.isApp('timesheet')" if-module="axelor-human-resource"
        hideIf="$spentTime == 0" showIf="$manageTimeSpent">
        <field name="$spentTime" showTitle="false" colSpan="12">
          <viewer>
						<![CDATA[
				         <>
				         	<p>{$spentTime} <span>{_t('hours')}</span></p> <Box/>
				   	     	<Button variant="link" p={0} style={{verticalAlign: "unset"}} onClick={() => $execute("action-timesheet-line-log-time")}><span>{_t('Log time')}</span></Button> | <Button variant="link" p={0} style={{verticalAlign: "unset"}} onClick={(e) => $execute("project.spent.time")}><span>{_t('Details')}</span></Button>
				         </>
				        ]]>
          </viewer>
        </field>
      </panel>
      <panel name="announcementPanel" title="Latest News" icon="fa-newspaper-o"
        if="__config__.app.isApp('business-support')" if-module="axelor-business-support"
        hideIf="$announcementList.length == 0">
        <field name="$announcementList" showTitle="false" colSpan="12">
          <viewer>
						<![CDATA[
						 <>
						 	 {$announcementList.map((item,index) => (
								 <p key={index}>
                                     <Button variant="link" p={0} style={{verticalAlign: "unset"}} onClick={() => $execute("project.announcement", {announcementId : item.id})}>{item.title}</Button><br/>
							         <span>{_t('Added by')}</span>
                                     <Button variant="link" p={0} style={{verticalAlign: "unset"}} onClick={() => $execute("action-auth-users", {userId : item.createdById})}>{item.createdBy}</Button>
							         <Button variant="link" p={0} style={{verticalAlign: "unset"}} title="{$moment(item.announcementDate).format('MM/DD/YYYY')}" onClick={$action("com.axelor.apps.businesssupport.service.ProjectActivityDashboardBusinessSupportService:getProjectActivityView("+item.id+")")}>{$moment(item.announcementDate).fromNow()}</Button>
							     </p>
						     ))}
						 <Button variant="link" p={0} style={{verticalAlign: "unset"}} onClick={() => $execute("project.announcement")}>View all news</Button>
					     </>
				        ]]>
          </viewer>
        </field>
      </panel>
      <spacer/>
      <spacer/>
      <spacer/>
      <panel name="subprojectPanel" title="Suprojects" icon="fa-gg-circle"
        hideIf="$subprojectList.length == 0">
        <field name="$subprojectList" showTitle="false" colSpan="12">
          <viewer>
					<![CDATA[
				     <>
				         {$subprojectList.map((item, index) => (
				         	<span key={index}>
                                <Button variant="link" p={0} style={{verticalAlign: "unset"}} onClick={() => $execute("project.all", {childProjectId : item.id})}>{item.name}</Button>
				         	</span>
				         )).reduce((prev, curr) => prev ? [prev, ', ', curr] : [curr],'')}
				     </>
			        ]]>
          </viewer>
        </field>
      </panel>
      <field name="$projectId" hidden="true"/>
    </panel>
  </form>


  <form name="project-activity-dashboard-form" title="Project Activity"
    model="com.axelor.utils.db.Wizard" onNew="action-project-activity-dashboard-method-on-new"
    width="large" canNew="false" canEdit="false" canDelete="false">
    <panel name="activityPanel" title="Activity">
      <field name="$dates" showTitle="false" colSpan="12" readonly="true">
        <viewer>
			<![CDATA[
			 <><i><span>{_t('From')}</span> {$startDate} <span>{_t('to')}</span> {$endDate}</i></>
			]]>
        </viewer>
      </field>
      <spacer hidden="true"/>
      <label name="$noData" title="No data to display" hideIf="$activityList"/>
      <field name="$activities" showTitle="false" colSpan="12" readonly="true"
        showIf="$activityList">
        <viewer>
			<![CDATA[
				<>
				    <Box>
				        {$activityList.map((activity,activityIndex) => (
				        <Box key={activityIndex}>
				            {Object.entries(activity).map(([key, value],index) => (

				            Array.isArray(value) &&
				            <Box key={index}>
				                <dt>
				                    <Box mb={2}>{key}</Box>
				                </dt>
				                {value.map((titleList,titleListIndex) => (
				                <Box key={titleListIndex}>
				                    {Object.entries(titleList).map(([title, activityList],activityListIndex) => (

				                    Array.isArray(activityList) &&
				                    <Box key={activityListIndex} m={1}>
				                        <Box as="dd" border borderColor="light-subtle" shadow="xl">
				                            {activityList.map((item,itemIndex) => (
				                            <Box key={itemIndex} ms={itemIndex == 0 || itemIndex.length == 1 ? 0 : 4} mb={3}>
				                                {itemIndex == 0 &&
					                                <Box mb={3}>
					                                	<Box m={2} d="flex" alignItems="center">
						                                    <Box as="strong" flex="1">
						                                        {item.subProjectName && <span>{item.subProjectName} - </span>}
						                                        <Link href={item.objectLink} target="_self">{item.title}</Link>
						                                    </Box>
						                                    <Badge bg={item.utilityClass}>{item.modelName}</Badge>
						                                </Box>
						                                <Box borderTop borderColor="light-subtle" mb={1}/>
						                            </Box>
					                            }
				                                <Box>
				                                    <Box as="ul" mb={1}>
				                                        {item.activity.tracks.map((track,trackIndex) => (
				                                        <li key={trackIndex}>
				                                            <strong>{track.title}</strong> :
				                                            {track.oldDisplayValue && <span> {track.oldDisplayValue} &raquo; </span>}
				                                            {track.oldValue && !track.oldDisplayValue && <span> {track.oldValue} &raquo; </span>}
				                                            <span> {track.displayValue || track.value} </span>
				                                        </li>
				                                        ))}
				                                    </Box>
				                                    <Box ms={2}>
				                                        <Link href={`#/ds/action-auth-users/edit/${item.userId}`} target="_self">{item.user}</Link>
				                                        <span> {_t('updated document')} </span> -
				                                        <Link href="#" title={$moment(item.time).format('MM/DD/YYYY HH:mm')}>
				                                            {$moment(item.time).fromNow()}
				                                        </Link>
				                                    </Box>
				                                </Box>
				                            </Box>
				                            ))}
				                        </Box>
				                    </Box>
				                    ))}
				                </Box>
				                ))}
				            </Box>
				            ))}
				        </Box>
				        ))}
				    </Box>
				</>
			]]>
        </viewer>
      </field>
      <button name="previousBtn" title="&lt;&lt; Previous"
        onClick="action-project-activity-dashboard-method-previous-on-click" colSpan="4"/>
      <button name="nextBtn" title="Next &gt;&gt;"
        onClick="action-project-activity-dashboard-method-next-on-click" colSpan="4"
        hideIf="$moment($endDate).diff(todayDate,'days') == 0"/>
      <field name="$startDate" hidden="true"/>
      <field name="$endDate" hidden="true"/>
    </panel>
  </form>

  <action-view name="action-project-db-my-tasks-to-do" title="My tasks to do"
    model="com.axelor.apps.project.db.ProjectTask">
    <view type="grid" name="project-task-grid"/>
    <view type="form" name="project-task-form"/>
    <domain><![CDATA[
      (self.assignedTo = :__user__ AND self.status.isCompleted = false) AND
      (self.taskDeadline <= current_date OR self.taskDate <= current_date)
    ]]></domain>
  </action-view>

  <action-view name="action-project-db-my-tasks-due" title="My tasks due"
    model="com.axelor.apps.project.db.ProjectTask">
    <view type="grid" name="project-task-grid"/>
    <view type="form" name="project-task-form"/>
    <domain><![CDATA[
      (self.assignedTo = :__user__  AND self.status.isCompleted = false) AND
      (self.taskDeadline <= current_date)
    ]]></domain>
  </action-view>

  <action-view name="action-project-db-my-today-planning" title="My today planning"
    model="com.axelor.apps.project.db.ProjectPlanningTime">
    <view type="grid" name="project-planning-db-grid"/>
    <view type="form" name="project-planning-time-form"/>
    <domain>self.startDateTime &lt; :__date__ AND self.endDateTime &gt; :__date__ AND
      self.employee.id = :_empId</domain>
    <context name="_empId" expr="eval: __user__.employee?.id"/>
  </action-view>

  <action-view name="action-project-db-my-upcomming-planning"
    title="My upcoming planning" model="com.axelor.apps.project.db.ProjectPlanningTime">
    <view type="grid" name="project-planning-db-grid"/>
    <view type="form" name="project-planning-time-form"/>
    <domain>self.startDateTime &gt; :__date__ AND self.employee.id = :_empId</domain>
    <context name="_empId" expr="eval: __user__.employee?.id"/>

  </action-view>

  <action-view name="action-project-dashboard-view-open-gantt" title="Gantt"
    model="com.axelor.apps.project.db.ProjectTask">
    <view type="gantt" name="task-gantt"/>
    <view type="grid" name="project-task-grid"/>
    <view type="form" name="project-task-form"/>
    <domain>self.project.id IN :_projectIds</domain>
    <context name="_project"
      expr="eval: projectId ? __repo__(Project).find(projectId) : __user__.activeProject"/>
    <context name="_projectIds"
      expr="call:com.axelor.apps.project.service.ProjectToolService:getActiveProjectIds()"
      if="!projectId"/>
    <context name="_projectIds"
      expr="call:com.axelor.apps.project.service.ProjectToolService:getRelatedProjectIds(__repo__(Project).find(projectId))"
      if="projectId"/>
  </action-view>

  <action-view name="action-project-dashboard-view-per-user-calendar"
    title="Task Calendar" model="com.axelor.apps.project.db.ProjectTask">
    <view type="calendar" name="project-task-per-user-calendar"/>
    <view type="form" name="project-task-form"/>
    <domain>self.project.id IN :_projectIds</domain>
    <context name="_project"
      expr="eval: projectId ? __repo__(Project).find(projectId) : __user__.activeProject"/>
    <context name="_projectIds"
      expr="call:com.axelor.apps.project.service.ProjectToolService:getActiveProjectIds()"
      if="!projectId"/>
    <context name="_projectIds"
      expr="call:com.axelor.apps.project.service.ProjectToolService:getRelatedProjectIds(__repo__(Project).find(projectId))"
      if="projectId"/>
  </action-view>

  <action-method name="action-project-dashboard-method-on-new">
    <call class="com.axelor.apps.project.web.ProjectDashboardController" method="getData"/>
  </action-method>

  <action-method name="action-project-activity-dashboard-method-on-new">
    <call class="com.axelor.apps.project.web.ProjectActivityDashboardController"
      method="getData"/>
  </action-method>

  <action-method name="action-project-activity-dashboard-method-previous-on-click">
    <call class="com.axelor.apps.project.web.ProjectActivityDashboardController"
      method="getPreviousData"/>
  </action-method>

  <action-method name="action-project-activity-dashboard-method-next-on-click">
    <call class="com.axelor.apps.project.web.ProjectActivityDashboardController"
      method="getNextData"/>
  </action-method>

  <action-method name="action-project-dashboard-show-tasks-opened-per-category">
    <call class="com.axelor.apps.project.web.ProjectDashboardController"
      method="showTasksOpenedPerCategory"/>
  </action-method>

  <action-method name="action-project-dashboard-show-tasks-closed-per-category">
    <call class="com.axelor.apps.project.web.ProjectDashboardController"
      method="showTasksClosedPerCategory"/>
  </action-method>

  <action-method name="action-project-dashboard-show-tasks-per-category">
    <call class="com.axelor.apps.project.web.ProjectDashboardController"
      method="showTasksPerCategory"/>
  </action-method>

</object-views>
