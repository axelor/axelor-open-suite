<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views
              http://axelor.com/xml/ns/object-views/object-views_7.1.xsd">

  <grid name="contract-grid" title="Contracts" model="com.axelor.apps.contract.db.Contract"
    orderBy="-contractId">
    <hilite if="statusSelect == 1" color="info"/>
    <field name="contractId" width="120"/>
    <field name="name"/>
    <field name="company" if="__config__.app.getApp('base')?.getEnableMultiCompany()"/>
    <field name="partner"/>
    <field name="startDate"/>
    <field name="currentContractVersion.supposedEndDate"/>
    <field name="tradingName" form-view="trading-name-form" grid-view="trading-name-grid"
      if="__config__.app.getApp('base')?.enableTradingNamesManagement"/>
    <field name="statusSelect"/>
    <field name="currency" hidden="true"/>
    <field name="currency.numberOfDecimals" hidden="true"/>
    <field name="currentContractVersion.initialExTaxTotalPerYear"
      x-scale="currency.numberOfDecimals"/>
    <field name="currentContractVersion.yearlyExTaxTotalRevalued"
      x-scale="currency.numberOfDecimals"/>
  </grid>

  <form name="contract-form" title="Contract" model="com.axelor.apps.contract.db.Contract"
    width="large" readonlyIf="statusSelect == 3" onNew="action-contract-group-on-new"
    onLoad="action-contract-group-on-load" onSave="action-contract-method-is-valid">
    <toolbar>
      <button name="printContractBtn" title="Print" hidden="true" icon="fa-print"
        onClick="notImplementedYet"/>
    </toolbar>
    <panel name="mainPanel">
      <panel colSpan="12" name="generalInfoPanel">
        <field name="currentContractVersion.statusSelect" showTitle="false" readonly="true"
          colSpan="6" widget="NavSelect"/>
        <field name="$viewerTags" showTitle="false" readonly="true" colSpan="6">
          <viewer
            depends="contractTypeSelect,targetTypeSelect,statusSelect,contractId,versionNumber"><![CDATA[
					<>
						<Box as="h4" d="flex" justifyContent="flex-end" gap="4" alignItems="center">
							<Box as="span" me={2}><span>{_t('Contract')}</span> {contractId && <span> - {contractId} </span>} {versionNumber > 0 && <span> - {versionNumber}</span>}</Box>

                            {contractTypeSelect == 1 && <Badge bg="success">{_t('Billing')}</Badge>}
							{contractTypeSelect == 2 && <Badge bg="secondary">{_t('Framework')}</Badge>}

							{targetTypeSelect == 1 && <Badge bg="info">{_t('Customer')}</Badge>}
							{targetTypeSelect == 2 && <Badge bg="warning">{_t('Supplier')}</Badge>}
							{targetTypeSelect == 3 && <Badge bg="info">{_t('YEB/YER Customer')}</Badge>}
							{targetTypeSelect == 4 && <Badge bg="warning">{_t('YEB/YER Supplier')}</Badge>}

							{statusSelect == 1 && <Badge bg="secondary">{_t('Draft')}</Badge>}
							{statusSelect == 2 && <Badge bg="info">{_t('Active')}</Badge>}
							{statusSelect == 3 && <Badge bg="danger">{_t('Closed')}</Badge>}
						</Box>
					</>
                    ]]></viewer>
        </field>
        <field name="name" colSpan="12" css="highlight"
          hideIf="$readonly() &amp;&amp; !name &amp;&amp; statusSelect >= 2"/>
        <panel name="companyPanel" itemSpan="4" colSpan="12">
          <field name="company" readonlyIf="statusSelect >= 2" canEdit="false"/>
          <field if="__config__.app.getApp('contract')?.getIsInvoicingManagement()"
            name="currency" readonlyIf="statusSelect >= 2" canEdit="false"/>
          <field name="priceList"
            readonlyIf="(currentContractVersion?.contractLineList &amp;&amp; currentContractVersion?.contractLineList.length > 0) || statusSelect >= 2"
            onSelect="action-contract-method-price-list-domain" canEdit="false"
            form-view="price-list-form" grid-view="price-list-grid" hideIf="company == null"
            colSpan="3"/>
        </panel>
        <panel name="partnerPanel" colSpan="8">
          <field name="partner" onSelect="action-contract-attrs-domains-partner"
            showIf="targetTypeSelect" readonlyIf="statusSelect >= 2" canEdit="false"
            onChange="action-contract-group-partner-onchange" required="true"
            form-view="partner-form"/>
          <field name="invoicedPartner" showIf="targetTypeSelect == 1 &amp;&amp; partner"
            canEdit="false" form-view="partner-form" readonlyIf="statusSelect >= 2" required="true"
            onSelect="action-contract-method-set-invoiced-partner-domain"/>
        </panel>
        <field if="__config__.app.getApp('base')?.enableTradingNamesManagement"
          name="tradingName"
          readonlyIf="(contractLineList &amp;&amp; contractLineList.length > 0) || statusSelect >= 2"
          canEdit="false" domain=":company MEMBER OF self.companySet" form-view="trading-name-form"
          grid-view="trading-name-grid" colSpan="3"
          requiredIf="company.tradingNameSet != null &amp;&amp; company.tradingNameSet.length != 0"
          hideIf="company.tradingNameSet == null || company.tradingNameSet.length == 0"
          hidden="true"/>
        <label name="tradingNameLabel"
          if="!(__config__.app.getApp('base')?.enableTradingNamesManagement)" colSpan="3"/>
        <field name="project" colSpan="8" domain="self.clientPartner=:partner" hidden="true"
          showIf="contractTypeSelect == 1"/>
        <field name="company.tradingNameSet" hidden="true"/>
      </panel>
    </panel>
    <panel sidebar="true" name="actionPanel">
      <panel name="templatePanel" hidden="true"
        showIf="!id &amp;&amp; (statusSelect == 1 || currentContractVersion.statusSelect == 1 || currentContractVersion.statusSelect == 2)"
        stacked="true" readonlyIf="!partner">
        <field name="$contractTemplate" title="Contract template to use" type="MANY-TO-ONE"
          canNew="false" canEdit="false" target="com.axelor.apps.contract.db.ContractTemplate"
          domain="self.contractTypeSelect = :contractTypeSelect AND self.targetTypeSelect = :targetTypeSelect"/>
        <button name="copyFromTemplateBtn" title="Use this template"
          readonlyIf="!$contractTemplate"
          prompt="Do you really wish to fill your contract based on this template ?"
          onClick="save,action-contract-method-copy-from-template"/>
      </panel>
      <panel stacked="true" name="btnsPanel">
        <field name="nextVersion" hidden="true"/>
        <button if="__config__.app.getApp('contract')?.isAmendmentManagement"
          name="newVersionBtn" title="Create an amendment"
          showIf="id &amp;&amp; nextVersion == null &amp;&amp; currentContractVersion.statusSelect == 3"
          onClick="save,action-view-contract-add-version"/>
        <button if="__config__.app.getApp('contract')?.isAmendmentManagement"
          name="showNextVersionBtn" title="Show next amendment"
          showIf="id &amp;&amp; nextVersion != null &amp;&amp; statusSelect != 3"
          onClick="save,action-view-contract-show-version"/>
        <button if="__config__.app.getApp('contract')?.isAmendmentManagement"
          name="deleteNextVersionBtn" title="Delete next amendment"
          showIf="id &amp;&amp; nextVersion != null &amp;&amp; statusSelect != 3"
          onClick="save,action-contract-method-delete-next-version"/>
        <button name="waitingBtn" title="Put on-hold"
          showIf="id &amp;&amp; currentContractVersion.statusSelect == 1"
          onClick="save,action-contract-method-waiting"/>
        <button name="ongoingBtn" title="Activate contract"
          showIf="id &amp;&amp; currentContractVersion.statusSelect == 2"
          onClick="action-contract-group-ongoing"/>
        <button if="__config__.app.getApp('contract')?.isRenewalManagement" name="renewBtn"
          title="Renew" hidden="true"
          showIf="id &amp;&amp; currentContractVersion.statusSelect == 3"
          onClick="save,action-contract-method-renew"/>
        <button name="generateSaleOrderBtn" title="Generate sale order"
          onClick="action-contract-method-generate-sale-order" hidden="true"
          showIf="targetTypeSelect == 1 &amp;&amp; currentContractVersion.statusSelect == 3 &amp;&amp; contractTypeSelect == 2"/>
        <button name="generatePurchaseOrderBtn" title="Generate purchase order"
          onClick="action-contract-method-generate-purchase-order" hidden="true"
          showIf="targetTypeSelect == 2 &amp;&amp; currentContractVersion.statusSelect == 3 &amp;&amp; contractTypeSelect == 2"/>
      </panel>
    </panel>
    <panel name="contractTypePanel" title="Contract type" sidebar="true" showIf="!$readonly()">
      <field name="contractTypeSelect"/>
      <field name="targetTypeSelect" hidden="true" showIf="contractTypeSelect == 2"
        selection-in="[1,2]"/>
    </panel>
    <panel name="amountsPanel" showTitle="false"
      showIf="currentContractVersion.isPeriodicInvoicing &amp;&amp; targetTypeSelect &lt;= 2"
      sidebar="true">
      <panel name="pricesPerYearPanel" title="Prices per year">
        <field name="currentContractVersion" showTitle="false" colSpan="12"
          x-show-icons="false" readonly="true">
          <viewer
            depends="initialExTaxTotalPerYear,yearlyExTaxTotalRevalued,contract.currency.symbol,contract.currency.numberOfDecimals,contract.isToRevaluate">
          <![CDATA[
          <>
            <Box mt={2} fontWeight="bold">{_t('Initial ex tax total per year')}</Box>
            <Box fontWeight="bold" fontSize={4}>{contract.currency.symbol}{parseFloat(initialExTaxTotalPerYear).toFixed(contract.currency.numberOfDecimals)}</Box>
            {contract.isToRevaluate && <Box borderTop borderColor="inherit" m={1}/>}
            {contract.isToRevaluate && <Box mt={2} fontWeight="bold">{_t('Yearly ex tax total revalued')}</Box>}
            {contract.isToRevaluate && <Box fontWeight="bold" fontSize={4}>{contract.currency.symbol}{parseFloat(yearlyExTaxTotalRevalued).toFixed(contract.currency.numberOfDecimals)}</Box>}
          </>
          ]]>
          </viewer>
        </field>
      </panel>
      <panel name="InvoicingAmountsPanel" title="Invoicing amounts">
        <field name="currentContractVersion" showTitle="false" colSpan="12"
          x-show-icons="false" readonly="true">
          <viewer
            depends="totalInvoicedAmount,totalPaidAmount,contract.currency.symbol,contract.currency.numberOfDecimals">
            <![CDATA[
          <>
            <Box mt={2} fontWeight="bold">{_t('Total invoiced amount')}</Box>
            <Box fontWeight="bold" fontSize={4}>{contract.currency.symbol}{parseFloat(totalInvoicedAmount).toFixed(contract.currency.numberOfDecimals)}</Box>
            <Box borderTop borderColor="inherit" m={1}/>
            <Box mt={2} fontWeight="bold">{_t('Total paid amount')}</Box>
            <Box fontWeight="bold" fontSize={4}>{contract.currency.symbol}{parseFloat(totalPaidAmount).toFixed(contract.currency.numberOfDecimals)}</Box>
          </>
          ]]>
          </viewer>
        </field>
      </panel>
    </panel>
    <panel sidebar="true">
      <panel name="contractDatesPanel" title="Contract Dates" hidden="true" showIf="id"
        itemSpan="6">
        <field name="createdOn"/>
        <field name="createdBy"/>
        <field name="startDate" readonly="true" showIf="statusSelect >= 2"/>
        <field name="endDate" hidden="true" showIf="statusSelect == 3"/>
      </panel>
      <panel name="currentVersionPanel" title="Current amendment">
        <field name="currentContractVersion" showTitle="false" colSpan="12"
          x-show-icons="false">
          <editor x-viewer="true" x-show-on-new="true" x-show-titles="true" itemSpan="12">
            <panel name="activationPanel">
              <panel hideIf="statusSelect >= 3" colSpan="12" itemSpan="12">
                <field name="supposedActivationDate"
                  onChange="action-method-contract-version-check-supposed-activation-date,save,action-method-contract-version-update-contract-lines"/>
                <field name="supposedEndDate"/>
              </panel>
              <panel hidden="true" readonly="true" showIf="statusSelect >= 3" colSpan="12">
                <field name="activatedByUser" colSpan="6"/>
                <field name="activationDateTime" colSpan="6"/>
                <panel colSpan="12">
                  <field name="supposedEndDate" hidden="true" readonly="true"
                    showIf="statusSelect == 3" colSpan="12"/>
                  <field name="endDateTime" hidden="true" readonly="true"
                    showIf="statusSelect == 4" colSpan="12"/>
                </panel>
              </panel>
            </panel>
            <panel showIf="id" name="creationPanel">
              <field name="createdOn"/>
              <field name="createdBy"/>
            </panel>
          </editor>
        </field>
        <field name="firstPeriodEndDate" title="First period invoicing end date" hidden="true"
          showIf="statusSelect == 1 &amp;&amp; isInvoicingManagement &amp;&amp; currentContractVersion.isPeriodicInvoicing"
          colSpan="12" requiredIf="$get('currentContractVersion.isPeriodicInvoicing')"/>
      </panel>
    </panel>
    <panel name="nextVersionPanel" title="Next amendment" sidebar="true" showIf="nextVersion"
      canCollapse="true" readonly="true">
      <field name="nextVersion" showTitle="false" colSpan="12" x-show-icons="false">
        <editor x-viewer="true" x-show-on-new="true" x-show-titles="true" itemSpan="12">
          <panel name="activationPanel">
            <panel hideIf="statusSelect >= 3" colSpan="12" itemSpan="12">
              <field name="supposedActivationDate"
                onChange="action-method-contract-version-check-supposed-activation-date,save,action-method-contract-version-update-contract-lines"/>
              <field name="supposedEndDate"/>
            </panel>
            <panel hidden="true" readonly="true" showIf="statusSelect >= 3" colSpan="12">
              <field name="activatedByUser" colSpan="12"/>
              <field name="activationDateTime" colSpan="12"/>
              <panel colSpan="12">
                <field name="supposedEndDate" hidden="true" readonly="true"
                  showIf="statusSelect == 3" colSpan="12"/>
                <field name="endDateTime" hidden="true" readonly="true"
                  showIf="statusSelect == 4" colSpan="12"/>
              </panel>
            </panel>
          </panel>
          <panel showIf="id" name="creationPanel">
            <field name="createdOn"/>
            <field name="createdBy"/>
          </panel>
        </editor>
      </field>

      <field name="firstPeriodEndDate" title="First period invoicing end date" hidden="true"
        showIf="statusSelect == 1 &amp;&amp; isInvoicingManagement &amp;&amp; currentContractVersion.isPeriodicInvoicing"
        colSpan="12" requiredIf="$get('currentContractVersion.isPeriodicInvoicing')"/>
    </panel>
    <panel title="Notes" sidebar="true" name="notesPanel" canCollapse="true">
      <field name="note" showTitle="false"/>
    </panel>
    <panel-tabs name="mainPanelTab"
      hideIf="!partner || ($enableTradingNamesManagement &amp;&amp; company.tradingNameSet != null &amp;&amp; company.tradingNameSet.length != 0 &amp;&amp; tradingName == null)">
      <panel title="Content" name="contentPanel">
        <panel name="contractLineListPanel" hidden="true"
          showIf="isInvoicingManagement &amp;&amp; targetTypeSelect &lt;= 2" colSpan="12">
          <field name="currentContractVersion" showTitle="false" colSpan="12"
            x-show-icons="false">
            <editor x-viewer="true" x-show-on-new="true" x-show-titles="false">
              <field name="contractLineList" showTitle="false" colSpan="12"
                form-view="contract-line-form" grid-view="contract-line-grid"
                onChange="action-contract-method-contract-line-list-on-change"/>
            </editor>
          </field>
        </panel>
        <panel name="yerContractLineListPanel" hidden="true"
          showIf="isInvoicingManagement &amp;&amp; targetTypeSelect > 2" colSpan="12">
          <field name="currentContractVersion" showTitle="false" colSpan="12"
            x-show-icons="false">
            <editor x-viewer="true" x-show-on-new="true" x-show-titles="false">
              <field name="contractLineList" showTitle="false" colSpan="12"
                form-view="contract-line-yer-form" grid-view="contract-line-yer-grid"/>
            </editor>
          </field>
        </panel>
        <field name="consumptionLineList"
          showIf="isConsumptionManagement &amp;&amp; targetTypeSelect &lt; 2" readonlyIf="!id"
          colSpan="12" form-view="consumption-line-form" grid-view="consumption-line-grid"/>
        <field name="additionalBenefitContractLineList" hidden="true"
          showIf="isAdditionaBenefitManagement &amp;&amp; targetTypeSelect &lt;= 2" readonlyIf="!id"
          colSpan="12" form-view="additional-contract-line-form"
          grid-view="additional-contract-line-grid"
          onChange="action-contract-method-additional-contract-line-list-on-change"/>
        <panel name="currentContractVersionDescriptionPanel" colSpan="12">
          <field name="currentContractVersion" showTitle="false" colSpan="12"
            x-show-icons="false">
            <editor x-viewer="true" x-show-on-new="true" x-show-titles="true">
              <field name="description" colSpan="9" widget="html"/>
            </editor>
          </field>
        </panel>
      </panel>
      <panel name="invoicingPanel" title="Invoicing" hidden="true"
        showIf="contractTypeSelect == 1 &amp;&amp; isInvoicingManagement &amp;&amp; statusSelect >= 2">
        <field name="invoicePeriodStartDate"
          showIf="currentContractVersion.isPeriodicInvoicing" colSpan="4"
          requiredIf="isInvoicingManagement &amp;&amp; statusSelect >= 2 &amp;&amp; currentContractVersion.isPeriodicInvoicing"
          onChange="action-contract-validate-invoice-period-start-date-onchange"/>
        <field name="invoicePeriodEndDate" showIf="currentContractVersion.isPeriodicInvoicing"
          colSpan="4"
          requiredIf="isInvoicingManagement &amp;&amp; statusSelect >= 2 &amp;&amp; currentContractVersion.isPeriodicInvoicing"
          onChange="action-contract-validate-invoice-period-end-date-onchange"/>
        <field name="invoicingDate" colSpan="4"/>
        <button name="invoicingBtn" title="Invoicing"
          showIf="id &amp;&amp; currentContractVersion.statusSelect == 3"
          onClick="save,action-contract-method-invoicing"/>
        <panel-dashlet name="contractInvoicingPanel" readonly="false" colSpan="12"
          height="350" action="action-contract-view-invoicing"/>
      </panel>
      <panel name="terminationPanel" title="Termination" hidden="true"
        showIf="statusSelect != 1" onTabSelect="action-contract-attrs-show-close-btn">
        <panel name="renewalPanel"
          if="__config__.app.getApp('contract')?.getIsRenewalManagement()" title="Renewal"
          hidden="true"
          showIf="currentContractVersion.statusSelect == 3 &amp;&amp; (renewalNumber > 0 || currentContractVersion.isTacitRenewal)"
          colSpan="12">
          <field name="renewalNumber" hidden="true" readonly="true" showIf="renewalNumber > 0"/>
          <field name="lastRenewalDate" hidden="true" readonly="true"
            showIf="renewalNumber > 0"/>
          <field name="currentContractVersion" showTitle="false" x-show-icons="false">
            <editor x-viewer="true" x-show-on-new="true" x-show-titles="true">
              <field name="doNotRenew" colSpan="12"/>
            </editor>
          </field>
        </panel>
        <panel name="terminatePanel" title="Terminate" colSpan="12">
          <panel colSpan="12">
            <button name="closeContractBtn" title="Close contract"
              onClick="action-contract-method-close" hidden="true" colSpan="3"/>
          </panel>
          <field name="terminatedDate" readonlyIf="terminatedManually" colSpan="3"/>
          <panel name="terminationInfoPanel" colSpan="9">
            <panel name="terminationDetailPanel" hidden="true" showIf="terminatedManually"
              colSpan="12">
              <field name="terminatedByUser" readonly="true" colSpan="4"/>
              <field name="terminationDemandDate" hidden="true" readonly="true"
                showIf="terminationDemandDate" colSpan="4"/>
              <field name="terminatedManually" hidden="true" readonly="true"
                showIf="terminatedManually" colSpan="4"/>
            </panel>
            <panel name="durationPanel"
              if="__config__.app.getApp('contract')?.isConfigContract" hidden="true"
              showIf="id &amp;&amp; (currentContractVersion.isWithEngagement || currentContractVersion.isWithPriorNotice) &amp;&amp; !terminatedManually"
              colSpan="12">
              <panel name="engagementPanel" hidden="true" readonly="true"
                showIf="currentContractVersion.isWithEngagement" colSpan="6">
                <field name="engagementStartDate" colSpan="6"/>
                <field name="currentContractVersion.engagementDuration" colSpan="6"/>
              </panel>
              <panel hidden="true" readonly="true"
                showIf="currentContractVersion.isWithPriorNotice" colSpan="3"
                name="priorNoticeDurationPanel">
                <field name="currentContractVersion.priorNoticeDuration" colSpan="12"/>
              </panel>
              <panel hidden="true" readonly="true"
                showIf="currentContractVersion.isTacitRenewal" colSpan="3"
                name="renewalDurationPanel">
                <field name="currentContractVersion.renewalDuration" colSpan="12"/>
              </panel>
            </panel>
          </panel>
          <button name="terminatedBtn" title="Terminate"
            hideIf="terminatedManually || statusSelect == 3" colSpan="3"
            onClick="save,action-contract-method-terminated"/>
        </panel>
      </panel>
      <panel if="__config__.app.getApp('contract')?.isConfigContract" title="Config."
        name="configPanel">
        <panel name="generalSubPanel" title="General"
          if="__config__.app.getApp('contract')?.isInvoicingManagement" colSpan="12">
          <field name="isInvoicingManagement"
            onChange="action-contract-group-invoicing-management-change" widget="boolean-switch"/>
          <panel name="managementPanel" hidden="true" showIf="isInvoicingManagement"
            colSpan="12">
            <field name="isAdditionaBenefitManagement"
              if="__config__.app.getApp('contract')?.isAdditionalBenefitManagement"
              widget="boolean-switch" colSpan="4" hideIf="targetTypeSelect > 2"/>
            <field name="currentContractVersion" showTitle="false" colSpan="8"
              x-show-icons="false">
              <editor x-viewer="true" x-show-on-new="true" x-show-titles="true">
                <panel colSpan="6">
                  <field name="paymentMode" colSpan="6" widget="SuggestBox" canEdit="false"
                    form-view="payment-mode-form" grid-view="payment-mode-grid"
                    onSelect="action-contract-attrs-set-payment-mode-domain"/>
                  <field name="paymentCondition" colSpan="6" widget="SuggestBox"
                    canEdit="false" form-view="payment-condition-form"
                    grid-view="payment-condition-grid"
                    onSelect="action-contract-attrs-payment-condition-set-domain"/>
                </panel>
              </editor>
            </field>
          </panel>

        </panel>
        <panel name="configSubPanel" title="Invoicing"
          if="__config__.app.getApp('contract')?.isInvoicingManagement" hidden="true"
          showIf="contractTypeSelect == 1 &amp;&amp; isInvoicingManagement" colSpan="12">
          <field name="isGroupedInvoicing" widget="boolean-switch" colSpan="4"/>
          <spacer/>
          <field name="isConsumptionManagement"
            if="__config__.app.getApp('contract')?.isConsumptionManagement"
            onChange="action-contract-record-update-field-in-version" widget="boolean-switch"
            colSpan="4" hideIf="targetTypeSelect > 2"/>
          <field name="currentContractVersion"
            if="__config__.app.getApp('contract')?.isConsumptionManagement" showTitle="false"
            hidden="true" showIf="isConsumptionManagement" x-show-icons="false">
            <editor x-viewer="true" x-show-on-new="true" x-show-titles="true">
              <field name="isConsumptionBeforeEndDate" colSpan="12" widget="boolean-switch"
                hideIf="targetTypeSelect > 2"/>
            </editor>
          </field>

          <panel name="invoicingSubPanel" hidden="true" showIf="isInvoicingManagement"
            colSpan="12">
            <field name="currentContractVersion" showTitle="false" colSpan="12"
              x-show-icons="false">
              <editor x-viewer="true" x-show-on-new="true" x-show-titles="true">
                <panel colSpan="6">
                  <field name="automaticInvoicing" colSpan="4" widget="boolean-switch"/>
                  <field name="invoicingMomentSelect" hidden="true"
                    showIf="automaticInvoicing" colSpan="4" requiredIf="automaticInvoicing"/>
                  <field name="numberOfDays"
                    showIf="invoicingMomentSelect == 3 || invoicingMomentSelect == 4" colSpan="4"/>
                </panel>
              </editor>
            </field>
            <field name="currentContractVersion" showTitle="false" colSpan="12"
              x-show-icons="false">
              <editor x-viewer="true" x-show-on-new="true" x-show-titles="true"
                onNew="action-record-contract-version-default-record">
                <field name="isPeriodicInvoicing" colSpan="3" widget="boolean-switch"
                  hidden="true" showIf="$contractTypeSelect == 1"/>
                <panel hidden="true" showIf="isPeriodicInvoicing" colSpan="9">
                  <field name="invoicingDuration" domain="self.applicationTypeSelect = 2"
                    colSpan="4" canEdit="false" requiredIf="isPeriodicInvoicing"/>
                  <field name="isTimeProratedInvoice" colSpan="4" widget="boolean-switch"/>
                  <field name="isVersionProratedInvoice" hidden="true"
                    showIf="isTimeProratedInvoice" colSpan="4" widget="boolean-switch"/>
                </panel>
                <field name="$contractTypeSelect" hidden="true"/>
              </editor>
            </field>
          </panel>
        </panel>
        <panel if="__config__.app.getApp('contract')?.isRenewalManagement" title="Renewal"
          colSpan="12" name="renewalDetailsPanel">
          <field name="currentContractVersion" showTitle="false" colSpan="12"
            x-show-icons="false">
            <editor x-viewer="true" x-show-on-new="true" x-show-titles="true">
              <field name="isTacitRenewal" colSpan="3" widget="boolean-switch"/>
              <field name="renewalDuration" domain="self.applicationTypeSelect = 2"
                hidden="true" showIf="isTacitRenewal" colSpan="3" requiredIf="isTacitRenewal"/>
              <field name="isAutoEnableVersionOnRenew" hidden="true" showIf="isTacitRenewal"
                colSpan="6" widget="boolean-switch"/>
            </editor>
          </field>
        </panel>
        <field name="currentContractVersion" showTitle="false" colSpan="12"
          x-show-icons="false">
          <editor x-viewer="true" x-show-on-new="true" x-show-titles="true">
            <panel title="Engagement">
              <field name="isWithEngagement" colSpan="6" widget="boolean-switch"/>
              <field name="engagementDuration" domain="self.applicationTypeSelect = 2"
                showIf="isWithEngagement" colSpan="6" canNew="true" requiredIf="isWithEngagement"/>
              <field name="engagementStartFromVersion" showIf="isWithEngagement" colSpan="12"
                requiredIf="isWithEngagement" widget="boolean-switch"/>
            </panel>
            <panel title="Prior notice">
              <field name="isWithPriorNotice" widget="boolean-switch"/>
              <field name="priorNoticeDuration" domain="self.applicationTypeSelect = 2"
                showIf="isWithPriorNotice" canNew="true" requiredIf="isWithPriorNotice"/>
            </panel>
          </editor>
        </field>
      </panel>

      <panel name="commercialConditionPanel" title="Commercial condition" hidden="true"
        showIf="targetTypeSelect == 1 &amp;&amp; currentContractVersion.isPeriodicInvoicing">
        <field name="isToRevaluate" widget="boolean-switch" colSpan="12"
          onChange="action-contract-method-hide-fields-list"/>
        <field name="revaluationPeriod"
          requiredIf="targetTypeSelect == 1 &amp;&amp; isToRevaluate"
          domain="self.applicationTypeSelect = 2" hidden="true" showIf="isToRevaluate"/>
        <field name="revaluationFormula"
          requiredIf="targetTypeSelect == 1 &amp;&amp; isToRevaluate" hidden="true"
          showIf="isToRevaluate"/>
        <field name="index1" requiredIf="targetTypeSelect == 1 &amp;&amp; isToRevaluate"
          hidden="true" showIf="isToRevaluate"/>
        <field name="index1Date" requiredIf="targetTypeSelect == 1 &amp;&amp; isToRevaluate"
          hidden="true" showIf="isToRevaluate"/>
        <field name="index2" hidden="true" showIf="isToRevaluate"/>
        <field name="index2Date" hidden="true" showIf="isToRevaluate"/>
        <field name="endOfApplicationDate" hidden="true" showIf="isToRevaluate"/>
        <field name="lastRevaluationDate" readonly="true" hidden="true" showIf="isToRevaluate"/>
        <field name="nextRevaluationDate" hidden="true" showIf="isToRevaluate"/>
      </panel>

      <panel-related name="versionHistoryPanel" hidden="true" readonly="true"
        showIf="versionHistory &amp;&amp; versionHistory.length > 0" field="versionHistory"
        form-view="contract-archived-version-form">
        <field name="createdOn"/>
        <field name="activationDateTime"/>
        <field name="endDateTime"/>
        <field name="statusSelect"/>
      </panel-related>

      <panel-dashlet name="generatedSaleOrdersPanel" title="Sale orders"
        action="action-contract-view-generated-sale-orders" hidden="true"
        showIf="id &amp;&amp; targetTypeSelect == 1 &amp;&amp; contractTypeSelect == 2"/>

      <panel-dashlet name="generatedPurchaseOrdersPanel" title="Purchase orders"
        action="action-contract-view-generated-purchase-orders" hidden="true"
        showIf="id &amp;&amp; targetTypeSelect == 2 &amp;&amp; contractTypeSelect == 2"/>

      <panel name="contractFileListPanel" title="Files" colSpan="12">
        <field name="currentContractVersion" showTitle="false" colSpan="12"
          x-show-icons="false">
          <editor x-viewer="true" x-show-on-new="true" x-show-titles="true">
            <field name="metaFile" colSpan="3" widget="binary-link"/>
            <field form-view="file-form" grid-view="contract-file-grid"
              name="contractFileList" readonlyIf="statusSelect !== 1 "
              domain="self.contractVersion.id = currentContractVersion.id AND self.fileTypeSelect = 1"
              colSpan="12"/>
          </editor>
        </field>
      </panel>
    </panel-tabs>
    <panel-mail name="mailsPanel">
      <mail-messages limit="4"/>
      <mail-followers/>
    </panel-mail>
  </form>

  <action-attrs name="action-contract-attrs-show-close-btn">
    <attribute for="closeContractBtn" name="hidden"
      expr="terminatedDate == null || statusSelect != 2 || __config__.date &lt; terminatedDate"/>
  </action-attrs>

  <action-method name="action-contract-method-close">
    <call class="com.axelor.apps.contract.web.ContractController" method="close"/>
  </action-method>

  <action-group name="action-contract-group-on-new">
    <action name="action-contract-record-default"/>
    <action name="action-contract-attrs-partner-payment-config"/>
    <action name="action-contract-record-get-trading-names-management-config"/>
  </action-group>

  <action-group name="action-contract-group-on-load">
    <action name="action-contract-attrs-readonly-by-config"/>
    <action name="action-contract-readonly-if-unchangable"/>
    <action name="action-contract-method-hide-fields-list"/>
    <action name="action-contract-method-contract-line-list-on-change"/>
    <action name="action-contract-method-additional-contract-line-list-on-change"/>
    <action name="action-contract-record-get-trading-names-management-config"/>
  </action-group>

  <action-group name="action-contract-group-invoicing-management-change">
    <action name="action-contract-group-reset-booleans-config-sub-panel"
      if="isInvoicingManagement == false"/>
    <action name="action-contract-attrs-required-payment-config"/>
    <action name="action-contract-attrs-partner-payment-config"/>
  </action-group>

  <action-group name="action-contract-group-reset-booleans-config-sub-panel">
    <action name="action-contract-record-reset-booleans-config-sub-panel"/>
    <action name="action-contract-version-record-reset-booleans-config-sub-panel"/>
  </action-group>

  <action-attrs name="action-contract-attrs-readonly-by-config">
    <attribute for="currentContractVersionDescriptionPanel" name="readonly"
      expr="eval: __config__.app.getApp('contract')?.isUnchangableContract &amp;&amp; statusSelect > 1"/>
  </action-attrs>

  <action-record name="action-contract-record-default"
    model="com.axelor.apps.contract.db.Contract">
    <field name="statusSelect" expr="eval: 1"/>
    <field name="company" expr="eval: __user__.activeCompany"/>
    <field name="targetTypeSelect" expr="eval: _xTargetType" if="_xTargetType != null"/>
    <field name="contractTypeSelect" expr="eval: _isFrameworkContract != true ? 1 : 2"/>
    <field name="currentContractVersion"
      expr="action:action-record-contract-version-default-record"/>
    <field name="partner" expr="eval: _clientPartner" if="_clientPartner != null"/>
    <field name="currency" expr="eval: __user__.activeCompany?.currency"/>
    <field name="project" expr="eval:_project" if="_project != null"/>
    <field name="tradingName" expr="eval: __user__?.tradingName"/>
  </action-record>

  <action-record name="action-record-contract-version-default-record"
    model="com.axelor.apps.contract.db.ContractVersion">
    <field name="statusSelect" expr="eval: 1"/>
    <field name="$contractTypeSelect" expr="eval: __parent__?.contractTypeSelect"/>
  </action-record>

  <action-record model="com.axelor.apps.contract.db.Contract"
    name="action-contract-record-reset-booleans-config-sub-panel">
    <field name="isAdditionaBenefitManagement" expr="eval: false"/>
    <field name="isConsumptionManagement" expr="eval: false"/>
    <field name="isGroupedInvoicing" expr="eval: false"/>
  </action-record>

  <action-record model="com.axelor.apps.contract.db.Contract"
    name="action-contract-version-record-reset-booleans-config-sub-panel">
    <field name="currentContractVersion.isConsumptionBeforeEndDate" expr="eval: false"/>
    <field name="currentContractVersion.automaticInvoicing" expr="eval: false"/>
    <field name="currentContractVersion.isTimeProratedInvoice" expr="eval: false"/>
    <field name="currentContractVersion.isVersionProratedInvoice" expr="eval: false"/>
    <field name="currentContractVersion.isPeriodicInvoicing" expr="eval: false"/>
  </action-record>

  <action-attrs name="action-attrs-contract-partner-domain">
    <attribute for="partner" name="domain"
      expr="eval: &quot;self IS NULL AND :company member of self.companySet&quot;"/>
    <attribute for="partner" name="domain"
      expr="eval: &quot;self.isCustomer IS TRUE AND :company member of self.companySet&quot;"
      if="targetTypeSelect == 1"/>
    <attribute for="partner" name="domain"
      expr="eval: &quot;self.isSupplier IS TRUE AND :company member of self.companySet&quot;"
      if="targetTypeSelect == 2"/>
  </action-attrs>

  <action-method name="action-contract-method-copy-from-template">
    <call class="com.axelor.apps.contract.web.ContractController" method="copyFromTemplate"/>
  </action-method>

  <action-method name="action-contract-method-delete-next-version">
    <call class="com.axelor.apps.contract.web.ContractController" method="deleteNextVersion"/>
  </action-method>

  <action-method name="action-contract-method-waiting">
    <call class="com.axelor.apps.contract.web.ContractController" method="waiting"/>
  </action-method>

  <action-method name="action-contract-method-ongoing">
    <call class="com.axelor.apps.contract.web.ContractController" method="ongoing"/>
  </action-method>

  <action-method name="action-contract-method-renew">
    <call class="com.axelor.apps.contract.web.ContractController" method="renew"/>
  </action-method>

  <form name="contract-archived-version-form" title="Amendment"
    model="com.axelor.apps.contract.db.ContractVersion"
    onLoad="action-contract-method-contract-line-list-on-change">
    <panel title="Information" name="informationsPanel">
      <field name="statusSelect" colSpan="12" readonly="true" widget="NavSelect"
        showTitle="false"/>
      <panel showIf="id" colSpan="12" name="creationDetailsPanel">
        <field name="createdOn"/>
        <field name="createdBy"/>
      </panel>
      <panel name="activationPanel" showIf="statusSelect >= 3" colSpan="12" readonly="true">
        <field name="activationDateTime"/>
        <field name="activatedByUser"/>
      </panel>
      <field name="supposedEndDate"/>
      <field name="endDateTime" hidden="true" showIf="endDateTime" readonly="true"/>
      <field name="description" widget="html"/>
      <field name="metaFile" widget="binary-link"/>
      <field name="contractHistory.isInvoicingManagement" hidden="true"/>
    </panel>
    <panel-tabs>
      <panel name="contractLinesPanel" title="Content">
        <field name="contractLineList" showTitle="false" hidden="true"
          showIf="contractHistory.isInvoicingManagement" colSpan="12" form-view="contract-line-form"
          grid-view="contract-line-grid"
          onChange="action-contract-method-contract-line-list-on-change"/>
      </panel>
      <panel name="configPanel" title="Config.">
        <panel name="configSubPanel" title="Invoicing"
          if="__config__.app.getApp('contract')?.isInvoicingManagement" colSpan="12">
          <field name="isConsumptionBeforeEndDate" colSpan="12" widget="boolean-switch"
            if="__config__.app.getApp('contract')?.isConsumptionManagement"/>
        </panel>

        <panel name="invoicingSubPanel" colSpan="12">
          <panel colSpan="6">
            <field name="paymentMode" colSpan="6" widget="SuggestBox" canEdit="false"
              form-view="payment-mode-form" grid-view="payment-mode-grid"/>
            <field name="paymentCondition" colSpan="6" widget="SuggestBox" canEdit="false"
              form-view="payment-condition-form" grid-view="payment-condition-grid"/>
          </panel>
          <panel colSpan="6">
            <field name="automaticInvoicing" colSpan="4" widget="boolean-switch"/>
            <field name="invoicingMomentSelect" hidden="true" showIf="automaticInvoicing"
              colSpan="4"/>
            <field name="numberOfDays" colSpan="4"/>
          </panel>
          <field name="isPeriodicInvoicing" colSpan="3" widget="boolean-switch"/>
          <panel hidden="true" showIf="isPeriodicInvoicing" colSpan="9">
            <field name="invoicingDuration" domain="self.applicationTypeSelect = 2"
              colSpan="4" canEdit="false" requiredIf="isPeriodicInvoicing"/>
            <field name="isTimeProratedInvoice" colSpan="4" widget="boolean-switch"/>
            <field name="isVersionProratedInvoice" hidden="true"
              showIf="isTimeProratedInvoice" colSpan="4" widget="boolean-switch"/>
          </panel>
        </panel>
        <panel if="__config__.app.getApp('contract')?.isRenewalManagement" title="Renewal"
          colSpan="12" name="renewalDetailsPanel">
          <field name="isTacitRenewal" colSpan="3" widget="boolean-switch"/>
          <field name="renewalDuration" domain="self.applicationTypeSelect = 2" hidden="true"
            showIf="isTacitRenewal" colSpan="3" requiredIf="isTacitRenewal"/>
          <field name="isAutoEnableVersionOnRenew" hidden="true" showIf="isTacitRenewal"
            colSpan="6" widget="boolean-switch"/>
        </panel>
        <panel title="Engagement">
          <field name="isWithEngagement" colSpan="6" widget="boolean-switch"/>
          <field name="engagementDuration" domain="self.applicationTypeSelect = 2"
            showIf="isWithEngagement" colSpan="6" canNew="true" requiredIf="isWithEngagement"/>
          <field name="engagementStartFromVersion" showIf="isWithEngagement" colSpan="12"
            requiredIf="isWithEngagement" widget="boolean-switch"/>
        </panel>
        <panel title="Prior notice">
          <field name="isWithPriorNotice" widget="boolean-switch"/>
          <field name="priorNoticeDuration" domain="self.applicationTypeSelect = 2"
            showIf="isWithPriorNotice" canNew="true" requiredIf="isWithPriorNotice"/>
        </panel>
      </panel>
    </panel-tabs>
  </form>

  <action-view name="action-view-contract-show-version" title="Amendment"
    model="com.axelor.apps.contract.db.ContractVersion">
    <view type="grid" name="contract-version-next-grid"/>
    <view type="form" name="contract-version-next-form"/>
    <context name="_showRecord" expr="eval: nextVersion.id"/>
  </action-view>

  <action-view name="action-view-contract-add-version" title="New version"
    model="com.axelor.apps.contract.db.ContractVersion">
    <view type="form" name="contract-version-next-form"/>
    <view-param name="forceEdit" value="true"/>
    <context name="_xContractId" expr="eval: id"/>
    <context name="_xIsNextVersion" expr="true"/>
  </action-view>

  <action-view name="action.contract.view.contract"
    model="com.axelor.apps.contract.db.Contract" title="Contract">
    <view type="form" name="contract-form"/>
    <view type="grid" name="contract-grid"/>
    <context name="_showRecord" expr="eval: nextContract.id"/>
  </action-view>

  <action-view name="action-contract-view-invoicing"
    model="com.axelor.apps.account.db.Invoice" title="Invoices">
    <view type="grid" name="invoice-lite-grid"/>
    <view type="form" name="invoice-form"/>
    <domain>:id MEMBER OF self.contractSet</domain>
  </action-view>


  <action-attrs name="action-contract-attrs-domains-template">
    <attribute for="$contractTemplate" name="domain"
      expr="eval: &quot;self.targetTypeSelect = ${targetTypeSelect}&quot;"/>
    <attribute for="partner" name="domain"
      expr="eval: &quot;self.isCustomer = true AND :company member of self.companySet&quot;"
      if="targetTypeSelect == 1"/>
    <attribute for="partner" name="domain"
      expr="eval: &quot;self.isSupplier = true AND :company member of self.companySet&quot;"
      if="targetTypeSelect == 2"/>
  </action-attrs>

  <action-method name="action-contract-method-terminated">
    <call class="com.axelor.apps.contract.web.ContractController" method="terminated"/>
  </action-method>

  <action-attrs name="action-contract-attrs-required-payment-config">
    <attribute for="currentContractVersion.paymentMode" name="required"
      expr="eval: isInvoicingManagement"/>
    <attribute for="currentContractVersion.paymentCondition" name="required"
      expr="eval: isInvoicingManagement"/>
  </action-attrs>

  <action-attrs name="action-contract-attrs-partner-payment-config">
    <attribute for="currentContractVersion.paymentMode" name="value"
      expr="eval: partner?.inPaymentMode" if="targetTypeSelect == 1 || targetTypeSelect == 3"/>
    <attribute for="currentContractVersion.paymentMode" name="value"
      expr="eval: partner?.outPaymentMode" if="targetTypeSelect == 2 || targetTypeSelect == 4"/>
    <attribute for="currentContractVersion.paymentCondition" name="value"
      expr="eval: partner?.paymentCondition"/>
  </action-attrs>

  <action-method name="action-method-contract-change-product">
    <call class="com.axelor.apps.contract.web.ContractController" method="changeProduct"/>
  </action-method>

  <action-method name="action-contract-method-invoicing">
    <call class="com.axelor.apps.contract.web.ContractController" method="invoicing"/>
  </action-method>

  <action-method name="action-contract-method-is-valid">
    <call class="com.axelor.apps.contract.web.ContractController" method="isValid"/>
  </action-method>

  <action-method name="action-contract-method-set-invoiced-partner-domain">
    <call class="com.axelor.apps.contract.web.ContractController"
      method="setInvoicedPartnerDomain"/>
  </action-method>

  <action-method name="action-contract-method-fill-invoiced-partner-if-only-one">
    <call class="com.axelor.apps.contract.web.ContractController" method="fillInvoicedPartner"/>
  </action-method>

  <action-validate name="action-contract-validate-on-going">
    <alert
      message="Attention the contract will have as starting date the provisional activation
        date ${currentContractVersion.supposedActivationDate}, Are you sure?"
      if="currentContractVersion.supposedActivationDate &amp;&amp; currentContractVersion.supposedActivationDate &lt; __config__.date"/>
  </action-validate>

  <action-attrs name="action-contract-readonly-if-unchangable"
    model="com.axelor.apps.contract.db.Contract">
    <attribute
      for="currentContractVersion.contractLineList,isInvoicingManagement,isAdditionaBenefitManagement,isConsumptionManagement,
          currentContractVersion.isConsumptionBeforeEndDate,currentContractVersion.paymentMode,currentContractVersion.paymentCondition,
          currentContractVersion.automaticInvoicing,currentContractVersion.invoicingMomentSelect,currentContractVersion.invoicingDuration,
          currentContractVersion.isTimeProratedInvoice,currentContractVersion.isVersionProratedInvoice,currentContractVersion.isTacitRenewal,
          currentContractVersion.renewalDuration,currentContractVersion.isAutoEnableVersionOnRenew,currentContractVersion.isWithEngagement,
          currentContractVersion.engagementDuration,currentContractVersion.engagementStartFromVersion,currentContractVersion.isWithPriorNotice,
          currentContractVersion.priorNoticeDuration,currentContractVersion.isPeriodicInvoicing,firstPeriodEndDate,currentContractVersion.numberOfDays"
      name="readonly"
      expr="eval: (__config__.app.getApp('contract')?.isUnchangableContract &amp;&amp; currentContractVersion.statusSelect > 2)
          || (!__config__.app.getApp('contract')?.isUnchangableContract &amp;&amp; currentContractVersion.statusSelect > 3)"/>
    <attribute for="currentContractVersion.contractLineList" name="readonly"
      expr="eval: (__config__.app.getApp('contract')?.isUnchangableContract &amp;&amp; currentContractVersion.statusSelect > 2)
          || (!__config__.app.getApp('contract')?.isUnchangableContract &amp;&amp; currentContractVersion.statusSelect > 3)
          || !id"/>
  </action-attrs>

  <action-attrs name="action-contract-attrs-domains-partner">
    <attribute name="domain" for="partner"
      expr="eval: &quot; :company member of self.companySet AND (self.isProspect = true OR self.isCustomer = true) &quot;"
      if="_xTargetType == 1"/>
    <attribute name="domain" for="partner"
      expr="eval: &quot; :company member of self.companySet AND self.isSupplier = true &quot;"
      if="_xTargetType == 2"/>
  </action-attrs>

  <action-attrs name="action-contract-attrs-set-payment-mode-domain">
    <attribute name="domain" for="paymentMode" expr="self.inOutSelect = 1"
      if="__parent__?.targetTypeSelect == 1"/>
    <attribute name="domain" for="paymentMode" expr="self.inOutSelect = 2"
      if="__parent__?.targetTypeSelect == 2"/>
  </action-attrs>

  <action-attrs name="action-contract-attrs-payment-condition-set-domain">
    <attribute name="domain" for="paymentCondition"
      expr="eval: &quot; SIZE(self.paymentConditionLineList) &lt; 2 &quot;"
      if="!__config__.app.getApp('account').allowMultiInvoiceTerms"/>
  </action-attrs>

  <action-method name="action-contract-method-hide-fields-list">
    <call class="com.axelor.apps.contract.web.ContractController" method="hideFields"/>
  </action-method>

  <action-group name="action-contract-group-partner-onchange">
    <action name="action-contract-attrs-partner-payment-config"/>
    <action name="action-contract-method-fill-invoiced-partner-if-only-one"/>
  </action-group>

  <action-validate
    name="action-contract-validate-invoice-period-start-date-onchange">
    <error
      message="End of next invoicing period should be after Start of next invoicing period."
      if="invoicePeriodEndDate &lt; invoicePeriodStartDate"
      action="action-contract-record-invoice-period-start-date-wrong"/>
  </action-validate>

  <action-record name="action-contract-record-invoice-period-start-date-wrong"
    model="com.axelor.apps.contract.db.Contract">
    <field name="invoicePeriodStartDate" expr="eval: null"/>
  </action-record>

  <action-validate name="action-contract-validate-invoice-period-end-date-onchange">
    <error
      message="End of next invoicing period should be after Start of next invoicing period."
      if="invoicePeriodEndDate &lt; invoicePeriodStartDate"
      action="action-contract-record-invoice-period-end-date-wrong"/>
  </action-validate>

  <action-record name="action-contract-record-invoice-period-end-date-wrong"
    model="com.axelor.apps.contract.db.Contract">
    <field name="invoicePeriodEndDate" expr="eval: null"/>

  </action-record>
  <search-filters name="contract-filters"
    model="com.axelor.apps.contract.db.Contract" title="Contract filters">
    <field name="company" hidden="true"
      if="!__config__.app.getApp('base')?.getEnableMultiCompany()"/>
    <field name="currency" hidden="true"
      if="!__config__.app.getApp('contract')?.getIsInvoicingManagement()"/>
    <field name="renewalNumber" hidden="true"
      if="!__config__.app.getApp('contract')?.getIsRenewalManagement()"/>
    <field name="lastRenewalDate" hidden="true"
      if="!__config__.app.getApp('contract')?.getIsRenewalManagement()"/>
    <field name="engagementStartDate" hidden="true"
      if="!__config__.app.getApp('contract')?.isConfigContract"/>
    <field name="isInvoicingManagement" hidden="true"
      if="!__config__.app.getApp('contract')?.isInvoicingManagement"/>
    <field name="isAdditionaBenefitManagement" hidden="true"
      if="!__config__.app.getApp('contract')?.isAdditionalBenefitManagement"/>
    <field name="isConsumptionManagement" hidden="true"
      if="!__config__.app.getApp('contract')?.isConsumptionManagement"/>
  </search-filters>

  <action-method name="action-contract-method-contract-line-list-on-change">
    <call class="com.axelor.apps.contract.web.ContractController"
      method="onChangeContractLines"/>
  </action-method>

  <action-method name="action-contract-method-additional-contract-line-list-on-change">
    <call class="com.axelor.apps.contract.web.ContractController"
      method="onChangeAdditionalContractLines"/>
  </action-method>

  <action-method name="action-contract-method-price-list-domain">
    <call class="com.axelor.apps.contract.web.ContractController"
      method="changePriceListDomain"/>
  </action-method>

  <action-method name="action-contract-method-generate-sale-order">
    <call class="com.axelor.apps.contract.web.ContractController"
      method="generateSaleOrderFromContract"/>
  </action-method>

  <action-method name="action-contract-method-generate-purchase-order">
    <call class="com.axelor.apps.contract.web.ContractController"
      method="generatePurchaseOrderFromContract"/>
  </action-method>

  <action-view name="action-contract-view-generated-sale-orders" title="Sale orders"
    model="com.axelor.apps.sale.db.SaleOrder">
    <view type="grid" name="sale-order-grid"/>
    <view type="form" name="sale-order-form"/>
    <domain>self.contract.id = :id</domain>
  </action-view>

  <action-view name="action-contract-view-generated-purchase-orders"
    title="Purchase orders" model="com.axelor.apps.purchase.db.PurchaseOrder">
    <view type="grid" name="purchase-order-grid"/>
    <view type="form" name="purchase-order-form"/>
    <domain>self.contract.id = :id</domain>
  </action-view>

  <action-record name="action-contract-record-get-trading-names-management-config"
    model="com.axelor.apps.contract.db.Contract">
    <field name="$enableTradingNamesManagement"
      expr="eval: __config__.app.getApp('base')?.enableTradingNamesManagement"/>
  </action-record>

  <action-group name="action-contract-group-ongoing">
    <action name="save"/>
    <action name="action-contract-validate-on-going"/>
    <action name="action-contract-method-ongoing"/>
  </action-group>

</object-views>
