<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_6.1.xsd">

  <action-method name="action-configurator-formula-method-check-script">
    <call class="com.axelor.apps.sale.web.ConfiguratorFormulaController"
      method="checkGroovyFormula"/>
  </action-method>

  <form name="incl-help-configurator-formula"
    model="com.axelor.apps.sale.db.ConfiguratorFormula" title="Help">
    <panel name="helpPanel" title="Help">
      <field name="$helpViewer" showTitle="false" readonly="true" colSpan="12">
        <viewer><![CDATA[
			<>
				<h3>
					<span>{_t('The script must be written in')} </span>
					<Box as="a" href={"http://docs.groovy-lang.org/latest/html/documentation/"} target="_blank">Groovy</Box>
				</h3>
				<h4>{_t('String')}</h4>
				<p>
					<Box border borderColor="dark-subtle" color="red" borderWidth={1} as="code" bg="secondary-subtle" p={1}>+</Box> <span>{_t('is used for concatenation')}</span>:
				</p>
				<Box border borderColor="dark-subtle" color="black" borderWidth={1} as="pre" bg="secondary-subtle" p={2}>
					{`v = "def" \n"abc" + v //returns "abcdef"`}
				</Box>
				<p>
					<span>{_t('String interpolation can also be used')}</span>:
				</p>
				<Box border borderColor="dark-subtle" color="black" borderWidth={1} as="pre" bg="secondary-subtle" p={2}>
					{`v = "def" \n"abc\${v}" // also returns "abcdef"`}
				</Box>
				<h4>{_t('Decimal')}</h4>
				<p>
					<span>{_t('Standard operation like +, -, *, / can be used and will work correctly with BigDecimal.')}</span>
				</p>
				<h4>{_t('Current User')}</h4>
				<p>
					<Box border borderColor="dark-subtle" color="red" borderWidth={1} as="code" bg="secondary-subtle" p={1}>__user__</Box> <span>{_t('gives access to connected user.')}</span><Box/>
					<span>{_t('Example: accessing the name of the user')}</span>: <Box border borderColor="dark-subtle" color="red" borderWidth={1} as="code" bg="secondary-subtle" p={1}>__user__.name</Box>.
				</p>
				<h4>{_t('Date')}</h4>
				<p>
					<Box border borderColor="dark-subtle" color="red" borderWidth={1} as="code" bg="secondary-subtle" p={1}>__date__</Box> <span>{_t('gives access to today date and')}</span> <Box border borderColor="dark-subtle" color="red" borderWidth={1} as="code" bg="secondary-subtle" p={1}>__datetime__</Box> <span>{_t('to current date time.')}</span>
				</p>
				<h4>{_t('Access to parent sale order')}</h4>
				<p>
					<Box border borderColor="dark-subtle" color="red" borderWidth={1} as="code" bg="secondary-subtle" p={1}>parentSaleOrderId</Box> <span>{_t('gives access to the id of parent sale order (when adding a sale order line with this configurator)')}</span>
				</p>
				<h4><span>{_t('Query to database')}</span></h4>
				<p>
					<Box border borderColor="dark-subtle" color="red" borderWidth={1} as="code" bg="secondary-subtle" p={1}>__repo__</Box> <span>{_t('gives access to a repository with the same syntax as the repositories in java')}</span>.<Box/>
					<span>{_t('Examples')}</span>:
					<ul>
						<li>{_t('searching for Product with id = 1:')} <Box border borderColor="dark-subtle" color="red" borderWidth={1} as="code" bg="secondary-subtle" p={1}>__repo__(Product).find(1)</Box> </li>
						<li>{_t('searching for ProductFamily with the code ‘SERV’')}: <Box border borderColor="dark-subtle" color="red" borderWidth={1} as="code" bg="secondary-subtle" p={1}>__repo__(ProductFamily).all().filter("self.code = 'SERV'").fetchOne()</Box> </li>
						<li>{_t('searching Partners that are suppliers and with a name starting with “A”')}: <Box border borderColor="dark-subtle" color="red" borderWidth={1} as="code" bg="secondary-subtle" p={1}>__repo__(Partner).all().filter("self.isSupplier IS TRUE AND self.name LIKE 'A%'").fetchOne()</Box> </li>
					</ul>
				</p>
			</>
		]]>
        </viewer>
      </field>
    </panel>
  </form>

  <action-attrs name="action-configurator-formula-attr-display-meta-json-field">
    <attribute name="hidden" for="metaJsonField"
      expr="eval:__this__?.metaField.json == false" if="eval:__this__?.metaField != null"/>
    <attribute name="value" for="metaJsonField" expr="eval:null"
      if="eval:__this__?.metaField == null || __this__?.metaField.json == false"/>
  </action-attrs>

</object-views>