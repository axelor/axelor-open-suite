<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_5.4.xsd">

  <input file="meta_metaPermission.csv" separator=";" type="com.axelor.meta.db.MetaPermission"
    search="self.name = :name"/>

  <input file="meta_metaPermissionRule.csv" separator=";"
    type="com.axelor.meta.db.MetaPermissionRule"
    search="self.field = :field and self.metaPermission.name = :metaPermission">
    <bind to="canRead" eval="can_read == 'x' ? 'true' : 'false'"/>
    <bind to="canWrite" eval="can_write == 'x' ? 'true' : 'false'"/>
    <bind to="canExport" eval="can_export == 'x' ? 'true' : 'false'"/>
    <bind to="metaPermission" column="metaPermission" search="self.name = :metaPermission"/>
  </input>

  <input file="auth_role.csv" separator=";" type="com.axelor.auth.db.Role"
    search="self.name = :name">
    <bind column="permissions" to="permissions" search="self.name in :permissions"
      eval="permissions.split('\\|') as List"/>
    <bind column="metaPermissions" to="metaPermissions" search="self.name in :metaPermissions"
      eval="metaPermissions.split('\\|') as List"/>
  </input>

  <input file="auth_permission.csv" separator=";" type="com.axelor.auth.db.Permission"
    search="self.name = :name" call="com.axelor.csv.script.ImportPermission:importPermissionToRole">
    <bind to="canRead" eval="can_read == 'x' ? 'true' : 'false'"/>
    <bind to="canWrite" eval="can_write == 'x' ? 'true' : 'false'"/>
    <bind to="canCreate" eval="can_create == 'x' ? 'true' : 'false'"/>
    <bind to="canRemove" eval="can_remove == 'x' ? 'true' : 'false'"/>
    <bind to="canExport" eval="can_export == 'x' ? 'true' : 'false'"/>
  </input>

  <input file="meta_metaMenu.csv" separator=";" type="com.axelor.meta.db.MetaMenu"
    search="self.name = :name and self.module = 'axelor-partner-portal'" update="true"/>

  <input file="base_appPartnerPortal.csv" separator=";" type="com.axelor.apps.base.db.App"
    call="com.axelor.csv.script.ImportApp:importApp">
    <bind column="dependsOn" to="dependsOnSet" search="self.code in :dependsOn"
      eval="dependsOn.split(',') as List"/>
  </input>

</csv-inputs>
