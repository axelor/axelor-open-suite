<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_6.1.xsd">

  <input file="auth_group.csv" separator=";" type="com.axelor.auth.db.Group"
    search="self.code = :code"/>

  <input file="auth_permission.csv" separator=";" type="com.axelor.auth.db.Permission"
    search="self.name = :name" call="com.axelor.csv.script.ImportPermission:importPermissionToRole">
    <bind to="canRead" eval="can_read == 'x' ? 'true' : 'false'"/>
    <bind to="canWrite" eval="can_write == 'x' ? 'true' : 'false'"/>
    <bind to="canCreate" eval="can_create == 'x' ? 'true' : 'false'"/>
    <bind to="canRemove" eval="can_remove == 'x' ? 'true' : 'false'"/>
    <bind to="canExport" eval="can_export == 'x' ? 'true' : 'false'"/>
  </input>

  <input file="base_birtTemplate.csv" separator=";"
    type="com.axelor.apps.base.db.BirtTemplate" search="self.importId = :importId"/>

  <input file="base_birtTemplateParameter.csv" separator=";"
    type="com.axelor.apps.base.db.BirtTemplateParameter" search="self.importId = :importId"/>

  <input file="base_templateContext.csv" separator=";"
    type="com.axelor.message.db.TemplateContext" search="self.name = :name"/>

  <input file="base_template.csv" separator=";" type="com.axelor.message.db.Template"
    search="self.name = :name">
    <bind column="birtTemplateSet_importId" to="birtTemplateSet"
      search="self.importId in :birtTemplateSet_importId"
      eval="birtTemplateSet_importId.split('\\|') as List" update="true"/>
    <bind to="templateContextList" search="self.name = :templateContext"
      if="templateContext != null &amp;&amp; !templateContext.empty"/>
  </input>

  <input file="base_barcodeTypeConfig.csv" separator=";"
    type="com.axelor.apps.base.db.BarcodeTypeConfig" search="self.name = :name"/>

  <input file="base_currency.csv" separator=";" type="com.axelor.apps.base.db.Currency"
    search="self.code = :code"/>

  <input file="base_currencyConversionLine.csv" separator=";"
    type="com.axelor.apps.base.db.CurrencyConversionLine" search="self.importId = :importId">
    <bind to="appBase" column="appBase" search="self.app.code = :appBase" update="true"/>
  </input>

  <input file="base_language.csv" separator=";" type="com.axelor.apps.base.db.Language"
    search="self.code = :code"/>

  <input file="base_objectDataConfig.csv" separator=";"
    type="com.axelor.apps.base.db.DataConfigLine">
    <bind to="objectDataConfig" search="self.modelSelect = :modelSelect">
      <bind to="title" column="title"/>
      <bind to="modelSelect" column="modelSelect"/>
    </bind>
    <bind to="path" column="path"/>
    <bind to="metaFieldPath" column="metaFieldPath" search="self.name = :metaFieldPath"/>
    <bind to="metaModel" column="metaModel" search="self.name = :metaModel"/>
    <bind to="toExportMetaFieldSet" column="fields"
      search="self.name in :fields and self.metaModel.name = :metaModel"
      eval="fields.split(',') as List"/>
  </input>

  <input file="meta_helpEN.csv" separator=";" type="com.axelor.meta.db.MetaHelp">
    <bind to="language" eval="'en'"/>
    <bind to="type" eval="'tooltip'"/>
    <bind to="model"
      eval="com.axelor.inject.Beans.get(com.axelor.meta.db.repo.MetaModelRepository.class).findByName(object)?.getFullName()"
      column="object"/>
  </input>

  <input file="meta_helpFR.csv" separator=";" type="com.axelor.meta.db.MetaHelp">
    <bind to="language" eval="'fr'"/>
    <bind to="type" eval="'tooltip'"/>
    <bind to="model"
      eval="com.axelor.inject.Beans.get(com.axelor.meta.db.repo.MetaModelRepository.class).findByName(object)?.getFullName()"
      column="object"/>
  </input>

  <input file="meta_metaMenu.csv" separator=";" type="com.axelor.meta.db.MetaMenu"
    search="self.name = :name and self.module = 'axelor-base'" update="true"/>

  <input file="meta_metaMenu.csv" separator=";" type="com.axelor.meta.db.MetaMenu"
    search="self.name = :name and self.module = 'axelor-core'" update="true"/>

  <input file="auth_user.csv" separator=";" type="com.axelor.auth.db.User"
    search="self.code = :code"/>

  <input file="meta_schedule.csv" separator=";" type="com.axelor.meta.db.MetaSchedule"/>

  <input file="auth_role.csv" separator=";" type="com.axelor.auth.db.Role"
    search="self.name = :name"/>

</csv-inputs>
