{"version":3,"sources":["constant.js","generator.js","services/http.js","services/api.js","utils.js","components/Selection.js","components/FieldPopover.js","components/ModelFieldComponent.js","components/TextInput.js","components/NumberInput.js","components/DateTimePicker.js","components/Select.js","components/SubFieldComponent.js","components/DndView.js","components/MultiSelector.js","DataTable.js","store/context.js","Builder.js","App.js","index.js"],"names":["excludedFields","VALUE_FROM","CONTEXT","SELF","NONE","SOURCE","PARENT","ModelType","DATE_FORMAT","date","time","datetime","RelationalFieldList","excludedRelationalFields","excludedUITypes","getModelSubField","subFields","map","subField","JSON","parse","stringify","name","version","type","fullName","modelType","title","targetJsonModel","jsonModel","targetModel","id","target","generateJson","data","currentJson","defaultFrom","sourceModel","json","jsonData","getValue","element","value","modelSubField","contextModel","from","selfField","subFieldName","sourceField","newValue","selected","modelFieldValue","fields","modelFieldText","forEach","field","fieldName","lowerCaseFirstLetter","getModelFieldValue","toLowerCase","firstField","sourceModelName","includes","contextKey","dataPath","modelTarget","split","pop","getTarget","jsonTarget","isRemoved","undefined","record","push","lastCookieString","lastCookies","headers","Headers","append","cookieString","document","cookie","reduce","obj","parts","readCookie","this","baseURL","url","method","options","fetch","then","indexOf","get","catch","err","config","Object","assign","credentials","mode","body","request","entity","offset","post","fetchSelectionByName","a","services","_domain","_domainContext","limit","sortBy","items","list","x","getModels","metaModalType","getMetaModels","models","getCustomModels","metaJsonModels","allModels","i","length","fetchModelByName","modelName","search","criteria","operator","res","status","customModelData","e","customModelCriteria","d","fetchFields","item","searchData","selection","selectionList","keys","jsonFields","fieldKey","jsonField","values","newFields","filter","fetchCustomFields","newData","saveRecord","params","add","model","fetchRecord","getCustomModelData","getCustomModelByDomain","jsonModelDomain","getNameFieldByDomain","jsonModelName","getData","generateScriptString","jsonString","context","_model","_jsonString","action","responseData","Array","isArray","_scriptString","useDebounce","cb","duration","timer","React","useRef","clearTimer","current","clearTimeout","setTimer","setTimeout","useEffect","args","str","charAt","slice","upperCaseFirstLetter","toUpperCase","translate","window","_t","array","key","sort","b","y","excludeFields","otherFields","getType","replace","excludeFieldList","dataList","isRelationalField","_type","generatePath","targetName","path","dndItemTypes","getKey","useStyles","makeStyles","theme","listbox","maxHeight","AutoComplete","props","useState","open","setOpen","setOptions","isMulti","selectedValue","setSelectedValue","inputValue","setInputValue","onChange","flatOptions","optionLabelKey","optionValueKey","fetchAPI","inline","InputProps","error","filterSelectedOptions","disableCloseOnSelect","readOnly","concatValue","inputRootClass","other","classes","loading","setLoading","findOption","useCallback","option","find","trim","delayChange","onKeyDown","handleChange","reason","join","active","v","checkValue","toString","Autocomplete","getOptionSelected","getOptionLabel","_uniqueId","onOpen","onClose","disabled","event","multiple","onInputChange","inputRoot","renderInput","TextField","label","fullWidth","onClick","endAdornment","Fragment","CircularProgress","className","circularProgress","size","dialogPaper","minHeight","cardContent","height","minWidth","paddingLeft","paddingRight","cardContentItemText","fontSize","lineHeight","paddingBottom","cardContentItemContainer","marginLeft","cardContentItemTitle","cardActionView","justifyContent","noFields","textAlign","color","dialogTitle","display","capitalizeText","textTransform","subHeaderRow","borderBottom","fieldListViewContainer","marginRight","marginTop","overflowY","searchField","width","padding","checkbox","backgrounColor","selectButton","backgroundColor","borderColor","cancelButton","FieldPopoverComponent","text","onSubmit","setSelected","selectAll","setSelectAll","searchText","setSearchText","handleClose","stopPropagation","handleSubmit","index","handleCheckbox","checked","handleSelectAll","_selectAll","f","handleFieldSearch","Dialog","paper","aria-labelledby","DialogTitle","DialogContent","dividers","root","FormControlLabel","control","Checkbox","placeholder","Grid","container","Typography","CardActions","Button","variant","FieldPopover","memo","input","position","border","parentField","clickableView","cursor","fieldNameColumn","addFieldButton","row","ModelFieldComponent","handleAdd","showSubField","setShowSubField","getFields","classNames","direction","iconButton","icon","buttonTitle","iconButtonClassName","ModelField","InputField","autoTitle","onBlur","style","setText","Input","inputProps","autoComplete","defaultProps","rows","NumberField","scale","blur","customeFormat","val","setVal","formatValue","Number","toFixed","PICKERS","KeyboardDatePicker","KeyboardTimePicker","KeyboardDateTimePicker","DateTimePicker","valueRef","format","Picker","utils","MomentUtils","autoOk","ampm","views","PopoverProps","anchorOrigin","vertical","horizontal","transformOrigin","disableToolbar","invalidDateMessage","margin","animateYearScrolling","keyCode","flexWrap","select","Selection","rest","FormControl","classnames","formControl","InputLabel","Select","MenuItem","flexDirection","marginBottom","Card","moveCard","ref","useDrop","accept","collect","monitor","handlerId","getHandlerId","hover","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","drop","useDrag","isDragging","drag","preview","opacity","children","listStyle","spacing","chip","rightIcon","MultiSelector","parentRow","isContext","isM2o","getModel","findIndex","getIndex","splice","containerClassName","object","renderTags","tags","getTagProps","tag","Chip","overflowX","table","tableRowRoot","palette","paddingTop","fontWeight","valueInputContainer","radioInput","deleteIcon","headerTitle","left","getOptions","isRoot","getSelfValue","getExpressionValue","getCustomStyle","getOptionDisabled","getParentValueTarget","getTargetName","nameField","RenderRelationalWidget","editor","internalProps","parentType","setNameField","fetchData","fieldData","_value","_selectId","MuiAutocompleteRoot","RenderSimpleWidget","Component","value2","RenderWidget","fieldValue","fieldValue2","widgetProps","moment","stringToDate","booleanOptions","DataTable","onRowChange","metaFields","onRemove","errors","onClearError","onSubFieldAdd","manageFieldClick","onReorder","setFieldList","getDefaultFrom","rowIndex","handleRemove","rowName","renderRow","isHidden","TableRow","data-handler-id","TableCell","align","onSubFieldChange","disableClearable","level","IconButton","Tooltip","Close","Paper","startIcon","AddRounded","Table","aria-label","stickyHeader","TableHead","TableBody","StoreContext","createContext","useStore","useContext","StoreProvider","defaultValue","state","setState","updater","produce","useMutableState","builderFields","update","Provider","metaFieldGrid","flex","newRecordSwitch","newRecordSwitchText","newRecordInputView","modelFieldSelection","addModelFieldIcon","saveButton","overflow","saveButtonText","saveMessageAlert","topView","loaderView","right","alignItems","zIndex","saveIcon","selectContainer","targetModelInputRoot","getSourceModelString","string","getCustomTarget","getFieldInfo","getContextValue","splitedValue","findFields","getNewBuilderFields","newField","hasChildrenShow","newFieldlist","clearChildrenParentValue","shouldChangeFrom","Builder","builderRecord","setBuilderRecord","setModel","setSourceModel","sourceModelList","setSourceModelList","setShowSaveMessage","newRecord","setNewRecord","modelFieldMap","setModelFieldMap","setMetaFields","setErrors","setOpenFieldSelector","manageField","setManageField","setBuilderFields","draft","set","handleRowChange","recordIndex","prevFields","handleRowRemove","handleSubFieldAdd","expand","builder","resultMetaField","builderJSONFields","builderField","jsonFieldList","contextValue","hideFields","getBuilderFields","_builderRecord","jsonFieldIndex","getMetaFields","handleClearError","handleSave","isJson","jsonQuery","scriptString","expressionQuery","resultField","targetField","result","message","severity","handleModelSelect","brec","delayFetch","currentTarget","handleManageFieldClick","handleCloseManageField","handleReorder","modelResult","lastSourceModel","sourceModelResult","init","justify","buttonClassName","colorPrimary","Switch","AppContent","setParams","_params","regex","location","href","match","exec","App","DndProvider","backend","HTML5Backend","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.233460fd.chunk.js","sourcesContent":["export const excludedFields = [\n  'createdBy',\n  'createdOn',\n  'updatedBy',\n  'updatedOn',\n  'version',\n  'id',\n];\n\nexport const VALUE_FROM = {\n  CONTEXT: 'context',\n  SELF: 'self',\n  NONE: 'none',\n  SOURCE: 'source',\n  PARENT: 'parent',\n};\n\nexport const ModelType = {\n  CUSTOM: 'CUSTOM',\n  META: 'META',\n};\n\nexport const RelationalFields = [\n  'MANY_TO_MANY',\n  'MANY_TO_ONE',\n  'ONE_TO_MANY',\n  'ONE_TO_ONE',\n];\n\nexport const DATE_FORMAT = {\n  date: \"DD/MM/YYYY\",\n  time: \"HH:mm:ss\",\n  datetime: \"DD/MM/YYYY HH:mm\",\n};\n\nexport const RelationalFieldList = [\n  'one_to_one',\n  'many_to_one',\n  'many_to_many',\n  'one_to_many',\n  'json_one_to_one',\n  'json_many_to_one',\n  'json_many_to_many',\n  'json_one_to_many',\n]\n\nexport const excludedRelationalFields = [\n  'many_to_many',\n  'one_to_many',\n  'json_many_to_many',\n  'json_one_to_many',\n]\n\nexport const dateTypes = ['date', 'datetime', 'time'];\n\nexport const excludedUITypes = ['panel', 'label', 'spacer', 'button'];\n","import { values } from 'lodash';\nimport { VALUE_FROM, ModelType, dateTypes } from './constant';\nimport { lowerCaseFirstLetter, isRelationalField, getDateTimeValue } from './utils';\n\n/*export function generateJson(data, currentJson) {\n  const {json = []} = currentJson\n  const jsonData = [...json];\n\n  const getValue = (element) => {\n    const {\n      value,\n      contextModel,\n      modelSubField,\n      selfField,\n      from,\n      subFieldName,\n    } = element;\n    let newValue = value;\n    if (isRelationalField(element.type) && value) {\n      newValue = value[element.targetName || 'name'];\n    }\n    if (subFieldName && subFieldName.targetName && value) {\n      newValue = value[subFieldName.targetName];\n    }\n    if (from === VALUE_FROM.SELF) {\n      newValue = selfField || null;\n    }\n    if (from === VALUE_FROM.CONTEXT) {\n      if (contextModel) {\n        const contextKey = lowerCaseFirstLetter(contextModel.name);\n        newValue = `${contextKey}.${modelSubField.name}`;\n      } else {\n        newValue = null;\n      }\n    }\n    return newValue || null;\n  };\n\n  data.forEach((element) => {\n    const { name, subFieldName, from, contextModel } = element;\n    let key = name;\n    if (element.targetName && !subFieldName) {\n      key = `${key}.${element.targetName}`;\n    }\n    if (subFieldName) {\n      key = `${key}.${subFieldName.name}`;\n    }\n    const other = {};\n    if (element.subField) {\n      other['subField'] = element.subField;\n    }\n    if (from === VALUE_FROM.CONTEXT) {\n      other['modelType'] = contextModel.modelType || ModelType.META;\n      other['fullName'] = contextModel.fullName;\n    }\n    if (![VALUE_FROM.CONTEXT, VALUE_FROM.SELF].includes(from)) {\n      if (isRelationalField(element.type)) {\n        other['targetName'] = element.targetName || 'name';\n      } else if (subFieldName) {\n        if (subFieldName.targetName) {\n          other['targetName'] = subFieldName.targetName;\n        }\n        other['subFieldType'] = subFieldName.type;\n      }\n    }\n    // jsonData[key] = getValue(element);\n    const index = jsonData.findIndex((d) => d[element.path] !== undefined);\n    if (index === -1) {\n      jsonData.push({ [element.path]: getValue(element), other });\n    } else {\n      jsonData.splice(index, 1, { [element.path]: getValue(element), other });\n    }\n  });\n  return jsonData;\n}*/\n\nconst getTarget = (element) => {\n  if(element.target) {\n    return element.target.split('.').pop();\n  }\n  if(element.targetModel) {\n    return element.targetModel.split('.').pop();\n  }\n  return null;\n}\n\nconst getModelFieldValue = (fields) => {\n  let modelFieldText = '';\n  if(fields) {\n    fields.forEach((field) => {\n      if(field.name) {\n        const fieldName = lowerCaseFirstLetter(field.name);\n        if(modelFieldText) {\n          modelFieldText = `${modelFieldText}?.${fieldName}`;\n        } else {\n          modelFieldText = `${fieldName}`;\n        }\n      }\n    }); \n  }\n  return modelFieldText;\n}\n\nconst getModelSubField = (subFields = []) => {\n  return subFields.map(subField => {\n    return JSON.parse(JSON.stringify({\n      name: subField.name,\n      version: subField.version,\n      type: subField.type,\n      fullName: subField.fullName,\n      modelType: subField.modelType,\n      title: subField.title,\n      targetJsonModel: subField.targetJsonModel,\n      jsonModel: subField.jsonModel,\n      targetModel: subField.targetModel,\n      id: subField.id,\n      target: subField.target,\n    }))\n  });\n}\n\nexport function generateJson(data, currentJson, defaultFrom, sourceModel) {\n  const {json = []} = currentJson\n  const jsonData = [];\n  const getValue = (element) => {\n    const {\n      value,\n      contextModel,\n      modelSubField,\n      selfField,\n      subFieldName,\n      sourceField,\n    } = element;\n    const from = value ? value.from || defaultFrom : defaultFrom;\n    let newValue = value?.selected;\n    const modelFieldValue = getModelFieldValue(modelSubField);\n    const type = element.type.toLowerCase();\n    if (from === VALUE_FROM.CONTEXT) {\n      if(modelFieldValue) {\n        newValue = {value: modelFieldValue};\n      } else {\n        newValue = null;\n      }\n    }\n    if (from === VALUE_FROM.SOURCE) {\n      if(modelFieldValue) {\n        const firstField = modelSubField[0];\n        let sourceModelName = sourceModel?.fullName;\n        let fieldName = firstField?.fullName;\n        if(sourceModel.modelType === ModelType.CUSTOM) {\n          sourceModelName = sourceModel?.name;\n        }\n\n        if(firstField.modelType === ModelType.CUSTOM) {\n          fieldName = firstField?.name;\n        }\n        if(fieldName && sourceModelName && fieldName === sourceModelName) {\n          newValue = {value: 'SOURCE'};\n        } else {\n          newValue = {value: modelFieldValue};\n        }\n      } else {\n        newValue = null;\n      }\n    }\n    if (from === VALUE_FROM.SELF) {\n      if(modelFieldValue) {\n        newValue = {value: modelFieldValue};\n      } else {\n        newValue = null;\n      }\n    }\n    if([VALUE_FROM.PARENT].includes(from) && newValue?.value && typeof newValue?.value === 'object') {\n      const contextKey = lowerCaseFirstLetter(newValue.value.name);\n      if(!modelFieldValue) {\n        newValue = {value: contextKey}\n      } else {\n        newValue = {value: `${contextKey}?.${modelFieldValue}`};\n      }\n    }\n    return newValue || null;\n  };\n  data.forEach((element) => {\n    // const element = data[elementKey];\n    let { name, subFieldName, contextModel, value, dataPath, target, type } = element;\n    let newValue = {...value};\n    const {fields, selected} = newValue || {};\n    const modelTarget = getTarget(element);\n    const jsonTarget = element.jsonTarget;\n    const jsonModel = element.jsonModel?.name;\n    if(typeof fields === 'object' && fields) {\n      newValue.fields = generateJson(value.fields, currentJson);\n    } \n    \n    newValue.selected = getValue(element);\n\n    if(newValue && !newValue.from) {\n      newValue.from = defaultFrom;\n    }\n    if(!element.isRemoved && newValue.selected && ![undefined, null].includes(newValue.selected.value)) {\n      const record = {dataPath, type, target: modelTarget || undefined, value: newValue, name: element.name, modelSubField: getModelSubField(element.modelSubField) || undefined, sourceField: element.sourceField || undefined, selfField: element.selfField || undefined};\n      if(type.toLowerCase() === 'many-to-one') {\n        record['jsonModel'] = jsonModel || undefined;\n        if(!jsonModel && jsonTarget) {\n          record['jsonModel'] = jsonTarget || undefined;\n        }\n      }\n      if(type.toLowerCase() === 'json-many-to-one') {\n        record['target'] = element['targetJsonModel.name'];\n      }\n      jsonData.push(JSON.parse(JSON.stringify(record)));\n    }\n  });\n  return jsonData;\n}\n\nexport function getAssignmentJson(jsonData = []) {\n  let object = {};\n  jsonData.forEach((item) => {\n    const { other, ...rest } = item;\n    object = { ...object, ...rest };\n  });\n  return object;\n}\n","let lastCookieString;\nlet lastCookies = {};\n\nfunction readCookie(name) {\n  let cookieString = document.cookie || '';\n  if (cookieString !== lastCookieString) {\n    lastCookieString = cookieString;\n    lastCookies = cookieString.split('; ').reduce((obj, value) => {\n      let parts = value.split('=');\n      obj[parts[0]] = parts[1];\n      return obj;\n    }, {});\n  }\n  return lastCookies[name];\n}\n\nexport class Service {\n  constructor() {\n    const headers = new Headers();\n    headers.append('Accept', 'application/json');\n    headers.append('Content-Type', 'application/json');\n    headers.append('X-Requested-With', 'XMLHttpRequest');\n    headers.append('X-CSRF-Token', readCookie('CSRF-TOKEN'));\n    this.baseURL = process.env.NODE_ENV === 'production' ? '..' : 'axelor-erp';\n    this.headers = headers;\n  }\n\n  fetch(url, method, options) {\n    return fetch(url, options)\n      .then((data) => {\n        if (['head', 'delete'].indexOf(method.toLowerCase()) !== -1)\n          return data;\n        let isJSON = data.headers\n          .get('content-type')\n          .includes('application/json');\n        return isJSON ? data.json() : data;\n      })\n      .catch((err) => {});\n  }\n\n  request(url, config = {}, data = {}) {\n    const options = Object.assign(\n      {\n        method: 'POST',\n        credentials: 'include',\n        headers: this.headers,\n        mode: 'cors',\n        body: JSON.stringify(data),\n      },\n      config\n    );\n    if (config.method === 'GET') {\n      delete options.body;\n    }\n    return this.fetch(\n      `${this.baseURL}${url.indexOf('/') === 0 ? url : `/${url}`}`,\n      config.method,\n      options\n    );\n  }\n\n  get(url) {\n    const config = {\n      method: 'GET',\n    };\n    return this.request(url, config);\n  }\n\n  post(url, data) {\n    const config = {\n      method: 'POST',\n    };\n    return this.request(url, config, data);\n  }\n\n  search(entity, options = {}) {\n    const data = {\n      offset: 0,\n      ...options,\n    };\n    const url = `ws/rest/${entity}/search`;\n    return this.post(url, data);\n  }\n\n  fields(data) {\n    const url = '/ws/meta/view/fields';\n    return this.post(url, data);\n  }\n\n  fetchFields(entity) {\n    const url = `/ws/meta/fields/${entity}`;\n    return this.get(url);\n  }\n\n  fetchRecord(entity, id, data = {}) {\n    const url = `ws/rest/${entity}/${id}/fetch`;\n    return this.post(url, data);\n  }\n\n  add(entity, record) {\n    const data = {\n      data: record,\n    };\n    const url = `ws/rest/${entity}`;\n    return this.post(url, data);\n  }\n\n  action(url, data) {\n    return this.post('/ws/action/' + url, data);\n  }\n\n}\n\nexport default new Service();\n","import services from './http';\nimport { sortBy } from '../utils';\nimport { ModelType, excludedUITypes } from '../constant';\n\nasync function fetchSelectionByName(name) {\n  const { data } = await services.post('ws/rest/com.axelor.meta.db.MetaSelect/search', {\n    data: {\n      _domain: 'self.name = :name',\n      _domainContext: { name },\n    },\n    fields: ['name', 'items'],\n    offset: 0,\n    limit: 1,\n    sortBy: null,\n  });\n  const record = data && data[0];\n  if (record) {\n    const { items } = record;\n    const { data } = await services.post('ws/rest/com.axelor.meta.db.MetaSelectItem/search', {\n      data: {\n        _domain: 'self.id in (:list)',\n        _domainContext: { list: items.map(x => x.id) },\n      },\n      fields: ['title', 'value', 'color', 'data', 'order'],\n      offset: 0,\n      limit: -1,\n      sortBy: ['order'],\n    });\n    return data;\n  }\n  return [];\n}\n\nexport async function getModels(data = {}, metaModalType) {\n  const models =\n    ((!metaModalType || metaModalType === 'metaModel') &&\n      (await getMetaModels(data))) ||\n    [];\n  const metaJsonModels =\n    ((!metaModalType || metaModalType === 'metaJsonModel') &&\n      (await getCustomModels(data))) ||\n    [];\n  const allModels = [];\n\n  for (let i = 0; i < models.length; i++) {\n    allModels.push({\n      ...models[i],\n      type: 'metaModel',\n    });\n  }\n  for (let i = 0; i < metaJsonModels.length; i++) {\n    allModels.push({\n      ...metaJsonModels[i],\n      type: 'metaJsonModel',\n    });\n  }\n  return allModels || [];\n}\n\nexport async function fetchModelByName(modelName) {\n  let record = null;\n  const res = await services.search('com.axelor.meta.db.MetaModel', {\n    data: {\n      criteria: [{ fieldName: 'name', operator: '=', value: modelName }],\n    },\n    fields: ['name', 'metaFields', 'id', 'fullName'],\n  });\n  if (res && res.status !== -1) {\n    const { data = [] } = res || {};\n    record = data[0] || null;\n  }\n  if (!record) {\n    // find in custom model\n    const criteria = [{ fieldName: 'name', operator: '=', value: modelName }];\n    const customModelData = await getCustomModels(criteria);\n    record = customModelData[0];\n  }\n  return record || null;\n}\n\nexport async function fetchCustomModel(model) {\n  const data = {\n    related: {\n      metaJsonModel: ['name', 'title'],\n    }\n  }\n  const customModel = await services.fetchRecord('com.axelor.meta.db.MetaJsonModel', model.id, data)\n}\n\nexport async function getMetaModels(e) {\n  const criteria = [];\n  if (e && e.search) {\n    criteria.push({ fieldName: 'fullName', operator: 'like', value: e.search });\n  }\n  const res = await services.search('com.axelor.meta.db.MetaModel', {\n    data: {\n      criteria,\n    },\n    fields: ['name', 'metaFields', 'id', 'fullName'],\n  });\n  const customModelCriteria = [];\n  if (e && e.search) {\n    customModelCriteria.push({\n      fieldName: 'name',\n      operator: 'like',\n      value: e.search,\n    });\n  }\n  const customModelData = await getCustomModels(customModelCriteria);\n  if (res && res.status === -1) return [];\n  const { data = [] } = res || {};\n  return [...data, ...customModelData];\n}\n\nexport async function getCustomModels(criteria = {}) {\n  const res = await services.search('com.axelor.meta.db.MetaJsonModel', {\n    data: {\n      criteria,\n    },\n  });\n  if (res && res.status === -1) return [];\n  const { data = [] } = res || {};\n  return data.map((d) => {\n    return { ...d, modelType: ModelType.CUSTOM };\n  });\n}\n\nexport async function fetchMetaFields(criteria = {}) {\n  const res = await services.search('com.axelor.meta.db.MetaField', {\n    data: criteria,\n  });\n  if (res && res.status === -1) return [];\n  const { data = [] } = res || {};\n  return data;\n}\n\nexport async function fetchModelFields(item, isSubField = false) {\n  let entity = `${item.packageName}.${item.typeName}`;\n  if(isSubField) {\n    entity = item.target;\n  }\n  const fields = await fetchFields({ fullName: entity });\n  return fields;\n}\n\nexport async function fetchFields(item, excludeUIFields = false) {\n  let fields = [];\n  const entity = `${item.fullName || item.target}`;\n  if (item.modelType === ModelType.CUSTOM || !entity) {\n    const criteria = [\n      { fieldName: 'jsonModel.name', operator: '=', value: item.name },\n    ];\n    const searchData = {\n      criteria,\n    };\n    const res = await services.search('com.axelor.meta.db.MetaJsonField', {\n      data: searchData,\n      fields: ['type', 'nameField', 'required', 'model', 'targetModel', 'targetJsonModel', 'targetJsonModel.name', 'modelField', 'jsonModel', 'jsonModel.name','title', 'name', \"selection\"],\n      sortBy: ['title'], \n    });\n    const { data = [] } = res || {};\n    for(let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if(item.selection) {\n        const selectionList = await fetchSelectionByName(item.selection);\n        item.selectionList = selectionList;\n      }\n      if(item.jsonModel) {\n        item.jsonModel['name'] = item['jsonModel.name'];\n      }\n      fields.push(item);\n    }\n  } else {\n    const res = await services.fetchFields(entity);\n    if (res && res.status === -1) return [];\n    const { data = [] } = res || {};\n    fields = [...data.fields];\n    Object.keys(data.jsonFields).forEach((fieldKey) => {\n      const jsonField = data.jsonFields[fieldKey];\n      fields.push(...Object.values(jsonField));\n    });\n  }\n  const newFields = sortBy(fields, 'title');\n  return newFields.filter(field => !excludedUITypes.includes(field.type));\n}\n\nexport async function fetchCustomFields(item) {\n  if(item.targetModel) {\n    const fields = await fetchFields({ fullName: item.targetModel });\n    return fields;\n  } else if(item.targetJsonModel) {\n    const criteria = [\n      { fieldName: 'jsonModel.id', operator: '=', value: item.targetJsonModel.id },\n    ];\n    const searchData = {\n      criteria,\n    };\n    const res = await services.search('com.axelor.meta.db.MetaJsonField', {\n      data: searchData,\n      fields: ['type', 'nameField', 'required', 'model', 'targetModel', 'targetJsonModel', 'targetJsonModel.name', 'modelField', 'jsonModel', 'jsonModel.name','title', 'name'],\n      sortBy: ['title'],\n    });\n    const { data = [] } = res || {};\n    let newData = data.map(item => {\n      if(item.jsonModel) {\n        item.jsonModel['name'] = item['jsonModel.name'];\n      }\n      return item;\n    });\n    return [...newData];\n  }\n  return [];\n}\n\nexport async function saveRecord(params, record) {\n  const res = await services.add(params.model, record);\n  if (res && res.status === -1) return null;\n  const { data = [] } = res || {};\n  return data[0] || null;\n}\n\nexport async function fetchRecord(model, id) {\n  const res = await services.fetchRecord(model, id);\n  if (res && res.status === -1) return null;\n  const { data = [] } = res || {};\n  return data[0] || null;\n}\n\nexport async function getCustomModelData(jsonModel) {\n  const res = await services.search(\"com.axelor.meta.db.MetaJsonRecord\", {\n    data: {\n      criteria: [{ fieldName: \"jsonModel\", operator: \"=\", value: jsonModel }],\n      // _domain: 'self.jsonModel.id=2',\n      operator: \"and\",\n    },\n  });\n  if (res && res.status === -1) return [];\n  return res && res.data;\n}\n\nexport async function getCustomModelByDomain(jsonModelDomain) {\n  const res = await services.search(\"com.axelor.meta.db.MetaJsonRecord\", {\n    data: {\n      _domain: jsonModelDomain,\n    },\n  });\n  if (res && res.status === -1) return [];\n  return res && res.data;\n}\n\n\nexport async function getNameField(jsonModel) {\n  const res = await services.search(\"com.axelor.meta.db.MetaJsonField\", {\n    data: {\n      criteria: [\n        { fieldName: \"jsonModel\", operator: \"=\", value: jsonModel },\n        { fieldName: \"nameField\", operator: \"=\", value: true },\n      ],\n      operator: \"and\",\n    },\n    fields: [\"name\"],\n  });\n  if (res && res.status > -1) {\n    return res.data && res.data[0];\n  }\n}\n\nexport async function getNameFieldByDomain(jsonModelName) {\n  const res = await services.search(\"com.axelor.meta.db.MetaJsonField\", {\n    data: {\n      _domain: `self.jsonModel.name = '${jsonModelName}' and self.nameField = true`,\n    },\n    fields: [\"name\"],\n  });\n  if (res && res.status > -1) {\n    return res.data && res.data[0];\n  }\n}\n\nexport async function getData(model) {\n  const res = await services.search(model);\n  if (res && res.status === -1) return [];\n  return res && res.data;\n}\n\nexport async function generateScriptString(jsonString, model) {\n  const action = 'action-mapper-method-create-script-from-json';\n  const data = {\n    data: {\n      context: {\n        _model: model,\n        _jsonString: jsonString,\n      },\n    },\n  };\n  const {data: responseData = []} = await services.action(action, data);\n  if(Array.isArray(responseData) && responseData[0] && responseData[0].values && responseData[0].values._scriptString) {\n    return responseData[0].values._scriptString;\n  } \n  return undefined;\n}","import React from 'react';\nimport { excludedFields, VALUE_FROM, ModelType, RelationalFieldList, DATE_FORMAT, excludedRelationalFields } from './constant';\nimport { getAssignmentJson } from './generator';\nimport { fetchFields } from './services/api';\nimport moment from 'moment';\n\nfunction useDebounce(cb, duration) {\n  const timer = React.useRef(null);\n\n  const clearTimer = () => timer.current && clearTimeout(timer.current);\n  const setTimer = (cb) => (timer.current = setTimeout(cb, duration));\n\n  React.useEffect(() => {\n    return () => clearTimer();\n  }, []);\n\n  return (...args) => {\n    clearTimer();\n    setTimer(() => cb(...args));\n  };\n}\n\nfunction isBPMQuery(type) {\n  return type === 'bpmQuery' ? true : false;\n}\n\nfunction lowerCaseFirstLetter(str) {\n  if (!str) return;\n  return str.charAt(0).toLowerCase() + str.slice(1);\n}\n\nfunction upperCaseFirstLetter(str) {\n  if (!str) return;\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nfunction getModelFilter(modelFilter) {\n  if (!modelFilter) return null;\n  const data = {\n    _domain: modelFilter,\n  };\n  return data;\n}\n\nconst getJsonExpression = (field, prefix, fieldName) => {\n  const { type, jsonField, targetName } = field;\n  switch (type) {\n    case 'text':\n    case 'string':\n    case 'date':\n    case 'datetime':\n    case 'time':\n      return `json_extract_text(${prefix}.${jsonField},'${fieldName}')`;\n    case 'many-to-one':\n    case 'json-many-to-one':\n    case 'many_to_one':\n    case 'json_many_to_one':\n      if (!targetName) {\n        return `json_extract_text(${prefix}.${jsonField},'${fieldName}')`;\n      }\n      return `json_extract_text(${prefix}.${jsonField},'${fieldName}','${targetName}')`;\n    case 'integer':\n      return `json_extract_integer(${prefix}.${jsonField},'${fieldName}')`;\n    case 'decimal':\n      return `json_extract_decimal(${prefix}.${jsonField},'${fieldName}')`;\n    case 'boolean':\n      return `json_extract_boolean(${prefix}.${jsonField},'${fieldName}')`;\n    default:\n      break;\n  }\n};\n\nfunction translate(str) {\n  if (window._t && typeof str === 'string') {\n    return window._t(str);\n  }\n  return str;\n}\n\nfunction sortBy(array = [], key) {\n  return array.sort(function (a, b) {\n    let x = a[key];\n    let y = b[key];\n    return x < y ? -1 : x > y ? 1 : 0;\n  });\n}\n\nfunction getBool(val) {\n  if (!val) return false;\n  return !!JSON.parse(String(val).toLowerCase());\n}\n\nfunction excludeFields(data, otherFields = []) {\n  const getType = (type = '') => type.replace(/-/g, '_').toLowerCase();\n  const excludeFieldList = [...excludedFields, ...otherFields];\n  const dataList = data.filter((item) => excludeFieldList.indexOf(item.name) === -1);\n  return dataList.filter((item) => {\n    return !excludedRelationalFields.includes(getType(item.type))\n  })\n}\n\nfunction validate(fields, errors = {}, isRoot = true) {\n  const isAvailable = (field) => {\n    const { value, contextModel, from } = field;\n    if (from === VALUE_FROM.CONTEXT && !contextModel) {\n      return false;\n    } \n    if(!value?.selected?.value) {\n      return false;\n    }\n    return true;\n  };\n\n  fields.forEach((field) => {\n    if (field.required && !isAvailable(field)) {\n      errors[field.dataPath] = 'value is required';\n    }\n    if(field.value && field.value.fields) {\n      errors = validate(field.value.fields, errors, false);\n    }\n  });\n  if(isRoot) {\n    return { errors, isValid: Object.keys(errors).length === 0 };\n  }\n  return errors;\n}\n\nasync function mergeFieldData(jsonData, fields) {\n  const newFields = [...fields];\n  const json = getAssignmentJson(jsonData);\n  const getPath = ({path, name, type}) => {\n    if(path) {\n      if(isRelationalField(type)) {\n        const lastIndex = path.lastIndexOf(\".\");\n        return lastIndex !== -1 ? path.substring(0, lastIndex) : path;\n      }\n      return path;\n    }\n    return name;\n  }\n  if (json) {\n    const jsonKeys = Object.keys(json);\n    for(let i = 0; i < jsonKeys.length; i++) {\n      const key = jsonKeys[i];\n    \n      const object = {};\n      const item = jsonData.find((d) => d[key]);\n      const keyList = key.split('.');\n      const value = json[key];\n      if(item && item.other && item.other.subField) {\n        const index = newFields.findIndex((elem) => elem.name === keyList[keyList.length - 1]);\n        if (index !== -1) {\n          const field = newFields[index];\n          let subFields = await fetchFields({fullName: field.target});\n          subFields = excludeFields(subFields).map(subField => {\n            return {...subField,  path: `${getPath(field)}.${subField.name}`};\n          });\n          newFields.splice(index + 1, 0, ...subFields);\n        }\n      }\n\n\n      if (key && value) {\n        const valueList = value.split('.');\n        const index = newFields.findIndex((elem) => elem.name === keyList[0]);\n        if (index !== -1) {\n          const field = newFields[index];\n          if (!item.other.targetName || (item.other.targetName && keyList.length === 3)) {\n            object['subFieldName'] = { name: keyList[1], type: item.other.subFieldType };\n          }\n          if (valueList[1]) {\n            let contextModel = { name: valueList[0] };\n            object['from'] = VALUE_FROM.CONTEXT;\n            object['contextModel'] = { name: valueList[0] };\n            object['modelSubField'] = { name: valueList[1] };\n            if (item && item.other && item.other.modelType === ModelType.META) {\n              contextModel = {\n                name: upperCaseFirstLetter(valueList[0]),\n                fullName: item.other.fullName,\n              };\n            }\n            object['contextModel'] = { ...contextModel };\n          } else {\n            const fieldIndex = fields.findIndex(\n              (field) => field.name === valueList[0]\n            );\n            if (fieldIndex !== -1) {\n              object['from'] = VALUE_FROM.SELF;\n              object['selfField'] = valueList[0];\n            } else {\n              if((keyList[1] && !object.subFieldName) || keyList[2]) {\n                const targetName = item?.other?.targetName || field.targetName;\n                object['value'] = {[targetName]: valueList[0]};\n              } else {\n                object['value'] = valueList[0];\n              }\n            }\n          }\n          object['path'] = field.path || key;\n          newFields.splice(index, 1, { ...field, ...object });\n        }\n      }\n    };\n  }\n  return newFields;\n}\n\nfunction getAssignmentFields(jsonData = [], fields) {\n  // const newFields = [...fields];\n  const json = getAssignmentJson(jsonData);\n  const jsonKeys = Object.keys(json);\n  \n  const getPath = ({path, name, type}) => {\n    if(path) {\n      if(isRelationalField(type)) {\n        const lastIndex = path.lastIndexOf(\".\");\n        return lastIndex !== -1 ? path.substring(0, lastIndex) : path;\n      }\n      return path;\n    }\n    return name;\n  }\n  const newFields = fields.map((field, i) => {\n    let key = field.path;\n    const object = {};\n    const item = jsonData.find((d) => d[key]);\n    const keyList = key.split('.');\n    const value = json[key];\n    if (key && value) {\n      const valueList = value.split('.');\n      const fieldName = keyList[keyList.length - 1];\n      const index = fields.findIndex((elem) => elem.name === fieldName);\n      if (index !== -1) {\n        const field = fields[index];\n        if (valueList[1]) {\n          let contextModel = { name: valueList[0] };\n          object['from'] = VALUE_FROM.CONTEXT;\n          object['contextModel'] = { name: valueList[0] };\n          object['modelSubField'] = { name: valueList[1] };\n          if (item && item.other && item.other.modelType === ModelType.META) {\n            contextModel = {\n              name: upperCaseFirstLetter(valueList[0]),\n              fullName: item.other.fullName,\n            };\n          }\n          object['contextModel'] = { ...contextModel };\n        } else {\n          const fieldIndex = fields.findIndex(\n            (_field) => _field.name === valueList[0]\n          );\n          if (fieldIndex !== -1) {\n            object['from'] = VALUE_FROM.SELF;\n            object['selfField'] = valueList[0];\n          } else {\n            if(field.targetName) {\n              const targetName = item?.other?.targetName || field.targetName;\n              object['value'] = {[targetName]: value};\n            } else {\n              object['value'] = value;\n            }\n          }\n        }\n        object['path'] = field.path;\n      }\n    }\n    return {...field, ...object};\n  });\n  // if (json) {\n  //   const jsonKeys = Object.keys(json);\n  //   for(let i = 0; i < jsonKeys.length; i++) {\n  //     const key = jsonKeys[i];\n    \n  //     const object = {};\n  //     const item = jsonData.find((d) => d[key]);\n  //     const keyList = key.split('.');\n  //     const value = json[key];\n\n  //     if (key && value) {\n  //       const valueList = value.split('.');\n  //       const index = newFields.findIndex((elem) => elem.name === keyList[0]);\n  //       if (index !== -1) {\n  //         const field = newFields[index];\n  //         if (valueList[1]) {\n  //           let contextModel = { name: valueList[0] };\n  //           object['from'] = VALUE_FROM.CONTEXT;\n  //           object['contextModel'] = { name: valueList[0] };\n  //           object['modelSubField'] = { name: valueList[1] };\n  //           if (item && item.other && item.other.modelType === ModelType.META) {\n  //             contextModel = {\n  //               name: upperCaseFirstLetter(valueList[0]),\n  //               fullName: item.other.fullName,\n  //             };\n  //           }\n  //           object['contextModel'] = { ...contextModel };\n  //         } else {\n  //           const fieldIndex = fields.findIndex(\n  //             (field) => field.name === valueList[0]\n  //           );\n  //           if (fieldIndex !== -1) {\n  //             object['from'] = VALUE_FROM.SELF;\n  //             object['selfField'] = valueList[0];\n  //           } else {\n  //             if(keyList[2]) {\n  //               const targetName = item?.other?.targetName || field.targetName;\n  //               object['value'] = {[targetName]: valueList[0]};\n  //             } else {\n  //               object['value'] = valueList[0];\n  //             }\n  //             // object['value'] = valueList[0];\n  //           }\n  //         }\n  //         object['path'] = field.path;\n  //         newFields.splice(index, 1, { ...field, ...object });\n  //       }\n  //     }\n  //   };\n  // }\n  return newFields;\n}\n\nfunction isRelationalField(type = '') {\n  const _type = type.replace(/-/g, '_').toLowerCase();\n  return RelationalFieldList.indexOf(_type) !== -1;\n}\n\nfunction generatePath(field) {\n  const {targetName, name} = field;\n  let path = field.name;\n  if(targetName) {\n    path = `${path}.${targetName}`;\n  }\n  return path;\n}\n\nfunction getDateTimeValue(type, fieldValue, isJsonField = false) {\n  if (type === \"date\") {\n    let date = `'${moment(fieldValue, DATE_FORMAT[\"date\"]).format(\n      \"YYYY-MM-DD\"\n    )}'`;\n    if (isJsonField) {\n      return date;\n    }\n    return `LocalDate.parse(${date})`;\n  } else if (type === \"datetime\") {\n    if (isJsonField) {\n      return `'${moment(fieldValue, DATE_FORMAT[\"datetime\"]).toISOString()}'`;\n    }\n    return `LocalDateTime.of(${moment(fieldValue, DATE_FORMAT[\"datetime\"])\n      .format(\"YYYY-M-D-H-m-s\")\n      .split(\"-\")})`;\n  } else {\n    let time = `'${moment(fieldValue, DATE_FORMAT[\"time\"]).format(\n      \"HH:mm:ss\"\n    )}'`;\n    if (isJsonField) {\n      return time;\n    }\n    return `LocalTime.parse(${time})`;\n  }\n}\n\nconst isCustomTarget = (target) => target === 'com.axelor.meta.db.MetaJsonRecord';\n\nexport const dndItemTypes = {\n  ROW: 'row',\n}\n\nexport {\n  translate,\n  sortBy,\n  useDebounce,\n  isBPMQuery,\n  lowerCaseFirstLetter,\n  upperCaseFirstLetter,\n  getModelFilter,\n  getJsonExpression,\n  getBool,\n  excludeFields,\n  validate,\n  mergeFieldData,\n  isRelationalField,\n  getAssignmentFields,\n  generatePath,\n  getDateTimeValue,\n  isCustomTarget,\n};\n","import React, { useEffect, useState } from 'react';\nimport { TextField, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport _uniqueId from 'lodash/uniqueId';\n\nimport { translate, useDebounce } from '../utils';\n\nconst getKey = (key) => key === '_selectId' ? 'id' : key; \n\nconst useStyles = makeStyles((theme) => ({\n  listbox: {\n    maxHeight: '300px !important',\n  },\n}));\nexport default function AutoComplete(props) {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [selectedValue, setSelectedValue] = useState(props.isMulti ? [] : null);\n  const [inputValue, setInputValue] = useState('');\n  const {\n    name,\n    value,\n    onChange,\n    options: flatOptions,\n    optionLabelKey = 'title',\n    optionValueKey = 'id',\n    isMulti = false,\n    title,\n    fetchAPI,\n    inline,\n    InputProps,\n    error,\n    filterSelectedOptions = false,\n    disableCloseOnSelect = true,\n    readOnly = false,\n    concatValue,\n    inputRootClass,\n    ...other\n  } = props;\n\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n\n  const findOption = React.useCallback(\n    (option) => {\n      return (\n        flatOptions &&\n        flatOptions.find((i) => i && i[getKey(optionValueKey)] === option.trim())\n      );\n    },\n    [flatOptions, optionValueKey]\n  );\n\n  async function onInputChange(value = '') {\n    setInputValue(value);\n  }\n\n  const delayChange = useDebounce(onInputChange, 400);\n\n  useEffect(() => {\n    let active = true;\n    if (open) {\n      setOptions([]);\n      setLoading(true);\n      if (fetchAPI) {\n        (async () => {\n          const data = await fetchAPI({ search: inputValue });\n          if (active) {\n            setOptions(data);\n            setLoading(false);\n          }\n        })();\n      } else {\n        setOptions(flatOptions);\n        setLoading(false);\n      }\n    }\n    return () => {\n      active = false;\n      setLoading(false);\n    };\n  }, [fetchAPI, flatOptions, inputValue, open]);\n\n  useEffect(() => {\n    if (typeof value === 'string') {\n      const values = value.split(',');\n      setSelectedValue(\n        isMulti ? values.map((v) => findOption(v)) : findOption(values[0])\n      );\n    } else {\n      setSelectedValue(value ? value : isMulti ? [] : null);\n    }\n  }, [value, isMulti, findOption]);\n\n  function onKeyDown(e) {\n    if (e.key === 'Backspace') {\n      if (selectedValue && selectedValue[getKey(optionLabelKey)] === inputValue) {\n        onChange(null, 'backspace');\n      }\n    }\n  }\n\n  function handleChange(item, reason) {\n    if (typeof value === 'string') {\n      isMulti\n        ? onChange(item.map((i) => i && i[getKey(optionValueKey)]).join(',') || [], reason)\n        : onChange(item && item[getKey(optionValueKey)], reason);\n    } else {\n      onChange(item, reason);\n    }\n  }\n\n  const checkValue = (option) => {\n    return (option && option.type) === 'metaJsonModel'\n      ? `${\n          option && option[getKey(optionLabelKey)] ? option[getKey(optionLabelKey)] : ''\n        } (Custom model)` || ''\n      : name === 'fieldName'\n      ? `${translate(option && option['title'] ? option['title'] : '')} (${\n          option && option[getKey(optionLabelKey)]\n        })`\n      : option\n      ? option[getKey(optionLabelKey)] && concatValue && option[getKey(optionValueKey)] ?\n        `${option[getKey(optionLabelKey)]} (${option[getKey(optionValueKey)]})`\n        : option[getKey(optionLabelKey)] ? option[getKey(optionLabelKey)]\n        : option['name']\n        ? option['name']\n        : option['id']\n        ? option['id'].toString()\n        : ''\n      : '';\n  };\n  return (\n    <Autocomplete\n      getOptionSelected={(option, value) => {\n        return isMulti\n          ? option[getKey(optionValueKey)] === value[getKey(optionValueKey)]\n          : checkValue(option) === checkValue(value);\n      }}\n      getOptionLabel={(option) => {\n        return checkValue(option);\n      }}\n      loading={loading}\n      id={_uniqueId('select-widget')}\n      open={open}\n      onOpen={() => setOpen(true)}\n      onClose={() => setOpen(false)}\n      disabled={readOnly}\n      value={\n        selectedValue\n          ? isMulti\n            ? Array.isArray(selectedValue)\n              ? selectedValue\n              : []\n            : selectedValue\n          : isMulti\n          ? []\n          : null\n      }\n      onChange={(event, newValue, reason) => handleChange(newValue, reason)}\n      options={options || []}\n      multiple={isMulti}\n      filterSelectedOptions={filterSelectedOptions}\n      onInputChange={(e, value) => delayChange(value)}\n      classes={{ option: 'menu-item', inputRoot: inputRootClass }}\n      renderInput={(params) => {\n        return (\n          <TextField\n            {...params}\n            error={error}\n            label={inline ? '' : title}\n            fullWidth\n            onClick={() => {\n              if (readOnly) return;\n              setOpen(true);\n            }}\n            InputProps={{\n              ...InputProps,\n              ...params.InputProps,\n              endAdornment: (\n                <React.Fragment>\n                  {loading ? (\n                    <CircularProgress\n                      className={classes.circularProgress}\n                      size={15}\n                    />\n                  ) : null}\n                  {params.InputProps.endAdornment}\n                </React.Fragment>\n              ),\n            }}\n            {...(isMulti ? {} : { onKeyDown: onKeyDown })}\n          />\n        );\n      }}\n      {...(isMulti ? { disableCloseOnSelect } : {})}\n      {...other}\n    />\n  );\n}\n","import React, { useEffect } from 'react';\nimport {\n  Grid,\n  Button,\n  Typography,\n  CardActions,\n  Checkbox,\n  FormControlLabel,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  TextField,\n\n} from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  dialogPaper: {\n    minHeight: '75vh',\n    maxHeight: '75vh',\n  },\n  cardContent: {\n    height: '100%',\n    minWidth: 250,\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  cardContentItemText: {\n    fontSize: 12,\n    lineHeight: 0.5,\n    paddingBottom: 8,\n  },\n  cardContentItemContainer: {\n    marginLeft: 10,\n  },\n  cardContentItemTitle: {\n    fontSize: 16,\n  },\n  cardActionView: {\n    justifyContent: 'flex-end',\n  },\n  noFields: {\n    textAlign: 'center',\n    color: 'gray',\n  },\n  dialogTitle: {\n    '& > h2': {\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n  },\n  capitalizeText: {\n    textTransform: 'capitalize',\n  },\n  subHeaderRow: {\n    borderBottom: '1px solid #eee',\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 8,\n    display: 'flex',\n\n  },\n  fieldListViewContainer: {\n    marginLeft: 16,\n    marginRight: 2,\n    marginTop: 8,\n    overflowY: 'auto',\n    height: '53.8vh',\n  },\n  searchField: {\n    width: '75%',\n    '& input': {\n      padding: '8px 0 7px !important',\n    }\n  },\n  checkbox: {\n    color: \"#2185D0 !important\",\n    \"&$checked\": {\n      color: \"#2185D0 !important\",\n      backgrounColor: \"#2185D0 !important\",\n\n    },\n  },\n  selectButton: {\n    backgroundColor: '#0275d8',\n    textTransform: 'capitalize',\n    '&:hover': {\n      backgroundColor: '#025aa5',\n      borderColor: '#014682',\n    }\n  },\n  cancelButton: {\n    backgroundColor: '#fff',\n    borderColor: '#cccccc',\n    textTransform: 'capitalize',\n    color: '#333333',\n    '&:hover': {\n      backgroundColor: '#e6e6e6',\n      borderColor: '#adadad',\n    }\n  }\n});\n\nconst getFilteredFields = (list, text) => {\n  if(!text) {\n    return list;\n  }\n  return list.filter(item => {\n    return (item.title || '').toLowerCase().includes(text.toLowerCase()) || (item.name || '').toLowerCase().includes(text.toLowerCase());\n  });\n}\n\nfunction FieldPopoverComponent({\n  data,\n  onSubmit,\n  open,\n  onClose,\n}) {\n  const classes = useStyles();\n  const [selected, setSelected] = React.useState([]);\n  const [selectAll, setSelectAll] = React.useState(false);\n  const [searchText, setSearchText] = React.useState('');\n  const fields = Object.values(data).filter((e) => e.isRemoved !== false);\n\n  const handleClose = React.useCallback(\n    (e) => {\n      e.stopPropagation();\n      onClose();\n      setSelected([]);\n    },\n    [onClose]\n  );\n\n  const handleSubmit = React.useCallback(\n    (e) => {\n      e.stopPropagation();\n      const list = fields.filter(\n        (d, index) => selected.indexOf(d.name) !== -1\n      );\n      onSubmit && onSubmit(list);\n      handleClose(e);\n      setSelectAll(false);\n    },\n    [onSubmit, selected, handleClose, fields]\n  );\n\n  const handleCheckbox = React.useCallback((e) => {\n    e.stopPropagation();\n    const { value, checked } = e.target;\n    setSelected((selected) => {\n      if (selected.indexOf(value) !== -1) {\n        setSelectAll(false);\n        return [...selected.filter((v) => v !== value)];\n      } else {\n        return [...selected, value];\n      }\n    });\n  }, []);\n\n  const handleSelectAll = React.useCallback((_selectAll) => {\n    if(_selectAll) {\n      setSelected(fields.map((f) => f.name));\n    } else {\n      setSelected([]);\n    }\n    setSelectAll(_selectAll);\n  }, [fields]);\n\n  const handleFieldSearch = React.useCallback((e) => {\n    setSearchText(e.target.value);\n  }, []);\n\n  useEffect(() => {\n    setSearchText(\"\");\n  }, [open]);\n\n  return (\n    <React.Fragment>\n      <Dialog\n        fullWidth={true}\n        // scroll=\"paper\"\n        open={open}\n        classes={{ paper: classes.dialogPaper }}\n        onClose={handleClose}\n        aria-labelledby=\"scroll-dialog-title\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\" className={classes.dialogTitle}>\n          <span>Select Fields</span>\n        </DialogTitle>\n\n        <DialogContent dividers={true} classes={{ root: classes.cardContent }}>\n          <div className={classes.subHeaderRow}>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  classes={{root: classes.checkbox}}\n                  onChange={() => handleSelectAll(!selectAll)}\n                  value={selectAll}\n                  checked={selectAll}\n                />\n              }\n            />\n            <TextField\n              classes={{ root: classes.searchField }}\n              placeholder=\"Search fields\"\n              onChange={(e) => handleFieldSearch(e)}\n            />\n          </div>\n          <div className={classes.fieldListViewContainer}>\n          {getFilteredFields(fields, searchText).map((field, i) => (\n            <Grid container key={i}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    classes={{ root: classes.checkbox }}\n                    onChange={handleCheckbox}\n                    value={field.name}\n                    checked={selected.indexOf(field.name) !== -1}\n                  />\n                }\n                label={\n                  <div className={classes.cardContentItemContainer}>\n                    <Typography className={classes.cardContentItemTitle}>\n                      {field.title}\n                    </Typography>\n                    <Typography className={classes.cardContentItemText}>\n                      {field.name}\n                    </Typography>\n                  </div>\n                }\n              />\n            </Grid>\n          ))}\n          {fields.length === 0 && (\n            <Typography className={classes.noFields}>\n              No fields available\n            </Typography>\n          )}\n          </div>\n        </DialogContent>\n        <CardActions className={classes.cardActionView}>\n          <Button\n            className={classes.cancelButton}\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={handleClose}\n          >\n            Close\n          </Button>\n          <Button\n            className={classes.selectButton}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSubmit}\n          >\n            OK\n          </Button>\n          \n        </CardActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nconst FieldPopover = React.memo(FieldPopoverComponent);\n\nexport default FieldPopover;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport { Typography, Grid } from '@material-ui/core';\nimport { RelationalFieldList } from './../constant';\nimport FieldPopover from './FieldPopover';\nimport AddIcon from '@material-ui/icons/AddCircleOutline';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n  },\n  input: {\n    width: '100%',\n    display: 'flex',\n    position: 'relative',\n    '& > div:before': {\n      border: 0,\n    },\n  },\n  parentField: {\n    marginRight: 5,\n    color: '#3f51b5',\n  },\n  clickableView: {\n    cursor: 'pointer',\n    '& input': {\n      cursor: 'pointer',\n    },\n    // '&:hover': {\n    //   '& $addFieldView': {\n    //     visibility: 'visible',\n    //   },\n    // }\n  },\n  fieldName: {\n    fontSize: 12,\n  },\n  fieldNameColumn: {\n    width: 'unset',\n  },\n  // addFieldView: {\n  //   visibility: 'hidden',\n  // },\n  addFieldButton: {\n    padding: 0,\n    marginLeft: 5,\n  }\n});\n\nconst isRelationalField = (row) => {\n  const type = row.type.replace(/-/g, '_').toLowerCase();\n  return RelationalFieldList.indexOf(type) !== -1;\n};\n\nconst getFields = (item) => {\n  if(isRelationalField(item)) {\n    const {value} = item;\n    return value?.fields || null;\n  }\n  return null;\n}\n\nfunction ModelFieldComponent(props) {\n  const classes = useStyles();\n  const { item, handleAdd } = props;\n  const [showSubField, setShowSubField] = React.useState(false);\n  const fields = getFields(item);\n\n  React.useEffect(() => {\n    if (item && isRelationalField(item) && item['subFieldName']) {\n      setShowSubField(true);\n    }\n  }, [item]);\n\n  if (!item) {\n    return null;\n  }\n  return (\n      <div\n        className={classNames(classes.input)}\n      >\n        <Grid container direction=\"column\" className={classes.fieldNameColumn}>\n          <Typography title={item['name']}>\n            {item['title'] || item['autoTitle'] || item['name']}\n          </Typography>\n        </Grid>\n        <div>\n          {fields && showSubField && <FieldPopover\n            data={fields}\n            iconButton={true}\n            onSubmit={(data) => handleAdd(data)}\n            icon={<AddIcon />}\n            buttonTitle=\"Add Fields\"\n            iconButtonClassName={classes.addFieldButton}\n          />}\n        </div>\n      </div>\n  );\n}\n\nconst ModelField = React.memo(ModelFieldComponent);\nexport default ModelField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Input from \"@material-ui/core/Input\";\nimport { TextField } from \"@material-ui/core\";\n\nfunction InputField({\n  name,\n  title,\n  autoTitle,\n  value = \"\",\n  onChange,\n  onBlur,\n  readOnly,\n  inline,\n  InputProps,\n  style,\n  ...other\n}) {\n  const [text, setText] = React.useState();\n\n  React.useEffect(() => {\n    setText(value);\n  }, [value]);\n\n  if (inline) {\n    return (\n      <Input\n        style={{ width: \"100%\", ...style }}\n        placeholder={title}\n        inputProps={{ \"aria-label\": title }}\n        name={name}\n        onChange={(e) => setText(e.target.value)}\n        onBlur={(e) => onBlur(e.target.value)}\n        autoComplete=\"off\"\n        readOnly={readOnly}\n        disabled={readOnly}\n        value={text || \"\"}\n        {...other}\n      />\n    );\n  }\n  return (\n    <TextField\n      label={title || autoTitle}\n      name={name}\n      style={{ width: \"100%\", ...style }}\n      onChange={(e) => setText(e.target.value)}\n      onBlur={onBlur}\n      autoComplete=\"off\"\n      InputProps={{ readOnly, ...InputProps }}\n      value={text || \"\"}\n      className={other.className}\n      {...other}\n    />\n  );\n}\n\nInputField.propTypes = {\n  name: PropTypes.string,\n  title: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  readOnly: PropTypes.bool,\n  multiline: PropTypes.bool,\n  rows: PropTypes.number,\n};\n\nInputField.defaultProps = {\n  rows: 3,\n  readOnly: false,\n};\nexport default InputField;\n","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Input from \"./TextInput\";\n\nfunction NumberField({\n  type = \"integer\",\n  title,\n  onChange,\n  value = 0,\n  readOnly,\n  scale = 2,\n  customeFormat,\n  onBlur: blur,\n  ...other\n}) {\n  let [val, setVal] = useState(value);\n\n  const formatValue = useCallback(\n    (value) => Number(Number(value).toFixed(type === \"integer\" ? 0 : scale)),\n    [type, scale]\n  );\n\n  React.useEffect(() => {\n    setVal(formatValue(value));\n  }, [value, setVal, formatValue]);\n\n  function onBlur(e) {\n    onChange(formatValue(e.target.value));\n    setVal(formatValue(e.target.value));\n    blur && blur(e);\n  }\n  return (\n    <Input\n      onChange={setVal}\n      title={title}\n      type={\"number\"}\n      value={`${val}`}\n      onBlur={onBlur}\n      {...other}\n    />\n  );\n}\nNumberField.propTypes = {\n  name: PropTypes.string,\n  title: PropTypes.string,\n  type: PropTypes.string,\n  onChange: PropTypes.func,\n  readOnly: PropTypes.bool,\n  scale: PropTypes.number,\n  customeFormat: PropTypes.object,\n};\n\nNumberField.defaultProps = {\n  readOnly: false,\n};\nexport default NumberField;\n","import React, { useState } from \"react\";\nimport MomentUtils from \"@date-io/moment\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDateTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport { DATE_FORMAT } from \"./../constant\";\n\nconst PICKERS = {\n  date: KeyboardDatePicker,\n  time: KeyboardTimePicker,\n  datetime: KeyboardDateTimePicker,\n};\n\nfunction DateTimePicker({ inline, type = \"date\", ...props }) {\n  const [open, setOpen] = useState(false);\n  let valueRef = React.useRef();\n  const { name, title, format, error, onChange, ...other } = props;\n  const Picker = PICKERS[type];\n\n  function onKeyDown(e) {\n    if (e.keyCode === 40) setOpen(true);\n  }\n\n  function onClose() {\n    onChange(valueRef.current);\n    setOpen(false);\n  }\n\n  React.useEffect(() => {\n    if(open) {\n      valueRef.current = other.value;  \n    }\n  }, [open, other.value])\n\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <Picker\n        autoOk={true}\n        open={open}\n        ampm={false}\n        views={\n          type === \"date\"\n            ? [\"date\"]\n            : type === \"datetime\"\n            ? [\"date\", \"hours\", \"minutes\"]\n            : type === \"time\"\n            ? [\"hours\", \"minutes\", \"seconds\"]\n            : [\"date\"]\n        }\n        onChange={(value) => {\n          valueRef.current = value;\n          onChange(value);\n        }}\n        PopoverProps={{\n          anchorOrigin: { vertical: \"bottom\", horizontal: \"left\" },\n          transformOrigin: { vertical: \"top\", horizontal: \"left\" },\n        }}\n        disableToolbar\n        variant=\"inline\"\n        {...(inline ? { invalidDateMessage: \"\" } : {})}\n        style={{ width: \"100%\", ...(inline ? { margin: 0 } : {}) }}\n        label={inline ? \"\" : title}\n        format={format || DATE_FORMAT[type]}\n        {...(type !== \"time\" ? { animateYearScrolling: false } : {})}\n        {...other}\n        onKeyDown={onKeyDown}\n        onClose={onClose}\n        onOpen={() => setOpen(true)}\n      />\n    </MuiPickersUtilsProvider>\n  );\n}\n\nexport default DateTimePicker;\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Select, FormControl, InputLabel } from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  select: {\n    width: \"100%\",\n  },\n}));\n\nexport default function Selection({\n  name,\n  value = \"\",\n  onChange,\n  options,\n  title,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  return (\n    <FormControl className={classnames(classes.formControl, className)}>\n      <InputLabel>{title}</InputLabel>\n      <Select\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n        name={name}\n        style={{ marginRight: 8 }}\n        classes={{ select: classes.select }}\n        {...rest}\n      >\n        {options &&\n          Array.isArray(options) &&\n          options.map(({ name, title }, index) => (\n            <MenuItem value={name} key={index}>\n              {title}\n            </MenuItem>\n          ))}\n      </Select>\n    </FormControl>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { get } from 'lodash';\n\nimport Selection from './Selection';\n\nimport {\n  fetchFields,\n} from './../services/api';\nimport { VALUE_FROM } from './../constant';\nimport { isRelationalField } from './../utils';\n\nconst useStyles = makeStyles({\n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    selection: {\n        minWidth: 150,\n        marginRight: 20, \n    }\n});\n\nconst getSubFieldModel = (row, defaultFrom) => {\n  const from = get(row, 'value.from', defaultFrom);\n  if (from === VALUE_FROM.CONTEXT) {\n    return row['contextModel'];\n  }\n  if (from === VALUE_FROM.SOURCE) {\n    return {fullName: row['sourceField'].target};\n  }\n  if (from === VALUE_FROM.SELF) {\n    return {fullName: row['selfField'].target};\n  }\n  if ([VALUE_FROM.PARENT].includes(from)) {\n    const model = get(row, 'value.selected.value', {});\n    return { fullName: model.target };\n  }\n  return {};\n};\n\nconst isLastRelationalField = (record) => {\n    if(!record || isRelationalField(record.type)) {\n        return true;\n    }\n    return false;\n}\n\n\nfunction SubFieldView({ onChange, row, data, defaultFrom }) {\n    const classes = useStyles();\n//   const [data,setData] = React.useState([{name: undefined}]);\n\n  const [currentField, setCurrentField] = React.useState();\n\n  const handleChange = React.useCallback((e, index) => {\n    const newData = data ? [...data] : [];\n    if(e === null) {\n      newData.splice(index, newData.length - 1);\n    } else {\n      if(newData[index].name) {\n        newData.splice(index, 1, e);\n      } else {\n        newData.splice(newData.length - 1, 0, e);\n      }\n    }\n    onChange([...newData]);\n  }, [data, onChange]);\n\n  const getListedFieldModel = React.useCallback((index) => {\n    const record = data[index - 1];  \n    if(record) {\n        return {fullName: record.target}\n    } else {\n        return getSubFieldModel(row, defaultFrom);\n    }\n  }, [data, row, defaultFrom]);\n\n  return (\n    <div className={classes.container}>\n        \n        {\n            data && data.map((field, i) => (\n                isLastRelationalField(data[i - 1]) ?\n                <Selection\n                    key={i}\n                    name=\"metaModalField\"\n                    placeholder=\"Model field\"\n                    optionValueKey=\"name\"                    \n                    optionLabelKey=\"title\"\n                    concatValue={true}\n                    fetchAPI={() => fetchFields(getListedFieldModel(i), true)}\n                    value={field}\n                    className={classes.selection}\n                    disableClearable={i === data.length - 1 ? true : false}\n                    onChange={(e) =>\n                        handleChange(e, i)\n                    }\n                />      \n                : null\n            ))\n        }\n        {/* <Selection\n          name=\"metaModalField\"\n          title=\"Model Field\"\n          placeholder=\"Model field\"\n          optionValueKey=\"name\"\n          optionLabelKey=\"name\"\n          fetchAPI={() => fetchFields(getSubFieldModel(row))}\n          value={null}\n          onChange={(e) =>\n            handleChange(e)\n          }\n        /> */}\n    </div>\n\n  );\n}\n\nconst SubFieldComponent = React.memo(SubFieldView);\n\nexport default SubFieldComponent;\n","import { useRef } from 'react';\nimport { dndItemTypes } from '../utils';\nimport { useDrag, useDrop } from 'react-dnd';\n\nconst style = {\n  border: '1px dashed gray',\n  padding: '0.5rem 1rem',\n  marginBottom: '.5rem',\n  backgroundColor: 'white',\n};\n\nconst Card = ({ id, text, index, moveCard, ...props }) => {\n    const ref = useRef(null);\n    const [{ handlerId }, drop] = useDrop({\n        accept: dndItemTypes.ROW,\n        collect(monitor) {\n            return {\n                handlerId: monitor.getHandlerId(),\n            };\n        },\n        hover(item, monitor) {\n            if (!ref.current) {\n                return;\n            }\n            const dragIndex = item.index;\n            const hoverIndex = index;\n            // Don't replace items with themselves\n            if (dragIndex === hoverIndex) {\n                return;\n            }\n            // Determine rectangle on screen\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\n            // Get vertical middle\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n            // Determine mouse position\n            const clientOffset = monitor.getClientOffset();\n            // Get pixels to the top\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n            // Only perform the move when the mouse has crossed half of the items height\n            // When dragging downwards, only move when the cursor is below 50%\n            // When dragging upwards, only move when the cursor is above 50%\n            // Dragging downwards\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                return;\n            }\n            // Dragging upwards\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n                return;\n            }\n            // Time to actually perform the action\n            moveCard(dragIndex, hoverIndex);\n            // Note: we're mutating the monitor item here!\n            // Generally it's better to avoid mutations,\n            // but it's good here for the sake of performance\n            // to avoid expensive index searches.\n            item.index = hoverIndex;\n        },\n    });\n    const [{ isDragging }, drag, preview] = useDrag({\n        type: dndItemTypes.ROW,\n        item: () => {\n            return { id, index };\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n    const opacity = isDragging ? 0 : 1;\n    drag(drop(ref));\n    return props.children({ preview, ref: ref, style: { ...style, opacity }, handlerId });\n};\n\nexport default Card;\n","import React from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RightIcon from '@material-ui/icons/ArrowForward';\n\nimport Selection from './Selection';\nimport { fetchFields, getModels } from '../services/api';\nimport { translate } from '../utils';\nimport {excludedFields} from \"../constant\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n  rightIcon: {\n    width: '0.8em',\n    height: '0.8em',\n  },\n}));\n\nconst getKey = (key) => (key === '_selectId' ? 'id' : key);\n\nconst getIndex = (value, newValue) => {\n  let index;\n  for (let i = 0; i < value.length; i++) {\n    const element = value[i];\n    const elemIndex = newValue.findIndex((val) => val.name === element.name);\n    if (elemIndex === -1) {\n      index = i;\n      break;\n    }\n  }\n  return index;\n};\n\nfunction MultiSelector(props) {\n  const {\n    sourceModel,\n    value,\n    onChange,\n    parentRow,\n    targetModel,\n    isContext = false,\n    isM2o = false,\n    ...rest\n  } = props;\n  const classes = useStyles();\n\n  const getModel = () => {\n    if (Array.isArray(value) && value.length) {\n      const list = value.filter((e) => e.name);\n      const record = list[list.length - 1];\n      if (isContext && list.length - 1 === 0) {\n        return record;\n      }\n      if(record.model === 'com.axelor.meta.db.MetaJsonRecord' && record.targetModel) {\n        return { fullName: record.targetModel };\n      }\n      if(!record.target) {\n        return { fullName: record.model };\n      }\n      return { fullName: record.target };\n    } else {\n      if (sourceModel) {\n        return sourceModel;\n      } else if (parentRow) {\n        return { fullName: parentRow.target };\n      } else if (targetModel) {\n        return targetModel;\n      }\n    }\n  };\n\n  const handleChange = React.useCallback(\n    (newValue, reason) => {\n      if (reason === 'remove-option') {\n        const index = getIndex(value, newValue);\n        if (index) {\n          newValue.splice(index, newValue.length - 1);\n        }\n      }\n      onChange(newValue);\n    },\n    [value, onChange]\n  );\n\n  const hasValue = () => Array.isArray(value) && value.length;\n  const checkValue = (option) => {\n    const { optionLabelKey, optionValueKey, concatValue, name } = rest;\n    return (option && option.type) === 'metaJsonModel'\n      ? `${\n          option && option[getKey(optionLabelKey)]\n            ? option[getKey(optionLabelKey)]\n            : ''\n        } (Custom model)` || ''\n      : name === 'fieldName'\n      ? `${translate(option && option['title'] ? option['title'] : '')} (${\n          option && option[getKey(optionLabelKey)]\n        })`\n      : option\n      ? option[getKey(optionLabelKey)] &&\n        concatValue &&\n        option[getKey(optionValueKey)]\n        ? `${option[getKey(optionLabelKey)] || option[getKey(optionValueKey)]}`\n        : option[getKey(optionLabelKey)]\n        ? option[getKey(optionLabelKey)]\n        : option['name']\n        ? option['name']\n        : option['id']\n        ? option['id'].toString()\n        : ''\n      : '';\n  };\n  return (\n    <div className={rest.containerClassName}>\n      <Selection\n        title={props.title}\n        isMulti={true}\n        fetchAPI={async() => {\n          if(sourceModel && value && value[0]) {\n            if(value[0].title === 'SOURCE') {\n              return [];\n            }\n          }\n          let data = isContext && !hasValue() ? await getModels() : await fetchFields(getModel())\n          if(sourceModel && (!value || value.length < 1)) {\n            const object = Object.assign({}, sourceModel, {\n              title: `SOURCE`,\n            });\n            data.splice(0, 0, {...object});\n          }\n          if(isM2o && value && value.length > 0) {\n            data = data.filter(item => ['many_to_one', 'one_to_one'].includes(item.type.toLowerCase()) && !excludedFields.includes(item.name));\n          }\n          return data;\n        }}\n        value={value}\n        onChange={handleChange}\n        renderTags={(tags, getTagProps) => {\n          return tags.map((tag, i) => (\n            <React.Fragment key={i}>\n              <Chip\n                title={tag[getKey(rest.optionValueKey)]}\n                label={checkValue(tag)}\n                className={classes.chip}\n                {...getTagProps({ index: i })}\n              />\n              {i < tags.length - 1 && (\n                <RightIcon className={classes.rightIcon} />\n              )}\n            </React.Fragment>\n          ));\n        }}\n        {...rest}\n      />\n    </div>\n  );\n}\n\nexport default MultiSelector;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Table,\n  IconButton,\n  Tooltip,\n  Checkbox,\n  Button,\n  TextField,\n  Grid,\n} from '@material-ui/core';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport ReorderIcon from \"@material-ui/icons/Reorder\";\nimport { Close, AddRounded } from '@material-ui/icons';\n\nimport moment from 'moment';\nimport { get } from 'lodash';\n\nimport Selection from './components/Selection';\nimport ModelFieldComponent from './components/ModelFieldComponent';\nimport NumberField from './components/NumberInput';\nimport DateTimePicker from './components/DateTimePicker';\nimport Select from './components/Select';\nimport InputField from './components/TextInput';\nimport SubFieldComponent from './components/SubFieldComponent';\nimport Card from './components/DndView';\n\nimport {\n  getMetaModels,\n  fetchFields,\n  getData,\n  getCustomModelByDomain,\n  getNameFieldByDomain,\n  getCustomModelData,\n} from './services/api';\nimport { VALUE_FROM, DATE_FORMAT, RelationalFieldList } from './constant';\nimport { isRelationalField } from './utils';\nimport MultiSelector from './components/MultiSelector';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    overflowX: 'auto',\n    height: '86vh',\n    overflowY: 'auto',\n  },\n  table: {\n    minWidth: 650,\n    '& td': {\n      padding: '0px 16px !important',\n    },\n  },\n  tableRowRoot: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n    '& .MuiInput-underline:before': {\n      borderBottom: 0,\n    },\n  },\n  input: {\n    width: '100%',\n  },\n  error: {\n    fontSize: '0.7em',\n    position: 'absolute',\n    paddingTop: 1,\n    color: 'red',\n    fontWeight: 'bold',\n  },\n  valueInputContainer: {\n    position: 'relative',\n  },\n  radioInput: {\n    padding: 4,\n  },\n  iconButton: {\n    // border: '1px solid #0267bf',\n    padding: '8px',\n    marginTop: 7,\n  },\n  deleteIcon: {\n    color: '#0275d8',\n  },\n  headerTitle: {\n    paddingLeft: 0,\n    textAlign: 'center',\n  },\n  addFieldButton: {\n    left: 10,\n    top: 7,\n    textTransform: 'capitalize',\n  },\n  searchField: {\n    marginLeft: 20,\n    '&>div': {\n      marginTop: 10,\n    },\n  },\n}));\n\nconst fromOptions = [\n  { label: 'Self', value: VALUE_FROM.SELF },\n  { label: 'Context', value: VALUE_FROM.CONTEXT },\n  { label: 'Expression', value: VALUE_FROM.NONE },\n];\n\nconst getType = (row) => {\n  const { type } = row;\n  return type.replace(/-/g, '_').toLowerCase();\n};\n\nconst getOptions = (isRoot, parentRow, defaultFrom) => {\n  const options = [\n    { title: 'Self', id: VALUE_FROM.SELF },\n    { title: 'Context', id: VALUE_FROM.CONTEXT },\n    { title: 'Expression', id: VALUE_FROM.NONE },\n    { title: 'Source', id: VALUE_FROM.SOURCE },\n  ];\n  const from = get(parentRow, 'value.from', defaultFrom);\n  if (\n    parentRow &&\n    [VALUE_FROM.CONTEXT, VALUE_FROM.SELF, VALUE_FROM.SOURCE].includes(from)\n  ) {\n    options.push({ title: 'Parent', id: VALUE_FROM.PARENT });\n  }\n  return options;\n};\n\nconst getSubFieldModel = (row, field, i) => {\n  if (row.value.from === VALUE_FROM.CONTEXT && i === 0) {\n    return row['contextModel'];\n  }\n  if (row.value.from === VALUE_FROM.SELF && i === 0) {\n    const model = get(row, 'value.selected.value', {});\n    return { fullName: model.target };\n  }\n  if (i > 0) {\n    return { fullName: field.target };\n  }\n  return {};\n};\n\nconst getSelfValue = (row) => {\n  const { selected } = row.value || {};\n  let value;\n  if (selected && typeof selected.value === 'object') {\n    return selected.value;\n  }\n  if (selected) {\n    value = selected.value;\n  }\n  return { name: value };\n};\n\nconst getSourceValue = (row) => {\n  const { selected } = row.value || {};\n  let value;\n  if (selected && typeof selected.value === 'object') {\n    return selected.value;\n  }\n  if (selected) {\n    value = selected.value;\n  }\n  return { name: value };\n};\n\nconst getExpressionValue = (row) => {\n  const { selected = {} } = row.value || {};\n  if (!selected) {\n    return undefined;\n  }\n  if (isRelationalField(row.type)) {\n    return { [selected.targetName]: selected.value };\n  }\n  return selected.value;\n};\n\nconst getCustomStyle = (row) => {\n  const { subField } = row;\n  const object = {};\n  if (subField) {\n    object['borderBottom'] = '0px';\n  }\n  return object;\n};\n\nconst getError = (errors, row) => {\n  const error = get(errors, row.dataPath, '');\n  if (typeof error === 'string') {\n    return error;\n  }\n  return null;\n};\n\nconst showSubField = (row, defaultFrom) => {\n  const { contextModel, self, sourceField, selfField } = row;\n  const from = get(row, 'value.from', defaultFrom);\n  const value = get(row, 'value.selected.value', null);\n  if (contextModel && from === 'context') {\n    return true;\n  }\n  if (\n    sourceField &&\n    from === VALUE_FROM.SOURCE &&\n    isRelationalField(sourceField.type)\n  ) {\n    return true;\n  }\n  if (\n    selfField &&\n    from === VALUE_FROM.SELF &&\n    isRelationalField(selfField.type)\n  ) {\n    return true;\n  }\n  if (\n    [VALUE_FROM.PARENT].includes(from) &&\n    value &&\n    (isRelationalField(value.type) || row.modelSubField?.length > 1)\n  ) {\n    return true;\n  }\n};\n\nconst getOptionDisabled = (option, parentRow, sourceModel) => {\n  if (option.id === VALUE_FROM.PARENT) {\n    return !parentRow?.value?.selected;\n  }\n  if (option.id === VALUE_FROM.SOURCE && !sourceModel) {\n    return true;\n  }\n  return false;\n};\n\nconst getParentValueTarget = (row, defaultFrom) => {\n  const { contextModel } = row;\n  const from = get(row, 'value.from', defaultFrom);\n  if (contextModel && from === 'context') {\n    return { fullName: contextModel.target };\n  }\n  if ([VALUE_FROM.SELF, VALUE_FROM.SOURCE, VALUE_FROM.PARENT].includes(from)) {\n    const record = getSelfValue(row);\n    return { fullName: record.target };\n  }\n  return {};\n};\n\n/**\n *\n * @param {*} row\n * @param {*} value\n * @param {*} nameField\n *\n * If targetName is available\n * use targetName\n * If nameField is available\n * use nameField\n * If name property is available in value\n * use name as targetName\n * Else use id property as targetName\n */\nconst getTargetName = (row, value, nameField) => {\n  let targetName;\n  if (value && value[row.targetName]) {\n    targetName = row.targetName;\n  }\n  if (!targetName && nameField && value && value[nameField]) {\n    targetName = nameField;\n  }\n  if (!targetName) {\n    const nameValue = value ? value['name'] : null;\n    if (nameValue) {\n      targetName = 'name';\n    } else {\n      targetName = '_selectId';\n    }\n  }\n  return targetName;\n};\n\nfunction RenderRelationalWidget(props) {\n  const { operator, editor, internalProps, parentType } = props;\n  const { onChange, value, ...rest } = internalProps;\n  const classes = useStyles();\n  const { field = {} } = rest;\n  const { targetName, target, targetModel, model, jsonTarget } = field;\n  const [nameField, setNameField] = useState(null);\n  const fetchData = async () => {\n    let data = [];\n    const jsonTarget = targetModel || field['targetJsonModel.name'];\n    if (target === 'com.axelor.meta.db.MetaJsonRecord' && field['domain']) {\n      data = await getCustomModelByDomain(field['domain']);\n      let fieldData = await getNameFieldByDomain(field['jsonTarget']);\n      setNameField(fieldData && fieldData.name);\n    } else if (field.targetJsonModel) {\n      data = await getCustomModelData(field['targetJsonModel.name']);\n    } else {\n      data = await getData(target || targetModel);\n    }\n    return data;\n  };\n  const _value = value._selectId ? { ...value, id: value._selectId } : value;\n  return (\n    <Selection\n      name=\"fieldValue\"\n      title=\"Value\"\n      placeholder=\"Value\"\n      fetchAPI={fetchData}\n      isMulti={false}\n      optionValueKey={targetName}\n      optionLabelKey={targetName}\n      onChange={(value) => {\n        let isNameField;\n        if (typeof value !== 'string') {\n          isNameField =\n            value && value.length > 0\n              ? value.find((v) => v[targetName])\n              : value[targetName];\n          /*onChange(\n            { name: 'nameField', value: isNameField ? nameField : 'id' },\n            editor\n          );*/\n        }\n        onChange({ name: 'fieldValue', value: value, nameField }, editor);\n      }}\n      value={_value || []}\n      classes={{ root: classes.MuiAutocompleteRoot }}\n    />\n  );\n}\n\nfunction RenderSimpleWidget(props) {\n  const { Component, operator, editor, internalProps } = props;\n  const {\n    onChange,\n    value,\n    value2,\n    classes,\n    style,\n    targetName,\n    ...rest\n  } = internalProps;\n  return (\n    <Component\n      name=\"fieldValue\"\n      onChange={(value) =>\n        onChange({ name: 'fieldValue', value: value }, editor)\n      }\n      value={value}\n      style={style}\n      {...rest}\n    />\n  );\n}\n\nconst RenderWidget = React.memo(function RenderWidgetMemo({\n  type,\n  operator = '=',\n  onChange,\n  value,\n  classes,\n  parentType,\n  editor,\n  ...rest\n}) {\n  const props = {\n    value: value.fieldValue,\n    value2: value.fieldValue2,\n    onChange,\n    ...rest,\n  };\n\n  let options = [],\n    widgetProps = {};\n  switch (type) {\n    case 'one_to_one':\n    case 'many_to_one':\n    case 'many_to_many':\n    case 'one_to_many':\n    case 'json_one_to_one':\n    case 'json_many_to_one':\n    case 'json_many_to_many':\n    case 'json_one_to_many':\n      return (\n        <RenderRelationalWidget\n          operator={operator}\n          editor={editor}\n          internalProps={{ ...props, value: value.fieldValue }}\n          parentType={parentType}\n        />\n      );\n    case 'date':\n    case 'time':\n    case 'datetime':\n      const stringToDate = (value) =>\n        value ? moment(value, DATE_FORMAT[type]) : null;\n      return (\n        <RenderSimpleWidget\n          Component={DateTimePicker}\n          operator={operator}\n          editor={editor}\n          internalProps={{\n            type,\n            value: stringToDate(value.fieldValue),\n            onChange: ({ name, value }, index) => {\n              return onChange(\n                { name, value: value && value.format(DATE_FORMAT[type]) },\n                index\n              );\n            },\n            ...rest,\n            margin: 'none',\n            classes,\n            style: { width: '250px !important' },\n          }}\n        />\n      );\n    case 'integer':\n    case 'long':\n    case 'decimal':\n      options =\n        rest.field.selectionList &&\n        rest.field.selectionList.map(({ title, value, data }) => ({\n          name: (data && data.value) || value,\n          title: title,\n        }));\n\n      widgetProps = {\n        Component: options ? Select : NumberField,\n        operator,\n        editor,\n        internalProps: {\n          ...(options\n            ? { options, classes, ...props }\n            : {\n                type,\n                ...props,\n                margin: 'none',\n                classes,\n                style: { width: '250px !important' },\n              }),\n        },\n      };\n      return <RenderSimpleWidget {...widgetProps} />;\n    case 'enum':\n      options = rest.field.selectionList.map(({ title, value, data }) => ({\n        name: (data && data.value) || value,\n        title: title,\n      }));\n      return (\n        <RenderSimpleWidget\n          Component={Select}\n          operator={operator}\n          editor={editor}\n          internalProps={{\n            options,\n            classes,\n            ...props,\n          }}\n        />\n      );\n    case 'boolean': {\n      const booleanOptions = [\n        { title: 'Yes', value: true },\n        { title: 'No', value: false },\n      ];\n      return (\n        <Selection\n          optionLabelKey=\"title\"\n          optionValueKey=\"value\"\n          options={booleanOptions}\n          value={booleanOptions.find((b) => b.value === value.fieldValue)}\n          onChange={(e) => onChange({ value: e.value })}\n        />\n      );\n    }\n    default:\n      options =\n        rest.field &&\n        rest.field.selectionList &&\n        rest.field.selectionList.map(({ title, value, data }) => ({\n          name: (data && data.value) || value,\n          title: title,\n        }));\n      widgetProps = {\n        Component: options ? Select : InputField,\n        operator,\n        editor,\n        internalProps: {\n          ...(options\n            ? {\n                options,\n                classes,\n                ...props,\n                value: value.fieldValue,\n                className: classes.input,\n              }\n            : {\n                classes,\n                ...props,\n                onBlur: (e) => props.onChange(e.target),\n                margin: 'none',\n                style: { width: '100%' },\n              }),\n        },\n      };\n      return <RenderSimpleWidget {...widgetProps} />;\n  }\n});\n\nfunction DataTable(props) {\n  const classes = useStyles();\n  const {\n    onRowChange,\n    data = [],\n    metaFields = [],\n    onRemove,\n    errors,\n    onClearError,\n    onSubFieldAdd,\n    handleAdd,\n    sourceModel,\n    targetModel,\n    manageFieldClick,\n    handleFieldSearch,\n    onReorder,\n  } = props;\n\n  const [fieldList, setFieldList] = React.useState([{ name: undefined }]);\n\n  const getDefaultFrom = React.useCallback(() => {\n    return sourceModel ? VALUE_FROM.SOURCE : VALUE_FROM.NONE;\n  }, [sourceModel]);\n\n  const handleChange = React.useCallback(\n    async (e, key, rowIndex, row) => {\n      const value = e.target.value;\n      const nameField = e.target.nameField;\n      // const newRow = {...row};\n      // newRow[key] = value;\n      if (errors && errors[row.dataPath] && value) {\n        onClearError(row.dataPath);\n      }\n      let path = key;\n      let selectedValue = value;\n      const from = get(row, 'value.from', getDefaultFrom());\n      if (key === 'value') {\n        path = `${key}.selected`;\n        let _value = value;\n        let targetName = value\n          ? getTargetName(row, value, nameField)\n          : get(row, 'value.selected.targetName');\n        if (\n          isRelationalField(row.type) &&\n          (!from || from === VALUE_FROM.NONE) &&\n          typeof _value === 'object'\n        ) {\n          if (targetName === '_selectId') {\n            _value = value['id'];\n          } else {\n            _value = value[targetName];\n          }\n        }\n        // if (row.from === 'self' && typeof _value === 'object') {\n        //   _value = value['name'];\n        // }\n        selectedValue = {\n          value: _value,\n        };\n        if (from === VALUE_FROM.NONE && isRelationalField(row.type)) {\n          selectedValue.targetName = targetName;\n        }\n      }\n      if (\n        ['contextModel', 'sourceField', 'selfField'].includes(key) ||\n        ([VALUE_FROM.SELF, VALUE_FROM.SOURCE, VALUE_FROM.PARENT].includes(\n          from\n        ) &&\n          key === 'value')\n      ) {\n        onRowChange && onRowChange(row, rowIndex, 'modelSubField', []);\n      }\n      onRowChange && onRowChange(row, rowIndex, path, selectedValue);\n    },\n    [onRowChange, errors, onClearError, getDefaultFrom]\n  );\n\n  const handleClearError = React.useCallback(\n    (rowName) => {\n      if (errors && errors[rowName]) {\n        onClearError(rowName);\n      }\n    },\n    [onClearError, errors]\n  );\n\n  const handleRemove = React.useCallback(\n    (row) => {\n      onRemove && onRemove(row);\n    },\n    [onRemove]\n  );\n\n  const handleFieldListChange = React.useCallback((list) => {\n    setFieldList([...list]);\n  }, []);\n  const renderRow = React.useCallback(\n    (row, index, level = 0, parentRow) => {\n      if (row.isRemoved || row.isHidden) {\n        return null;\n      }\n      const from = get(row, 'value.from', getDefaultFrom());\n      return (\n        <Card index={index} key={row.name} id={row.name} moveCard={onReorder}>\n          {\n            ({ref, style, handlerId, preview}) => (\n              <TableRow\n                data-handler-id={handlerId}\n                ref={preview} \n                style={{...style}}\n                classes={{ root: classes.tableRowRoot }}\n              >\n                <TableCell align=\"left\" ref={ref} style={{cursor: 'move',}}>\n                  <div>\n                    <ReorderIcon />\n                  </div>\n                </TableCell>\n                <TableCell\n                  style={{\n                    ...getCustomStyle(row),\n                  }}\n                >\n                  <ModelFieldComponent\n                    name=\"name\"\n                    className={classes.input}\n                    item={row}\n                    onChange={(e) => handleChange(e, 'name', index)}\n                    onSubFieldAdd={onSubFieldAdd}\n                    handleAdd={handleAdd}\n                    onSubFieldChange={(e) => {\n                      handleChange(e, 'subFieldName', index);\n                    }}\n                  />\n                </TableCell>\n                <TableCell>=</TableCell>\n\n                <TableCell\n                  style={{ ...getCustomStyle(row) }}\n                  className={classes.valueInputContainer}\n                >\n                  {from === VALUE_FROM.SELF ? (\n                    <MultiSelector\n                      optionValueKey=\"name\"\n                      optionLabelKey=\"title\"\n                      concatValue={true}\n                      parentRow={parentRow}\n                      targetModel={targetModel}\n                      value={row.modelSubField}\n                      onChange={(e) =>\n                        handleChange(\n                          { target: { value: e } },\n                          'modelSubField',\n                          index,\n                          row\n                        )\n                      }\n                    />\n                  ) : from === VALUE_FROM.SOURCE ? (\n                    <MultiSelector\n                      optionValueKey=\"name\"\n                      optionLabelKey=\"title\"\n                      concatValue={true}\n                      sourceModel={sourceModel}\n                      value={row.modelSubField}\n                      onChange={(e) =>\n                        handleChange(\n                          { target: { value: e } },\n                          'modelSubField',\n                          index,\n                          row\n                        )\n                      }\n                    />\n                  ) : from === VALUE_FROM.PARENT ? (\n                    <Selection\n                      optionValueKey=\"name\"\n                      optionLabelKey=\"title\"\n                      concatValue={true}\n                      options={metaFields}\n                      fetchAPI={() =>\n                        fetchFields(\n                          getParentValueTarget(parentRow, getDefaultFrom())\n                        )\n                      }\n                      value={getSelfValue(row)}\n                      onChange={(e) =>\n                        handleChange(\n                          { target: { value: e } },\n                          'value',\n                          index,\n                          row\n                        )\n                      }\n                    />\n                  ) : from === VALUE_FROM.CONTEXT ? (\n                    <MultiSelector\n                      optionValueKey=\"name\"\n                      optionLabelKey=\"title\"\n                      concatValue={true}\n                      isContext={true}\n                      value={row.modelSubField}\n                      onChange={(e) =>\n                        handleChange(\n                          { target: { value: e } },\n                          'modelSubField',\n                          index,\n                          row\n                        )\n                      }\n                    />\n                  ) : (\n                    <RenderWidget\n                      row={row}\n                      type={getType(row)}\n                      onChange={(e, editor) => {\n                        handleChange({ target: e }, 'value', index, row);\n                      }}\n                      value={{\n                        fieldValue: getExpressionValue(row),\n                        fieldValue2: '',\n                      }}\n                      classes={classes}\n                      field={row.subFieldName || row}\n                    />\n                  )}\n                  {/* {getError(errors, row) && (\n                <Typography className={classes.error}>\n                  {getError(errors, row)}\n                </Typography>\n              )} */}\n                </TableCell>\n                <TableCell style={{ ...getCustomStyle(row) }} size=\"small\">\n                  <Selection\n                    disableClearable\n                    options={getOptions(\n                      level === 0,\n                      parentRow,\n                      getDefaultFrom()\n                    )}\n                    value={from || getDefaultFrom()}\n                    getOptionDisabled={(option) =>\n                      getOptionDisabled(option, parentRow, sourceModel)\n                    }\n                    onChange={(e) =>\n                      handleChange(\n                        { target: { value: e } },\n                        'value.from',\n                        index,\n                        row\n                      )\n                    }\n                  />\n                </TableCell>\n                {/* <TableCell style={{ ...getCustomStyle(row) }}> */}\n                {/* {showSubField(row) && (\n                <>\n                  {\n                    row.modelSubField.map((field, i) => (\n                      <Selection\n                        name=\"metaModalField\"\n                        title=\"Model Field\"\n                        placeholder=\"Model field\"\n                        optionValueKey=\"name\"\n                        optionLabelKey=\"name\"\n                        fetchAPI={() => fetchFields(getSubFieldModel(row, field, i))}\n                        value={field}\n                        onChange={(e) =>\n                          handleChange(\n                            { target: { value: e } },\n                            'modelSubField',\n                            index,\n                            row\n                          )\n                        }\n                      />\n                    ))\n                  }\n                </>\n              )} */}\n                {/* {\n                showSubField(row, getDefaultFrom()) &&\n                <SubFieldComponent \n                  row={row}\n                  data={row.modelSubField}\n                  defaultFrom={getDefaultFrom()}\n                  onChange={(e) => handleChange(\n                    { target: { value: e } },\n                    'modelSubField',\n                    index,\n                    row\n                  )}\n                />\n              }\n            </TableCell> */}\n                <TableCell\n                  style={\n                    row.level !== undefined\n                      ? { borderBottom: '0px', ...getCustomStyle(row) }\n                      : { ...getCustomStyle(row)}\n                  }\n                >\n                  <IconButton\n                    size=\"medium\"\n                    onClick={() => handleRemove(row)}\n                    className={classes.iconButton}\n                  >\n                    <Tooltip title={'Remove field'}>\n                      <Close fontSize=\"small\" className={classes.deleteIcon} />\n                    </Tooltip>\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n               )\n              }\n        </Card>\n      );\n    },\n    [\n      classes,\n      handleRemove,\n      handleChange,\n      metaFields,\n      onSubFieldAdd,\n      handleAdd,\n      sourceModel,\n      getDefaultFrom,\n      targetModel,\n      onReorder\n    ]\n  );\n  return (\n    <Paper className={classes.root}>\n      <Grid container style={{ backgroundColor: '#FAFAFA' }}>\n        <IconButton\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddRounded />}\n          className={classes.addFieldButton}\n          onClick={manageFieldClick}\n          title=\"Manage Fields\"\n        >\n          <AddRounded />\n        </IconButton>\n        <TextField\n          classes={{ root: classes.searchField }}\n          placeholder=\"Search fields\"\n          onChange={(e) => handleFieldSearch(e)}\n        />\n      </Grid>\n      <Table\n        className={classes.table}\n        aria-label=\"simple table\"\n        stickyHeader={true}\n      >\n         <colgroup>\n         <col style={{ width: '3%' }} />\n          <col style={{ width: '27%', minWidth: 300 }} />\n          <col style={{ width: '15px' }} />\n          <col style={{ width: '50%', minWidth: 200 }} />\n          <col style={{ width: '210px', minWidth: 230 }} />\n          <col style={{ width: '5%' }} />\n        </colgroup>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">&nbsp;</TableCell>\n            <TableCell\n              className={classes.headerTitle}\n            >\n              Field name\n            </TableCell>\n            <TableCell\n              className={classes.headerTitle}\n            ></TableCell>\n            <TableCell\n              className={classes.headerTitle}\n            >\n              Value\n            </TableCell>\n            <TableCell\n              className={classes.headerTitle}\n              style={{width: 220}}\n            >\n              Value from\n            </TableCell>\n            <TableCell\n              className={classes.headerTitle}\n            ></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row, index) => renderRow(row, index))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nexport default DataTable;\n","import React from 'react';\nimport produce from 'immer';\n\nconst StoreContext = React.createContext();\n\nfunction useMutableState(defaultValue) {\n  const [state, setState] = React.useState(defaultValue);\n  return [\n    state,\n    React.useCallback((updater) => setState(produce(updater)), [setState]),\n  ];\n}\n\nfunction StoreProvider({ children }) {\n  const [state, setState] = useMutableState({\n    builderFields: [],\n  });\n\n  const value = {\n    state,\n    update: setState,\n  };\n  return (\n    <StoreContext.Provider value={value}>{children}</StoreContext.Provider>\n  );\n}\n\nexport function useStore() {\n  return React.useContext(StoreContext);\n}\n\nexport function useStoreState() {\n  const { state } = React.useContext(StoreContext);\n  return state;\n}\n\nexport function useWidget(id) {\n  const { widgets } = useStore();\n  return widgets[id];\n}\n\nexport default StoreProvider;\n","import React from 'react';\nimport {\n  Grid,\n  Button,\n  Typography,\n  CircularProgress,\n  Switch,\n  TextField,\n  IconButton\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport Selection from './components/Selection';\nimport DataTable from './DataTable';\nimport {\n  getMetaModels,\n  fetchFields,\n  saveRecord,\n  fetchRecord,\n  fetchModelByName,\n  fetchCustomFields,\n  generateScriptString,\n} from './services/api';\nimport { generateJson } from './generator';\nimport {\n  excludeFields,\n  generatePath,\n  upperCaseFirstLetter,\n  isCustomTarget,\n  useDebounce\n} from './utils';\nimport { ModelType, VALUE_FROM } from './constant';\nimport { useStore } from './store/context';\nimport { set, get } from 'lodash';\nimport FieldPopover from './components/FieldPopover';\nimport MultiSelector from './components/MultiSelector';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  input: {\n    width: '13%',\n    marginRight: 20,\n  },\n  metaFieldGrid: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  newRecordSwitch: {\n    marginTop: 10,\n    marginLeft: 5,\n  },\n  newRecordSwitchText: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  newRecordInputView: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 5,\n  },\n  modelFieldSelection: {\n    // width: '30%',\n    marginRight: 20,\n    marginLeft: 50,\n  },\n  addModelFieldIcon: {\n    marginLeft: 15,\n  },\n  saveButton: {\n    marginLeft: 10,\n  },\n  cardContent: {\n    overflow: 'auto',\n    height: 600,\n  },\n  cardContentItemText: {\n    lineHeight: 3,\n  },\n  cardActionView: {\n    justifyContent: 'flex-end',\n  },\n  capitalizeText: {\n    textTransform: 'capitalize',\n  },\n  saveButtonText: {\n    marginLeft: 10,\n  },\n  saveMessageAlert: {\n    width: '100%',\n    marginBottom: 10,\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  topView: {\n    margin: '10px 10px 0px 10px',\n  },\n  searchField: {\n    flexDirection: 'row',\n    width: '12%',\n    '& input': {\n      paddingBottom: 0,\n    }\n  },\n  loaderView: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    height: '100%',\n    backgroundColor: 'rgba(0,0,0,0.2)',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: '999',\n  },\n  saveIcon: {\n    // bottom: 10,\n    // position: 'absolute',\n    // right: 15,\n    // borderRadius: '50%',\n    // paddingTop: 20,\n    // paddingBottom: 20,\n    // backgroundColor: '#3f51b5',\n    // color: '#fff',\n    // '&:hover': {\n    //   color: 'rgba(255,255,255,0.50)'\n    // }\n  },\n  selectContainer: {\n    // width: '70%',\n    minWidth: 150,\n    marginBottom: 10,\n  },\n  targetModelInputRoot: {\n    marginTop: '22px !important',\n  }\n});\n\nconst getDefaultFrom = (sourceModel) => {\n  return sourceModel ? VALUE_FROM.SOURCE : VALUE_FROM.NONE;\n}\n\nconst getSourceModelString = (list) => {\n  let string = '';\n  list.forEach(item => {\n    if(string === '') {\n      string = item.name\n    } else {\n      string = `${string}.${item.name}`;\n    }\n  });\n  return string;\n}\n\nconst getFieldValue = (value) => {\n  // if (value?.selected && value.selected?.rawDate) {\n  //   return { ...value, selected: { value: value.selected?.rawDate } };\n  // }\n  return value;\n};\n\nconst getCustomTarget = (item) => {\n  if (item.targetJsonModel) {\n    return item.targetJsonModel.id;\n  }\n  return item.targetModel;\n};\n\nconst getModelSubField = (fields) => {\n  if(fields) {\n    const newFields = fields.filter(f => Object.keys(f).length > 0);\n    return newFields;\n  }\n  return fields;\n}\n\nconst getModelFields = (values) => {\n  const list = values.slice(1).map((value) => {\n    return { name: value };\n  });\n  return list;\n};\n\nconst getFieldInfo = (item) => {\n  if (item.target && !isCustomTarget(item.target)) {\n    return { ...item, fullName: item.target };\n  } else {\n    if (item.targetModel) {\n      // refers to base model\n      return { ...item, fullName: item.targetModel };\n    }\n    return { ...item, modelType: ModelType.CUSTOM, name: item.jsonTarget };\n  }\n};\n\nconst getContextValue = (value, from) => {\n  let contextValue = {};\n  let newValue = value;\n  if (value && value?.selected && value?.selected?.value) {\n    const splitedValue = `${value.selected.value}`.split('.');\n    const modelSubField = getModelFields(splitedValue);\n    if (from === VALUE_FROM.CONTEXT) {\n      const contextModel = { name: upperCaseFirstLetter(splitedValue[0]) };\n      return { contextModel };\n    }\n    if (from === VALUE_FROM.SELF) {\n      newValue.selected = { ...newValue.selected, value: splitedValue[0] };\n      return { value: newValue };\n    }\n  }\n  return contextValue;\n};\n\nconst updateBuilderFields = (oldFields, item, fields) => {\n  const newFields = oldFields.map((field) => {\n    let flag = false;\n    if (field.name === item.name) {\n      flag = true;\n      field.hideFields = false;\n      field.fields = [...fields];\n    }\n    if (field.fields && !flag) {\n      field.fields = updateBuilderFields(field.fields, item, fields);\n    }\n    return { ...field };\n  });\n  return newFields;\n};\n\nconst findFields = (item, jsonData = []) => {\n  let field = jsonData.find((f) => f.name === item.name);\n  if (!field) {\n    for (let i = 0; i < jsonData.length; i++) {\n      const jsonField = jsonData[i];\n      const fields = get(jsonField, 'value.fields');\n      if (fields) {\n        field = findFields(item, fields);\n        if (field) {\n          break;\n        }\n      }\n    }\n  }\n  return field;\n};\n\nconst getNewBuilderFields = (fields, searchText) => {\n  return fields.map(field => {\n    let newField = {...field};\n    let hasChildrenShow = false;\n    if(newField.value && newField.value.fields) {\n      const newFieldlist = getNewBuilderFields(newField.value.fields, searchText);\n      hasChildrenShow = newFieldlist.findIndex(f => f.isHidden === false) !== -1;\n      newField = {\n        ...newField,\n        value: {\n          ...newField.value,\n          fields: newFieldlist,\n        }\n      }\n    }\n    if((!field.name.toLowerCase().includes(searchText.toLowerCase())) && !hasChildrenShow) {\n      newField.isHidden = true;\n    } else {\n      newField.isHidden = false;\n    }\n    return newField;\n  });\n}\n\nconst showHideBuilderFields = (oldFields, item, hide) => {\n  const newFields = oldFields.map((field) => {\n    let flag = false;\n    if (field.name === item.name) {\n      flag = true;\n      field.hideFields = hide;\n    }\n    if (field.fields && !flag) {\n      field.fields = updateBuilderFields(field.fields, item, hide);\n    }\n    return { ...field };\n  });\n  return newFields;\n};\n\nconst clearChildrenParentValue = ({\n  fields = [],\n  from = VALUE_FROM.PARENT,\n  shouldChangeFrom = true,\n}) => {\n  return fields.map((field) => {\n    let newField = { ...field };\n    const newFieldFrom = get(newField, 'value.from');\n    if (newFieldFrom === from) {\n      if (shouldChangeFrom) {\n        newField.value.from = VALUE_FROM.NONE;\n      }\n      if (newField.value && newField.value.selected) {\n        newField = Object.assign(\n          {},\n          {\n            ...newField,\n            value: {\n              ...newField.value,\n              selected: {\n                ...newField.value.selected,\n                value: null,\n              },\n            },\n          }\n        );\n      }\n      newField.modelSubField = [];\n    }\n    if (newField.value && newField.value.fields) {\n      const fields = [\n        ...clearChildrenParentValue({\n          fields: newField.value.fields,\n          from,\n          shouldChangeFrom,\n        }),\n      ];\n      newField = Object.assign(\n        {},\n        {\n          ...newField,\n          value: {\n            ...newField.value,\n            fields,\n          },\n        }\n      );\n      // newField.value.fields.splice(0, fields.length);\n      // clearChildrenParentValue({fields: newField.value.fields, from, shouldChangeFrom});\n    }\n\n    return newField;\n  });\n};\n\nfunction Builder({ params }) {\n  const classes = useStyles();\n  const { state, update } = useStore();\n  const { builderFields } = state;\n  const [builderRecord, setBuilderRecord] = React.useState();\n  const [model, setModel] = React.useState();\n  const [sourceModel, setSourceModel] = React.useState();\n  const [sourceModelList, setSourceModelList] = React.useState([]);\n\n  const [loading, setLoading] = React.useState(false);\n  const [showSaveMessage, setShowSaveMessage] = React.useState(null);\n  const [newRecord, setNewRecord] = React.useState(false);\n  const [modelFieldMap, setModelFieldMap] = React.useState({});\n  const [metaFields, setMetaFields] = React.useState([]);\n  // const [builderFields, setBuilderFields] = React.useState([]);\n  const [errors, setErrors] = React.useState({});\n  const [openFieldSelector, setOpenFieldSelector] = React.useState(false);\n  const [manageField, setManageField] = React.useState(false);\n\n  const setBuilderFields = React.useCallback(\n    (fields) => {\n      update((draft) => {\n        set(draft, 'builderFields', fields);\n      });\n    },\n    [update]\n  );\n\n  const handleRowChange = React.useCallback(\n    (row, rowIndex, key, value) => {\n      update((draft) => {\n        const recordIndex = draft.builderFields.findIndex(f => f.name === row.name); \n        const record = draft.builderFields[recordIndex];\n\n        if (\n          key === 'value.from' &&\n          [VALUE_FROM.CONTEXT, VALUE_FROM.SELF].includes(get(record, 'value.from'))\n        ) {\n          const prevFields = get(record, 'value.fields', []);\n          if (prevFields.length) {\n            const fields = clearChildrenParentValue({ fields: prevFields });\n            set(draft.builderFields, `[${recordIndex}].value.fields`, fields);\n          }\n        }\n        if (\n          key === 'value.selected' &&\n          [VALUE_FROM.CONTEXT, VALUE_FROM.SELF].includes(get(record, 'value.from'))\n        ) {\n          const prevFields = get(record, 'value.fields', []);\n          if (prevFields.length) {\n            const fields = clearChildrenParentValue({\n              fields: prevFields,\n              shouldChangeFrom: false,\n            });\n            set(draft.builderFields, `[${recordIndex}].value.fields`, fields);\n          }\n        }\n        set(draft.builderFields, `[${recordIndex}].${key}`, value);\n      });\n    },\n    [update]\n  );\n  const handleRowRemove = React.useCallback(\n    (row) => {\n      update((draft) => {\n        const index = draft.builderFields.findIndex(f => f.name === row.name);\n        if(index !== -1) {\n          draft.builderFields[index].isRemoved = true;\n        }\n      });\n    },\n    [update]\n  );\n\n  const handleSubFieldAdd = React.useCallback(\n    async (item, expand) => {\n      // const oldFields = [...draft.builderFields];\n      if (expand) {\n        const target = item.target || getCustomTarget(item);\n        let fields = modelFieldMap[target];\n        const builder = JSON.parse(\n          builderRecord[params.resultMetaField] || '{}'\n        );\n        const builderJSONFields = get(builder, 'fields', []);\n        if (!modelFieldMap[target]) {\n          if (model.modelType === ModelType.CUSTOM) {\n            fields = await fetchCustomFields({ ...item });\n          } else {\n            fields = await fetchFields(getFieldInfo(item));\n          }\n          setModelFieldMap({ [target]: fields });\n          const dataPath = `${item.dataPath}.value.fields`;\n          const newFields = [];\n\n          const builderField = findFields(item, builderJSONFields);\n          const jsonFieldList = get(builderField, 'value.fields', []);\n\n          excludeFields(fields).forEach((field, i) => {\n            const jsonField =\n              jsonFieldList.find((f) => f.name === field.name) || {};\n            const valuePath = `${dataPath}[${i}].value`;\n            const value = getFieldValue(jsonField.value);\n            const from = get(jsonField,'value.from');\n\n            const contextValue = getContextValue(value, from);\n\n            newFields.push({\n              ...field,\n              dataPath: `${dataPath}[${i}]`,\n              from,\n              value,\n              hideFields: true,\n              isRemoved: true,\n              modelSubField: jsonField.modelSubField,\n              ...contextValue,\n            });\n          });\n          update((draft) => {\n            set(\n              draft.builderFields,\n              `${item.dataPath}.value.fields`,\n              newFields\n            );\n            set(draft.builderFields, `${item.dataPath}.hideFields`, false);\n          });\n          // const newFields = updateBuilderFields(oldFields, item, excludeFields(fields));\n          // setBuilderFields([...newFields]);\n        } else {\n          const newFields = [];\n          const dataPath = `${item.dataPath}.value.fields`;\n          const builderField = findFields(item, builderJSONFields);\n          const jsonFieldList = get(builderField, 'value.fields', []);\n          excludeFields(fields).forEach((field, i) => {\n            const jsonField =\n              jsonFieldList.find((f) => f.name === field.name) || {};\n            const valuePath = `${dataPath}[${i}].value`;\n            const value = getFieldValue(jsonField.value);\n            const from = get(jsonField, 'value.from');\n            const contextValue = getContextValue(value, from);\n            newFields.push({\n              ...field,\n              dataPath: `${dataPath}[${i}]`,\n              from,\n              value,\n              hideFields: true,\n              isRemoved: false,\n              modelSubField: jsonField.modelSubField,\n              ...contextValue,\n            });\n          });\n          update((draft) => {\n            set(\n              draft.builderFields,\n              `${item.dataPath}.value.fields`,\n              newFields\n            );\n            set(draft.builderFields, `${item.dataPath}.hideFields`, false);\n          });\n          // const newFields = showHideBuilderFields(oldFields, item, false);\n          // setBuilderFields([...newFields]);\n        }\n      } else {\n        update((draft) => {\n          set(draft.builderFields, `${item.dataPath}.hideFields`, true);\n        });\n        // hide fields from builder field\n        // const newFields = showHideBuilderFields(oldFields, item, true);\n        // setBuilderFields([...newFields]);\n      }\n    },\n    [model, modelFieldMap, update, builderRecord, params]\n  );\n\n  const handleAdd = React.useCallback(\n    (rows) => {\n      update((draft) => {\n        rows.forEach((row) => {\n          set(draft.builderFields, `${row.dataPath}.isRemoved`, false);\n        });\n      });\n    },\n    [update]\n  );\n\n  const handleSelectAll = React.useCallback(\n    (e) => {\n      setBuilderFields((fields) => {\n        return [\n          ...metaFields.map((field) => {\n            const index = fields.findIndex((f) => f.name === field.name);\n            if (index !== -1) {\n              return fields[index];\n            }\n            return field;\n          }),\n        ];\n      });\n    },\n    [metaFields, setBuilderFields]\n  );\n\n  const getBuilderFields = React.useCallback(\n    async (data, _builderRecord = {}) => {\n      const builder = JSON.parse(\n        _builderRecord[params.resultMetaField] || '{}'\n        );\n        const jsonData = get(builder, 'fields', []);\n        const newFields = new Array(jsonData.length);\n        excludeFields([...data]).forEach((field, index) => {\n          const jsonFieldIndex = jsonData.findIndex((f) => f.name === field.name);\n          const jsonField = jsonData[jsonFieldIndex] || {};\n\n          const valuePath = `${field.name}.value`;\n          const value = getFieldValue(jsonField.value);\n          const from = get(jsonField, 'value.from');\n          // get(jsonData, `${field.name}.from`);\n          const contextValue = getContextValue(value, from);\n          const obj = {\n            ...field,\n            path: generatePath(field),\n            from,\n            value,\n            hideFields: true,\n            isRemoved: value ? false : true,\n            modelSubField: getModelSubField(jsonField.modelSubField),\n            selfField: jsonField.selfField,\n            sourceField: jsonField.sourceField,\n            ...contextValue,\n          }\n          if(jsonFieldIndex !== -1) {\n            obj.dataPath = `[${jsonFieldIndex}]`; \n            newFields.splice(jsonFieldIndex, 1, {...obj});\n          } else {\n            obj.dataPath = `[${newFields.length}]`; \n            newFields.push({...obj});\n          }\n        });\n      // const builder = JSON.parse(_builderRecord[params.resultMetaField] || '{}');\n      // const newFields = getAssignmentFields(jsonData, fields);\n      update((draft) => {\n        set(draft, 'builderFields', newFields.filter(e => e));\n      });\n      // setBuilderFields(newFields);\n    },\n    [params, update]\n  );\n\n  const getMetaFields = React.useCallback(\n    async (model, _builderRecord) => {\n      if (model) {\n        const data = await fetchFields(model);\n        setMetaFields([...data]);\n        setErrors({});\n        getBuilderFields(data, _builderRecord);\n      }\n    },\n    [getBuilderFields]\n  );\n\n  const handleClearError = React.useCallback((path) => {\n    setErrors((err) => {\n      return JSON.parse(JSON.stringify(set(err, path, undefined)));\n    });\n  }, []);\n\n  const handleSave = React.useCallback(async () => {\n    setErrors({});\n    const currentJson = JSON.parse(\n      builderRecord[params.resultMetaField] || '{}'\n    );\n    const jsonFields = generateJson(builderFields, currentJson, getDefaultFrom(sourceModel), sourceModel);\n    const json = {\n      fields: jsonFields,\n      targetModel: model.name,\n      sourceModel: getSourceModelString(sourceModelList),\n      sourceModelList,\n      newRecord,\n      isJson: model.modelType === ModelType.CUSTOM,\n    };\n    const jsonQuery = JSON.stringify({...json});\n    let _model = params.model;\n    if(!_model) {\n      if(model.modelType === 'CUSTOM') {\n        _model = 'com.axelor.meta.db.MetaJsonRecord';\n      } else {\n        _model = model.fullName;\n      }\n    }\n    const scriptString = await generateScriptString(jsonQuery, _model);\n    const expressionQuery = scriptString || '';\n    const record = {\n      ...builderRecord,\n      [params.resultMetaField]: jsonQuery,\n      [params.resultField]: expressionQuery,\n      [params.targetField]: json.targetModel,\n      [params.sourceField]: json.sourceModel,\n    };\n    setLoading(true);\n    const result = await saveRecord(params, record);\n    setLoading(false);\n    if (result) {\n      setShowSaveMessage({\n        message: 'Builder data saved successfully',\n        severity: 'success',\n      });\n      setBuilderRecord({ ...result });\n    } else {\n      setShowSaveMessage({\n        message: 'Failed to save builder data',\n        severity: 'error',\n      });\n    }\n  }, [builderFields, params, model, builderRecord, sourceModel, newRecord, sourceModelList]);\n\n  const handleModelSelect = React.useCallback(\n    async (e) => {\n      setModel(e);\n      setShowSaveMessage(null);\n      const brec = {\n        ...builderRecord,\n          [params.resultMetaField]: null,\n          [params.resultField]: '',\n      }\n      setBuilderRecord(brec);\n      getMetaFields(e, brec);\n    },\n    [getMetaFields, params, builderRecord]\n  );\n\n  const handleSourceModelSelect = React.useCallback(\n    (e) => {\n      if (e === null) {\n        const fields = clearChildrenParentValue({\n          fields: builderFields,\n          from: VALUE_FROM.SOURCE,\n          shouldChangeFrom: true,\n        });\n        setBuilderFields([...fields]);\n      } else {\n        const fields = clearChildrenParentValue({\n          fields: builderFields,\n          from: VALUE_FROM.SOURCE,\n          shouldChangeFrom: false,\n        });\n        setBuilderFields([...fields]);\n      }\n      setSourceModel([e]);\n    },\n    [builderFields, setBuilderFields]\n  );\n\n  const handleFieldSelectorOpen = React.useCallback((e) => {\n    setOpenFieldSelector(e.currentTarget);\n  }, []);\n\n  const handleFieldSelectorClose = React.useCallback(() => {\n    setOpenFieldSelector(null);\n  }, []);\n\n  const closeSaveMessage = React.useCallback(\n    () => setShowSaveMessage(null),\n    []\n  );\n\n  const searchField = React.useCallback((searchText) => {\n    const fields = getNewBuilderFields(builderFields, searchText);\n    setBuilderFields([...fields]);\n  }, [builderFields, setBuilderFields]);\n\n\n  const delayFetch = useDebounce(searchField, 400);\n\n  const handleFieldSearch = React.useCallback((e) => {\n    const searchText = e.target.value;\n    delayFetch(searchText);\n  }, [delayFetch]);\n\n  const handleManageFieldClick = React.useCallback(() => {\n    setManageField(true);\n  }, []);\n\n  const handleCloseManageField = React.useCallback(() => {\n    setManageField(false);\n  }, []);\n\n  const handleReorder = React.useCallback((dragIndex, hoverIndex) => {\n    update(draft => {\n      const item = draft.builderFields[dragIndex];\n      draft.builderFields.splice(dragIndex, 1);\n      draft.builderFields.splice(hoverIndex, 0, item);\n    });\n  }, [update]);\n\n  // React.useEffect(() => {\n  //   getMetaFields();\n  // }, [getMetaFields]);\n\n  // React.useEffect(() => {\n  //   // async function fetchBuilderRecord() {\n  //   //   if (builderRecord) {\n  //   //     const json = JSON.parse(builderRecord[params.resultMetaField] || '{}');\n  //   //     const result = await fetchModelByName(json.model);\n  //   //     setModel(result);\n  //   //   }\n  //   // }\n  //   // fetchBuilderRecord();\n  // }, [builderRecord, params]);\n\n  React.useEffect(() => {\n    async function init() {\n      if (params && params.id) {\n        const result = await fetchRecord(params.model, params.id);\n        setBuilderRecord({ ...result });\n        if (result) {\n          const jsonData = JSON.parse(result[params.resultMetaField] || '{}');\n          if (jsonData) {\n            const modelResult = await fetchModelByName(\n              jsonData.targetModel\n            );\n            const lastSourceModel = jsonData.sourceModelList ? jsonData.sourceModelList[jsonData.sourceModelList.length - 1] || {} : {};\n            const sourceModelName = lastSourceModel.target ? lastSourceModel.target.split('.').pop() : lastSourceModel.name;\n            const sourceModelResult = await fetchModelByName(\n              sourceModelName\n            );\n            setSourceModelList([...jsonData.sourceModelList]);\n            setModel(modelResult);\n            setSourceModel(sourceModelResult);\n            setNewRecord(jsonData.newRecord);\n            getMetaFields(modelResult, result);\n          }\n        } else {\n          setShowSaveMessage({\n            message: 'Record is not available',\n            severity: 'error',\n          });\n        }\n      }\n    }\n    init();\n  }, [params, getMetaFields]);\n  return (\n    <>\n    <Grid container>\n      <Grid container className={classes.topView}>\n        <Grid container justify=\"space-between\" style={{ marginBottom: 10 }}>\n            \n            \n          <Grid item className={classes.metaFieldGrid}>\n            <Grid container>\n              <FieldPopover\n                data={builderFields}\n                onSubmit={(data) => handleAdd(data)}\n                icon={<AddIcon />}\n                buttonTitle=\"Add Fields\"\n                iconButton={true}\n                buttonClassName={classes.modelFieldSelection}\n                iconButtonClassName={classes.addModelFieldIcon}\n                open={manageField}\n                onClose={handleCloseManageField}\n              />\n            \n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid container style={{marginBottom: 10}}>\n          <IconButton classes={{colorPrimary: classes.saveIcon}} color=\"primary\" onClick={handleSave} className={classNames(classes.iconButtonClassName)}>\n            <SaveIcon />\n          </IconButton>\n          <Selection\n            className={classes.input}\n            name=\"metaModal\"\n            title=\"Target Model\"\n            placeholder=\"Target Model\"\n            fetchAPI={(e) => getMetaModels(e)}\n            optionLabelKey=\"name\"\n            onChange={(e) => handleModelSelect(e)}\n            value={model}\n            inputRootClass={classes.targetModelInputRoot}\n          />\n          <MultiSelector \n            containerClassName={classes.selectContainer}\n            title=\"Source Model\"\n            optionValueKey=\"name\"\n            optionLabelKey=\"name\"\n            concatValue={true}\n            isM2o={true}\n            isContext={true}\n            value={sourceModelList}\n            onChange={(e) => {\n              const list = e.map(item => {\n                if(!item.fullName && item.target) {\n                  return {...item, fullName: item.target}\n                };\n                return item;\n              });\n              setSourceModelList([...list]);\n              setSourceModel({...list[list.length - 1]});\n            }}\n          />\n          <Grid item className={classes.newRecordInputView}>\n            <Switch\n              className={classes.newRecordSwitch}\n              checked={newRecord}\n              onChange={(e) => setNewRecord(e.target.checked)}\n            />\n            <Typography className={classes.newRecordSwitchText}>\n              New Record\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n      <DataTable\n        builderFields={builderFields}\n        data={builderFields}\n        onRowChange={handleRowChange}\n        onRemove={handleRowRemove}\n        metaFields={metaFields}\n        errors={errors}\n        onClearError={handleClearError}\n        onSubFieldAdd={handleSubFieldAdd}\n        handleAdd={handleAdd}\n        sourceModel={sourceModel}\n        targetModel={model}\n        manageFieldClick={handleManageFieldClick}\n        handleFieldSearch={handleFieldSearch}\n        onReorder={handleReorder}\n      />\n    </Grid>\n      {loading && <div className={classes.loaderView}>\n        <CircularProgress size={32} />\n      </div>}\n    </>\n  );\n}\n\nexport default Builder;\n","import React from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport './App.css';\nimport Builder from './Builder';\nimport BuilderProvider from './store/context';\n\nfunction AppContent() {\n  const [params, setParams] = React.useState(null);\n  React.useEffect(() => {\n    const _params = {};\n    const regex = /[?&]([^=#]+)=([^&#]*)/g;\n    const url = window.location.href;\n    let match = regex.exec(url);\n    while (match) {\n      _params[match[1]] = match[2];\n      match = regex.exec(url);\n    }\n    setParams(_params);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Builder params={params} />\n    </div>\n  );\n}\n\nexport default function App() {\n\treturn (\n    <DndProvider backend={HTML5Backend}>\n      <BuilderProvider>\n        <AppContent />\n      </BuilderProvider>\n    </DndProvider>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}