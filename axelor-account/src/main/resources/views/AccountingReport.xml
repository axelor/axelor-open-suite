<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_6.1.xsd">

  <!-- ACCOUNTING REPORT -->

  <grid orderBy="-createdOn" name="accounting-report-grid" title="Accounting reports"
    model="com.axelor.apps.account.db.AccountingReport">
    <field name="ref" width="120"/>
    <field name="date"/>
    <field name="company" form-view="company-form" grid-view="company-grid"
      if="__config__.app.getApp('base')?.getEnableMultiCompany()"/>
    <field name="currency"/>
    <field name="exportTypeSelect"/>
    <field name="reportType"/>
    <field name="dateFrom"/>
    <field name="dateTo"/>
    <field name="period" form-view="period-form" grid-view="period-grid" canEdit="false"
      canView="false"/>
    <field name="journal" form-view="journal-form" grid-view="journal-grid"/>
    <field name="totalDebit" aggregate="sum"/>
    <field name="totalCredit" aggregate="sum"/>
    <field name="balance"/>
    <field name="statusSelect"/>
    <field name="publicationDateTime"/>
  </grid>

  <form name="accounting-report-form" title="Accounting report"
    model="com.axelor.apps.account.db.AccountingReport"
    onNew="action-accounting-report-record-default">
    <panel name="mainPanel"
      readonlyIf="statusSelect == 2 &amp;&amp; (reportType.typeSelect == 19 || reportType.typeSelect == 20)">
      <field name="ref" readonly="true" hideIf="[23,24].includes(reportType.typeSelect)"/>
      <field name="date" readonlyIf="statusSelect == 2 &amp;&amp; reportType.typeSelect != 18"
        onChange="action-accounting-report-date-change-validate"/>
      <field name="company" canEdit="false" readonlyIf="ref != null" widget="SuggestBox"
        onChange="action-group-account-accounting-report-company-onchange" form-view="company-form"
        grid-view="company-grid"/>
      <field name="reportType"
        onChange="action-group-account-accounting-report-reporttype-onchange"
        domain="self.reportExportTypeSelect = 1 AND self.company = :company"/>
      <field name="reportType.typeSelect" hidden="true"/>
      <field name="exportTypeSelect"/>

      <field name="reportType.comparison" hidden="true"/>
    </panel>

    <panel sidebar="true" name="infoPanel" title="Info">
      <button name="searchBtn" title="Search"
        hideIf="([19,20].indexOf(reportType.typeSelect) == -1)"
        onClick="save,action-accounting-report-method-search-move-line,save"/>
      <button name="exportBtn" title="Print" icon="fa-print"
        onClick="action-account-report-alert-typeselect,action-group-account-accounting-report-export-click"/>
      <button name="createAccountingExportBtn" title="Create accounting export"
        icon="fa-cogs" showIf="statusSelect == 2 &amp;&amp; reportType.typeSelect == 19"
        onClick="save,action-accounting-report-method-create-export-from-report"/>
      <field name="statusSelect"/>
      <field name="publicationDateTime" hideIf="[23,24].includes(reportType.typeSelect)"/>
    </panel>

    <panel-tabs name="mainPanelTab">
      <panel name="filterPanel" title="Filter">
        <field name="currency"/>
        <spacer/>
        <field name="year" canEdit="false"
          readonlyIf="statusSelect == 2 &amp;&amp; (reportType.typeSelect == 18 || reportType.typeSelect == 19)"
          hideIf="![2,12,15,16,17,19,20,21,22,23,24].includes(reportType.typeSelect) &amp;&amp; (reportType.typeSelect != 3000 || reportType.comparison == 4)"
          onChange="action-accounting-report-record-period-dates"
          onSelect="action-accounting-report-attrs-year-domain"
          requiredIf="[12,15,16,17].includes(reportType.typeSelect) || (reportType.typeSelect == 3000 &amp;&amp; reportType.comparison != 4)"
          grid-view="year-account-grid" form-view="year-account-form"/>
        <field name="period" canEdit="false"
          hideIf="[18,19,20,21,22,23,24].includes(reportType.typeSelect) || (reportType.typeSelect == 3000 &amp;&amp; [2,4].includes(reportType.comparison)) || (reportType.typeSelect == 3000 &amp;&amp; reportType.comparison == 3 &amp;&amp; year == null)"
          onChange="action-group-account-accounting-report-period-onchange"
          requiredIf="reportType.typeSelect == 3000 &amp;&amp; reportType.comparison == 3"
          onSelect="action-accounting-report-attrs-period-domain" form-view="period-form"
          grid-view="period-grid" canView="false"/>
        <field name="dateFrom"
          readonlyIf="(statusSelect == 2 &amp;&amp; (reportType.typeSelect == 18 || reportType.typeSelect == 19)) || (reportType.typeSelect == 3000 &amp;&amp; reportType.comparison != 4)"
          hideIf="reportType.typeSelect == 18" onChange="action-move-Live-report-record-set-date-to"
          requiredIf="reportType.typeSelect == 12 || reportType.typeSelect == 15 || reportType.typeSelect == 19 || reportType.typeSelect == 20 || reportType.typeSelect == 21 || reportType.typeSelect == 22"/>
        <field name="dateTo"
          readonlyIf="(statusSelect == 2 &amp;&amp; (reportType.typeSelect == 18 || reportType.typeSelect == 19)) || (reportType.typeSelect == 3000 &amp;&amp; reportType.comparison != 4)"
          hideIf="reportType.typeSelect == 18"
          requiredIf="reportType.typeSelect == 12 || reportType.typeSelect == 15 || reportType.typeSelect == 19 || reportType.typeSelect == 20 || reportType.typeSelect == 21 || reportType.typeSelect == 22"/>
        <panel name="otherPeriodPanel" title="Compare with period" colSpan="12"
          showIf="reportType.typeSelect == 3000 &amp;&amp; !reportType.useLegacyCustomReports">
          <field name="otherDateFrom" requiredIf="reportType.comparison == 4"
            validIf="(reportType.comparison != 4 &amp;&amp; otherDateFrom == null) || (otherDateFrom &lt; otherDateTo &amp;&amp; otherDateFrom &lt; dateFrom)"/>
          <field name="otherDateTo" requiredIf="reportType.comparison == 4"
            validIf="(reportType.comparison != 4 &amp;&amp; otherDateTo == null) || (otherDateTo > otherDateFrom &amp;&amp; otherDateTo &lt; dateFrom)"/>
        </panel>
        <field name="isComparativeBalance" widget="boolean-switch" colSpan="12"
          showIf="reportType.typeSelect == 2"/>
        <panel name="previousPeriodPanel" title="Previous period"
          showIf="reportType.typeSelect == 2 &amp;&amp; isComparativeBalance" colSpan="12">
          <field name="previousYear"
            onChange="action-accounting-report-record-previous-period-dates"
            onSelect="action-accounting-report-attrs-previous-year-domain"
            grid-view="year-account-grid" form-view="year-account-form" colSpan="6"/>
          <field name="previousPeriod"
            onChange="action-accounting-report-record-previous-period-on-change"
            onSelect="action-accounting-report-attrs-previous-period-domain" form-view="period-form"
            grid-view="period-grid" canView="false" colSpan="6"/>
          <field name="previousDateFrom" colSpan="6"/>
          <field name="previousDateTo" colSpan="6"/>
        </panel>
        <field name="journal"
          hideIf="[0,1,2,3,4,5,10,12,13,14,15,16,17,18,19,20,21,22,23,24].indexOf(reportType.typeSelect) != -1"
          domain="self.statusSelect = 1 AND self.company = :company" form-view="journal-form"
          grid-view="journal-grid" canEdit="false"
          onChange="action-accounting-report-record-reset-display-simulated-move"/>
        <field name="journalSet" if-module="axelor-bank-payment"
          if="__config__.app.isApp('bank-payment')" requiredIf="reportType.typeSelect == 18"
          widget="TagSelect" canNew="false" showIf="reportType.typeSelect == 18" colSpan="12"
          domain="self.statusSelect = 1 AND self.company = :company" form-view="journal-form"
          grid-view="journal-grid" canEdit="false"/>
        <field name="paymentMode" grid-view="payment-mode-grid" form-view="payment-mode-form"
          hideIf="[1,2,3,4,5,10,12,13,14,15,16,17,18,19,20,21,22,23,24,2000,2001].indexOf(reportType.typeSelect) != -1"/>
        <field name="accountSet" requiredIf="reportType.typeSelect == 18"
          hideIf="reportType.typeSelect == 3000 || reportType.typeSelect == 2000 || reportType.typeSelect == 2001 || reportType.typeSelect == 16 || reportType.typeSelect == 12 || reportType.typeSelect == 19 || reportType.typeSelect == 20 || reportType.typeSelect == 21 || reportType.typeSelect == 22 || reportType.typeSelect == 23 || reportType.typeSelect == 24"
          colSpan="12" form-view="account-form" grid-view="account-grid" widget="TagSelect"
          canNew="false" onSelect="action-accounting-report-attrs-accountset-domain"/>
        <field name="partnerSet"
          hideIf="reportType.typeSelect == 2000 || reportType.typeSelect == 2001 || reportType.typeSelect == 16 || reportType.typeSelect == 17 || reportType.typeSelect == 12 || reportType.typeSelect == 18 || reportType.typeSelect == 19 || reportType.typeSelect == 20 || reportType.typeSelect == 21 || reportType.typeSelect == 22 || reportType.typeSelect == 23 || reportType.typeSelect == 24"
          colSpan="12" form-view="partner-form" grid-view="partner-grid" widget="TagSelect"
          canNew="false" domain=":company member of self.companySet AND self.isContact = false"/>
        <field name="analyticJournal"
          showIf="reportType.typeSelect == 2000 || reportType.typeSelect == 2001" canNew="false"
          domain="self.company = :company" form-view="analytic-journal-form"
          grid-view="analytic-journal-grid"/>
        <field name="analyticAxisSet"
          showIf="reportType.typeSelect == 2000 || reportType.typeSelect == 2001" colSpan="12"
          widget="TagSelect" canNew="false" form-view="analytic-axis-form"
          grid-view="analytic-axis-grid"/>
        <field name="analyticAccountSet"
          showIf="reportType.typeSelect == 2000 || reportType.typeSelect == 2001" colSpan="12"
          widget="TagSelect" canNew="false" form-view="analytic-account-form"
          grid-view="analytic-account-grid"/>
        <field name="accountTypeSet"
          showIf="reportType.typeSelect == 2000 || reportType.typeSelect == 2001" colSpan="12"
          widget="TagSelect" canNew="false" form-view="account-type-form"
          grid-view="account-type-grid"/>
        <field name="bankDetailsSet" if-module="axelor-bank-payment"
          if="__config__.app.isApp('bank-payment')" requiredIf="reportType.typeSelect == 18"
          showIf="reportType.typeSelect == 18" colSpan="12" form-view="bank-details-form"
          grid-view="bank-details-grid" widget="TagSelect" canNew="false"
          onSelect="action-accounting-report-method-set-bank-details-domain"/>
        <field name="analyticDistributionTemplate" showIf="reportType.typeSelect == 17"
          form-view="analytic-distribution-template-form"
          grid-view="analytic-distribution-template-grid"/>
        <field name="subtotalByAnalyticDistribution" showIf="reportType.typeSelect == 17"
          widget="boolean-switch"/>
        <field name="fixedAssetLineTypeSelect" showIf="reportType.typeSelect == 17"
          requiredIf="reportType.typeSelect == 17"/>
        <field name="minAmountExcl"
          showIf="reportType.typeSelect == 19 || reportType.typeSelect == 20"/>
        <field name="displayDetails"
          showIf="reportType.typeSelect == 3000 &amp;&amp; !reportType.useLegacyCustomReports"/>
        <field name="displayAnalyticAccountsDetails"
          showIf="reportType.typeSelect == 3000 &amp;&amp; !reportType.useLegacyCustomReports"/>
        <panel-related name="accountingReportAnalyticConfigLineListPanel"
          field="accountingReportAnalyticConfigLineList" colSpan="12" height="15" x-row-height="29"
          form-view="accounting-report-analytic-config-line-form"
          grid-view="accounting-report-analytic-config-line-grid"
          showIf="reportType.typeSelect == 3000 &amp;&amp; !reportType.useLegacyCustomReports"/>
        <field name="reportType.useLegacyCustomReports" hidden="true"/>
      </panel>
      <panel name="printingInformationsPanel" title="Printing information"
        hideIf="[16,17,18,19,20,21,22,23,24].indexOf(reportType.typeSelect) != -1">
        <field name="global"
          hideIf="[0,1,2,3,4,6,10,12,13,15,16,17,21,22].indexOf(reportType.typeSelect) != -1"
          onChange="action-accounting-report-record-global"/>
        <field name="globalByDate"
          hideIf="[1,2,3,4,5,6,10,11,12,13,14,15,16,17,21,22].indexOf(reportType.typeSelect) != -1"
          onChange="action-accounting-report-record-global-by-date"/>
        <field name="globalByPartner"
          hideIf="reportType.typeSelect != 3 &amp;&amp; reportType.typeSelect != 7"
          onChange="action-accounting-report-record-global-by-partner"/>
        <field name="detailed" hideIf="reportType.typeSelect != 4"
          onChange="action-accounting-report-record-detailed"/>
        <field name="displayDeltaYear"
          showIf="reportType.typeSelect == 3000 &amp;&amp; reportType.comparison != 1"/>
        <field name="displayDeltaYearPercentage"
          showIf="reportType.typeSelect == 3000 &amp;&amp; reportType.comparison != 1"/>
        <field name="displaySimulatedMove"
          showIf="company.accountConfig.isActivateSimulatedMove &amp;&amp; (journal == null || journal.authorizeSimulatedMove)"/>
        <field name="journal.authorizeSimulatedMove" hidden="true"/>
        <separator title="Balance sheet entries" colSpan="12"
          showIf="reportType.typeSelect != 5 &amp;&amp; reportType.typeSelect != 16 &amp;&amp; reportType.typeSelect != 17 &amp;&amp; reportType.typeSelect != 21 &amp;&amp; reportType.typeSelect != 22"/>
        <field name="displayClosingAccountingMoves"
          showIf="reportType.typeSelect != 5 &amp;&amp; reportType.typeSelect != 16 &amp;&amp; reportType.typeSelect != 17 &amp;&amp; reportType.typeSelect != 21 &amp;&amp; reportType.typeSelect != 22"/>
        <field name="displayOpeningAccountingMoves"
          showIf="reportType.typeSelect != 5 &amp;&amp; reportType.typeSelect != 16 &amp;&amp; reportType.typeSelect != 17 &amp;&amp; reportType.typeSelect != 21 &amp;&amp; reportType.typeSelect != 22"/>
        <separator title="Display options" colSpan="12"
          showIf="reportType.typeSelect == 7 || reportType.typeSelect == 1"/>
        <field name="displayOnlyNotCompletelyLetteredMoveLines"
          hideIf="reportType.typeSelect != 7 &amp;&amp; reportType.typeSelect != 1"/>
        <field name="displayCodeAccountColumnOnPrinting"
          showIf="reportType.typeSelect==7 || reportType.typeSelect == 1"/>
        <field name="displayNameAccountColumnOnPrinting"
          showIf="reportType.typeSelect==7 || reportType.typeSelect == 1"/>
        <field name="displayMoveLineSequenceOnPrinting"
          showIf="reportType.typeSelect==7 || reportType.typeSelect == 1"/>
        <field name="displayCumulativeBalance"
          showIf="reportType.typeSelect==7 || reportType.typeSelect==1"/>
        <field name="company.accountConfig" hidden="true"/>
        <field name="company.accountConfig.isActivateSimulatedMove" hidden="true"/>
      </panel>
    </panel-tabs>

    <panel sidebar="true" name="balancePanel" title="Balance"
      hideIf="reportType.typeSelect != 19 &amp;&amp; reportType.typeSelect != 20 ">
      <field name="totalDebit"/>
      <field name="totalCredit"/>
      <field name="balance"/>
    </panel>
    <panel-related field="accountingReportMoveLineList" hidden="true"
      grid-view="accounting-report-move-line-grid" form-view="accounting-report-move-line-form"
      canEdit="false" canNew="false" canRemove="false"/>

  </form>


  <!-- MOVE LINE EXPORT -->

  <grid name="accounting-report-export-grid" title="Accounting exports"
    model="com.axelor.apps.account.db.AccountingReport">
    <field name="ref" width="120"/>
    <field name="date"/>
    <field name="company" canEdit="false" form-view="company-form" grid-view="company-grid"/>
    <field name="reportType"/>
    <field name="dateFrom"/>
    <field name="dateTo"/>
    <field name="period" form-view="period-form" grid-view="period-grid" canEdit="false"
      canView="false"/>
    <field name="journal" form-view="journal-form" grid-view="journal-grid"/>
    <field name="totalDebit" aggregate="sum"/>
    <field name="totalCredit" aggregate="sum"/>
    <field name="balance"/>
    <field name="statusSelect"/>
  </grid>

  <form name="accounting-report-export-form" title="Accounting export"
    model="com.axelor.apps.account.db.AccountingReport"
    onNew="action-accounting-report-record-default">

    <panel name="searchPanel">
      <field name="company" canEdit="false" readonlyIf="ref != null" widget="SuggestBox"
        onChange="action-group-account-accounting-report-company-onchange" form-view="company-form"
        grid-view="company-grid"/>
      <field name="reportType"
        onChange="action-group-account-accounting-report-reporttype-onchange"
        domain="self.reportExportTypeSelect = 2 AND self.company = :company AND self.typeSelect != 1011"
        required="true"/>
      <panel name="filterPanel" title="Filter" colSpan="12" hideIf="reportType == null">
        <field name="year" onChange="action-accounting-report-record-period-dates"
          onSelect="action-accounting-report-attrs-year-domain" grid-view="year-account-grid"
          form-view="year-account-form" requiredIf="$contains([1000], reportType.typeSelect)"/>
        <field name="period" canEdit="false"
          onChange="action-group-account-accounting-report-period-onchange"
          onSelect="action-accounting-report-attrs-period-domain" form-view="period-form"
          grid-view="period-grid" canView="false" hideIf="$contains([1000], reportType.typeSelect)"/>
        <field name="dateFrom" onChange="action-move-Live-report-record-set-date-to"
          readonlyIf="$contains([1000], reportType.typeSelect) || year || period"/>
        <field name="dateTo"
          readonlyIf="$contains([1000], reportType.typeSelect)  || year || period"/>
      </panel>
      <field name="journal" form-view="journal-form" grid-view="journal-grid"
        showIf="$contains([1001], reportType.typeSelect)"/>
      <field name="minAmountExcl" showIf="reportType.typeSelect == 1011"/>
      <field name="reportType.typeSelect" hidden="true"/>
    </panel>

    <panel sidebar="true" name="infoPanel" title="Info">
      <field name="statusSelect"/>
      <button name="searchBtn" title="Search"
        showIf="(statusSelect != 2 &amp;&amp; reportType.typeSelect != 1011) || $contains([1000, 1010, 1001], reportType.typeSelect)"
        onClick="save,action-accounting-report-method-search-move-line,save"/>
      <button name="exportBtn" title="Export"
        showIf="(statusSelect != 2 &amp;&amp; reportType.typeSelect != 1011) || $contains([1000, 1010, 1001], reportType.typeSelect) || (statusSelect == 2 &amp;&amp; reportType.typeSelect == 1011 &amp;&amp; !exported)"
        onClick="action-group-account-accounting-report-export-click"/>
      <button name="showMoveExportedBtn" title="Exported moves"
        hideIf="statusSelect != 2 || $contains([1000, 1010, 1011], reportType.typeSelect)"
        onClick="save,action-accounting-report-method-show-move-exported"/>
      <button name="replayExportBtn" title="Run export again"
        hideIf="statusSelect != 2 || $contains([1000, 1010, 1011], reportType.typeSelect)"
        onClick="save,action-accounting-report-method-replay-export"/>
      <field name="exported" readonly="true" hideIf="reportType.typeSelect != 1011"/>
      <field name="complementaryExport" readonly="true" hideIf="reportType.typeSelect != 1011"/>
    </panel>

    <panel sidebar="true" name="balancePanel" title="Balance"
      hideIf="reportType.typeSelect == 1011">
      <field name="totalDebit"/>
      <field name="totalCredit"/>
      <field name="balance"/>
    </panel>
    <panel-related field="accountingReportMoveLineList"
      grid-view="accounting-report-move-line-grid" form-view="accounting-report-move-line-form"
      showIf="reportType.typeSelect == 1011 &amp;&amp; accountingReportMoveLineList.length &gt; 0"
      canEdit="false" canNew="false" canRemove="false"/>
  </form>


  <!-- ACTION GROUPs -->

  <action-group name="action-group-account-accounting-report-reporttype-onchange">
    <action name="action-accounting-report-record-reset"/>
    <action name="action-accounting-report-record-default-global"/>
    <action name="action-accounting-report-method-get-account"/>
    <action
      name="action-accounting-report-method-get-values-from-report-type-accounting-report"/>
  </action-group>

  <action-group name="action-group-account-accounting-report-export-click">
    <action name="save"/>
    <action name="action-accounting-report-method-print-export-moveLine"/>
    <action name="action-accounting-report-method-get-reload"/>
  </action-group>

  <action-group name="action-group-account-accounting-report-period-onchange">
    <action name="action-accounting-report-record-year"/>
    <action name="action-accounting-report-record-date-from-and-date-to"/>
  </action-group>

  <action-group name="action-group-account-accounting-report-company-onchange">
    <action name="action-accounting-report-method-get-account"/>
    <action name="action-accounting-report-record-reset"/>
  </action-group>

  <!-- ACTION ATTRS -->

  <action-attrs name="action-accounting-report-attrs-period-domain">
    <attribute if="eval: year != null" name="domain"
      expr="eval: &quot;self.year.id = ${year?.id}&quot;" for="period"/>
    <attribute name="domain" for="period"
      expr="eval: &quot; self.year.company = :company AND self.year.typeSelect = 1 &quot;"
      if="eval: year == null "/>
  </action-attrs>

  <action-attrs name="action-accounting-report-attrs-previous-period-domain">
    <attribute name="domain" expr="eval: &quot;self.year.id = ${previousYear?.id}&quot;"
      for="previousPeriod" if="eval: previousYear != null"/>
    <attribute name="domain" for="previousPeriod"
      expr="eval: &quot; self.year.company = :company AND self.year.typeSelect = 1 &quot;"
      if="eval: previousYear == null "/>
  </action-attrs>

  <action-attrs name="action-accounting-report-attrs-year-domain">
    <attribute name="domain" for="year"
      expr="eval: &quot;self.company.id = ${company?.id} AND self.typeSelect = 1 &quot;"/>
  </action-attrs>

  <action-attrs name="action-accounting-report-attrs-previous-year-domain">
    <attribute name="domain" for="previousYear"
      expr="eval: &quot;self.company.id = ${company?.id} AND self.typeSelect = 1 &quot;"/>
  </action-attrs>

  <action-attrs name="action-accounting-report-attrs-accountset-domain"
    model="com.axelor.apps.account.db.AccountingReport">
    <attribute for="accountSet" name="domain"
      expr="eval: &quot; self.company = :company AND ((${reportType?.typeSelect} = 18 AND self.accountType.technicalTypeSelect = 'cash') OR (${reportType?.typeSelect} &lt;&gt; 18 AND (${reportType?.typeSelect} &lt;&gt; 6 OR self.useForPartnerBalance = true))) &quot;"/>
  </action-attrs>

  <!-- ACTION RECORD -->

  <action-record name="action-accounting-report-record-global"
    model="com.axelor.apps.account.db.AccountingReport">
    <field name="globalByDate" expr="eval: false"/>
    <field name="globalByPartner" expr="eval: false"/>
    <field name="detailed" expr="eval: false"/>
  </action-record>

  <action-record name="action-accounting-report-record-global-by-date"
    model="com.axelor.apps.account.db.AccountingReport">
    <field name="global" expr="eval: false"/>
    <field name="globalByPartner" expr="eval: false"/>
    <field name="detailed" expr="eval: false"/>
  </action-record>

  <action-record name="action-accounting-report-record-global-by-partner"
    model="com.axelor.apps.account.db.AccountingReport">
    <field name="global" expr="eval: false"/>
    <field name="globalByDate" expr="eval: false"/>
    <field name="detailed" expr="eval: false"/>
  </action-record>

  <action-record name="action-accounting-report-record-detailed"
    model="com.axelor.apps.account.db.AccountingReport">
    <field name="global" expr="eval: false"/>
    <field name="globalByDate" expr="eval: false"/>
    <field name="globalByPartner" expr="eval: false"/>
  </action-record>

  <action-record name="action-accounting-report-record-year"
    model="com.axelor.apps.account.db.AccountingReport">
    <field name="year" expr="eval: period.year" if="eval : period != null"/>
    <field name="year" expr="eval: null"
      if="(period == null &amp;&amp; !(typeSelect in [2,12,15,16,17]))"/>
  </action-record>

  <action-record name="action-accounting-report-record-previous-period-on-change"
    model="com.axelor.apps.account.db.AccountingReport">
    <field name="previousYear" expr="eval: previousPeriod.year" if="previousPeriod != null"/>
    <field name="previousDateFrom" expr="eval: previousPeriod.fromDate"
      if="previousPeriod != null"/>
    <field name="previousDateTo" expr="eval: previousPeriod.toDate"
      if="previousPeriod != null"/>
  </action-record>

  <action-record name="action-accounting-report-record-period-dates"
    model="com.axelor.apps.account.db.AccountingReport">
    <field name="period" expr="eval: null"/>
    <field name="dateFrom" expr="eval: year.fromDate" if="year"/>
    <field name="dateTo" expr="eval: year.toDate" if="year"/>
  </action-record>

  <action-record name="action-accounting-report-record-previous-period-dates"
    model="com.axelor.apps.account.db.AccountingReport">
    <field name="previousPeriod" expr="eval: null"/>
    <field name="previousDateFrom" expr="eval: previousYear.fromDate" if="previousYear"/>
    <field name="previousDateTo" expr="eval: previousYear.toDate" if="previousYear"/>
  </action-record>

  <action-record name="action-accounting-report-record-date-from-and-date-to"
    model="com.axelor.apps.account.db.AccountingReport">
    <field name="dateFrom" expr="eval: period.fromDate" if="eval : period != null"/>
    <field name="dateTo" expr="eval: period.toDate" if="eval : period != null"/>
  </action-record>

  <action-record name="action-accounting-report-record-reset"
    model="com.axelor.apps.account.db.AccountingReport">
    <field name="accountSet" expr="eval: null"/>
    <field name="journalSet" expr="eval: null" if="__config__.app.isApp('bank-payment')"/>
    <field name="bankDetailsSet" expr="eval: null" if="__config__.app.isApp('bank-payment')"/>
    <field name="paymentMode" expr="eval: null"/>
    <field name="partnerSet" expr="eval: null"/>
    <field name="global" expr="eval: null"/>
    <field name="globalByDate" expr="eval: null"/>
    <field name="globalByPartner" expr="eval: null"/>
    <field name="detailed" expr="eval: null"/>
    <field name="year" expr="eval: null"/>
    <field name="exportTypeSelect" expr="eval: null"/>
    <field name="period" expr="eval: null"/>
    <field name="dateFrom" expr="eval: null"/>
    <field name="dateTo" expr="eval: null"/>
    <field name="analyticDistributionTemplate" expr="eval: null"/>
    <field name="subtotalByAnalyticDistribution" expr="eval: null"/>
  </action-record>

  <action-record name="action-accounting-report-record-default-global"
    model="com.axelor.apps.account.db.AccountingReport">
    <field name="global" expr="eval: true" if="reportType?.typeSelect in [1,2,5,11]"/>
    <field name="globalByPartner" expr="eval: true" if="reportType?.typeSelect in [3]"/>
    <field name="detailed" expr="eval: true" if="reportType?.typeSelect in [4]"/>
    <field name="exportTypeSelect" expr="eval: 'pdf'"/>
    <field name="company" expr="reportType?.company"/>

  </action-record>

  <action-record name="action-accounting-report-record-default"
    model="com.axelor.apps.account.db.AccountingReport">
    <field name="createdOn"
      expr="eval: __config__.app.getTodayDateTime(__user__.activeCompany)"/>
    <field name="createdOn"
      expr="eval:__config__.app.getTodayDateTime(__repo__(Company).all().fetchOne())"
      if="__user__.activeCompany == null &amp;&amp; __repo__(Company).all().count() == 1"/>
    <field name="company" expr="eval:__user__.activeCompany"
      if="__user__.activeCompany != null"/>
    <field name="company" expr="eval:__repo__(Company).all().fetchOne()"
      if="__user__.activeCompany == null &amp;&amp; __repo__(Company).all().count() == 1"/>
    <field name="date" expr="eval:__config__.date"/>
    <field name="date"
      expr="eval:__config__.app.getTodayDate(__repo__(Company).all().fetchOne())"
      if="__user__.activeCompany == null &amp;&amp; __repo__(Company).all().fetch().size == 1"/>
  </action-record>

  <action-record name="action-move-Live-report-record-set-date-to"
    model="com.axelor.apps.account.db.AccountingReport">
    <field name="dateTo" expr="eval: dateFrom" if="dateFrom &amp;&amp; !dateTo"/>
  </action-record>

  <action-record name="action-accounting-report-record-reset-display-simulated-move"
    model="com.axelor.apps.account.db.AccountingReport">
    <field name="displaySimulatedMove" expr="eval: false"
      if="!journal?.authorizeSimulatedMove"/>
  </action-record>

  <!-- ACTION METHOD -->

  <action-method
    name="action-accounting-report-method-get-values-from-report-type-accounting-report">
    <call class="com.axelor.apps.account.web.AccountingReportController"
      method="setFieldsFromReportTypeModelAccountingReport"/>
  </action-method>

  <action-method name="action-accounting-report-method-get-account">
    <call class="com.axelor.apps.account.web.AccountingReportController" method="getAccount"/>
  </action-method>

  <action-method name="action-accounting-report-method-get-reload">
    <call class="com.axelor.apps.account.web.AccountingReportController" method="getReload"/>
  </action-method>

  <action-method name="action-accounting-report-method-print-export-moveLine">
    <call class="com.axelor.apps.account.web.AccountingReportController"
      method="printExportMoveLine"/>
  </action-method>

  <action-method name="action-accounting-report-method-show-move-exported">
    <call class="com.axelor.apps.account.web.AccountingReportController"
      method="showMoveExported"/>
  </action-method>

  <action-method name="action-accounting-report-method-replay-export">
    <call class="com.axelor.apps.account.web.AccountingReportController" method="replayExport"/>
  </action-method>

  <action-method name="action-accounting-report-method-search-move-line">
    <call class="com.axelor.apps.account.web.AccountingReportController"
      method="searchMoveLine"/>
  </action-method>

  <action-method name="action-accounting-report-method-set-bank-details-domain">
    <call class="com.axelor.apps.bankpayment.web.AccountingReportController"
      method="setBankDetailsDomain"/>
  </action-method>

  <action-method name="action-accounting-report-method-create-export-from-report">
    <call class="com.axelor.apps.account.web.AccountingReportController"
      method="createExportFromReport"/>
  </action-method>

  <action-validate name="action-accounting-report-date-change-validate">
    <info
      message="The closing date is earlier than the current date: moves recorded after that date will not be taken into account in the report."
      if="date &lt; __config__.date"/>
  </action-validate>

  <action-validate name="action-account-report-alert-typeselect">
    <alert message="Make sure that all accounting moves are validated."
      if="reportType?.typeSelect == 12 || reportType?.typeSelect == 15"/>
    <alert
      message="Make sure there isn't another ongoing DAS2 export for this period that has not been exported yet"
      if="reportType?.typeSelect == 19"/>
  </action-validate>

  <search-filters name="accounting-report-filters"
    model="com.axelor.apps.account.db.AccountingReport" title="Accounting report filters">
    <field name="company" hidden="true"
      if="!__config__.app.getApp('base')?.getEnableMultiCompany()"/>
    <field name="journalSet" hidden="true" if="!__config__.app.isApp('bank-payment')"/>
    <field name="bankDetailsSet" hidden="true" if="!__config__.app.isApp('bank-payment')"/>
  </search-filters>

</object-views>
