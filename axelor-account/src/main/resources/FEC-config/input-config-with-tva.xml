<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_6.1.xsd">

  <input call="com.axelor.csv.script.ImportMove:importFECMove" file="FEC.csv" separator=";"
    type="com.axelor.apps.account.db.MoveLine">
    <!-- <header>journalCode, journalName, move_reference, moveLine_date, accountCode, accountName, partnerSeq,
      partnerName, moveLine_origin, moveLineOriginDate, description, debit, credit, reconcileGroupCode, reconcileGroupDateOfLettering,
      validationDate, currencyAmount, move_currency</header> -->
    <bind column="CompAuxNum" search="self.partnerSeq = :CompAuxNum" to="partner" update="true"/>
    <bind column="Debit" eval="Debit.replace(',', '.')" to="debit"/>
    <bind column="Credit" eval="Credit.replace(',', '.')" to="credit"/>
    <bind column="PieceRef" to="origin"/>
    <bind column="EcritureLib" to="description"/>
    <bind column="Montantdevise" eval="Montantdevise.replace(',', '.')" to="currencyAmount"/>
    <bind column="EcritureLet" search="self.code = :EcritureLet" if="EcritureLet"
      to="reconcileGroup">
      <bind column="EcritureLet" to="code"/>
      <bind column="DateLet" if="DateLet" to="letteringDateTime"
        eval="java.time.LocalDate.parse(DateLet,'yyyyMMdd').atTime(java.time.LocalTime.NOON)"/>
    </bind>
    <bind column="taxCode"
      search="self.tax.code = :taxCode and self.startDate &lt;= to_date(:EcritureDate, 'yyyyMMdd') and (self.endDate is null or self.endDate &gt;= to_date(:EcritureDate, 'yyyyMMdd'))"
      to="taxLine" update="true"/>
  </input>


</csv-inputs>
