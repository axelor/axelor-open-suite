package com.axelor.apps.account.einvoice.eu.e_arvetekeskus.erp;

import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.namespace.QName;

/**
 * This class was generated by Apache CXF 3.2.7 2021-01-08T13:56:35.278+02:00 Generated source
 * version: 3.2.7
 */
@WebServiceClient(name = "ErpDataExchangeService", targetNamespace = "http://e-arvetekeskus.eu/erp")
public class ErpDataExchangeService extends Service {

  public static final QName SERVICE =
      new QName("http://e-arvetekeskus.eu/erp", "ErpDataExchangeService");
  public static final QName ErpDataExchangeSoap11 =
      new QName("http://e-arvetekeskus.eu/erp", "ErpDataExchangeSoap11");
  public static final URL WSDL_LOCATION;

  static {
    WSDL_LOCATION = ErpDataExchangeService.class.getClassLoader().getResource("omniva.wsdl");
    if (WSDL_LOCATION == null) {
      Logger.getLogger(ErpDataExchangeService.class.getName())
          .log(
              Level.INFO,
              "Can not initialize the default wsdl from {0}",
              "file:src/main/resources/omniva.wsdl");
    }
  }

  public ErpDataExchangeService(URL wsdlLocation) {
    super(wsdlLocation, SERVICE);
  }

  public ErpDataExchangeService(URL wsdlLocation, QName serviceName) {
    super(wsdlLocation, serviceName);
  }

  public ErpDataExchangeService() {
    super(WSDL_LOCATION, SERVICE);
  }

  public ErpDataExchangeService(WebServiceFeature... features) {
    super(WSDL_LOCATION, SERVICE, features);
  }

  public ErpDataExchangeService(URL wsdlLocation, WebServiceFeature... features) {
    super(wsdlLocation, SERVICE, features);
  }

  public ErpDataExchangeService(
      URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
    super(wsdlLocation, serviceName, features);
  }

  /** @return returns ErpDataExchange */
  @WebEndpoint(name = "ErpDataExchangeSoap11")
  public ErpDataExchange getErpDataExchangeSoap11() {
    return super.getPort(ErpDataExchangeSoap11, ErpDataExchange.class);
  }

  /**
   * @param features A list of {@link WebServiceFeature} to configure on the proxy. Supported
   *     features not in the <code>features</code> parameter will have their default values.
   * @return returns ErpDataExchange
   */
  @WebEndpoint(name = "ErpDataExchangeSoap11")
  public ErpDataExchange getErpDataExchangeSoap11(WebServiceFeature... features) {
    return super.getPort(ErpDataExchangeSoap11, ErpDataExchange.class, features);
  }
}
