<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_7.2.xsd">

  <grid name="business-project-grid" title="Projects"
    model="com.axelor.apps.project.db.Project">
    <toolbar>
      <button name="logTimeBtn" icon="clock-history"
        onClick="action-timesheet-line-method-log-time" if="__config__.app.isApp('timesheet')"/>
    </toolbar>
    <field name="fullName"/>
    <field name="company" form-view="company-form" grid-view="company-grid"
      if="__config__.app.getApp('base')?.getEnableMultiCompany()"/>
    <field name="clientPartner" form-view="partner-form" grid-view="partner-grid"/>
    <field name="fromDate"/>
    <field name="toDate"/>
    <button name="openTasks" onClick="action-business-project-view-show-related-tasks"
      icon="list-task"/>
  </grid>

  <grid name="folder-project-grid" title="Projects" model="com.axelor.apps.project.db.Project">
    <field name="fullName"/>
    <field name="company" if="__config__.app.getApp('base')?.getEnableMultiCompany()"/>
    <field name="clientPartner"/>
  </grid>

  <form name="incl-project-structure-panel-form"
    id="incl-business-project-structure-panel-form" title="Project"
    model="com.axelor.apps.project.db.Project" extension="true">
    <extend target="//field[@name='isShowPhasesElements']">
      <insert position="before">
        <button name="convertProjectBtn"
          onClick="save,action-project-view-convert-project-wizard"
          title="Convert into business project" showIf="!isBusinessProject"/>
      </insert>
    </extend>
    <extend target="//field[@name='childProjectList']">
      <insert position="after">
        <field name="isBusinessProject" hidden="true"/>
      </insert>
    </extend>
  </form>

  <form name="business-project-form" title="Business project"
    model="com.axelor.apps.project.db.Project" width="large"
    onLoad="action-business-project-project-group-on-load"
    onNew="action-business-project-project-group-on-new"
    onSave="action-project-method-check-resource-availibility">
    <toolbar>
      <button name="showPlanningBtn" icon="calendar-week" title="Show planning"
        onClick="save,action-project-view-show-planning-panel" if="__config__.app.isApp('employee')"
        if-module="axelor-human-resource" showIf="isShowPlanning"/>
      <button name="showFinancialDatas" icon="clipboard-data" title="Show financial datas"
        onClick="save,action-project-view-show-financial-datas-panel"/>
    </toolbar>
    <menubar>
      <menu name="taskMenu" title="Tasks" showTitle="true" icon="fa-tasks">
        <item name="myOpenTasks" title="My open tasks"
          action="save,action-project-method-my-open-tasks"
          showIf="id &amp;&amp; taskStatusManagementSelect != 1"/>
        <item name="tasksCreatedByMe" title="Tasks created by me"
          action="save,action-project-method-my-tasks"
          showIf="id &amp;&amp; taskStatusManagementSelect != 1"/>
        <item name="allOpenTasks" title="All open tasks"
          action="save,action-project-method-all-open-tasks" showIf="id"/>
        <item name="allTasks" title="All tasks" action="save,action-project-method-all-tasks"
          showIf="id"/>
      </menu>
      <menu name="projectToolsMenu" title="Tools" showTitle="true" icon="fa-wrench">
        <item title="Compute project totals"
          action="save,action-project-method-compute-project-totals"
          if="__config__.app.isApp('business-project')" showIf="id"/>
        <item name="ganttItem" title="Gantt" showIf="id &amp;&amp; isShowGantt"
          action="save,action-project-open-gantt"/>
        <item name="bookResourceItem" title="Book resource"
          if=" __config__.app.getApp('project')?.resourceManagement"
          action="save,action-project-book-resource"/>
        <item name="wiki" title="Wiki" action="save,project.wiki.all" showIf="id"/>
        <item name="topic" title="Topic" action="save,project.topic.all"
          showIf="id &amp;&amp; isShowTopic"/>
        <item name="perStatusKanban" title="Per status kanban"
          action="save,action-project-method-view-per-status-kanban"
          showIf="id &amp;&amp; isShowKanbanPerStatus"/>
        <item name="perStatusCalendar" title="Per status calendar"
          action="save,action-project-view-per-status-calendar"
          showIf="id &amp;&amp; isShowCalendarPerStatus"/>
        <item name="perSectionKanban" title="Per section kanban"
          action="save,action-project-view-per-section-kanban"
          showIf="id &amp;&amp; isShowKanbanPerSection"/>
        <item name="perSectionCalendar" title="Per section calendar"
          action="save,action-project-view-per-section-calendar"
          showIf="id &amp;&amp; isShowCalendarPerSection"/>
        <item name="perUserCalendar" title="Per user calendar"
          action="save,action-project-view-per-user-calendar"
          showIf="id &amp;&amp; isShowCalendarPerUser"/>
      </menu>
    </menubar>
    <panel name="mainPanel">
      <panel-include view="incl-information-panel-form"/>
      <field name="$viewerProjectTags" showTitle="false" colSpan="2" readonly="true">
        <viewer depends="isBusinessProject,$toInvoiceCounter,id">
            <![CDATA[
								<>
									<Box d="flex" justifyContent="flex-end" gap="4" alignItems="center">
										<Box>
											{isBusinessProject &&
												<Badge style={{ backgroundColor: "#FD6217" }}>
													{_t('To Invoice')} {id && <Badge style={{ backgroundColor: "#FFAA00", fontSize: "12px" }}>{$fmt('$toInvoiceCounter')}</Badge>}
												</Badge>
											}
										</Box>
										{isBusinessProject && <Badge style={{ backgroundColor: "#2185D0" }}>{_t('Business')}</Badge>}
									</Box>
								</>
							]]>
        </viewer>
      </field>
      <panel name="statusChangeBtn" colSpan="4">
        <button name="finishBtn" icon="check-circle" title="Finish"
          showIf="id &amp;&amp; !projectStatus.isCompleted"
          onClick="action-business-project-group-finish-project"/>
        <button name="cancelBtn" title="Cancel" css="btn-danger"
          hideIf="projectStatus.id == $canceledProjectStatusId || !id" icon="x-circle"
          onClick="action-project-group-status-canceled"/>
        <button name="resetBtn" title="Reset" css="btn-warning"
          showIf="id &amp;&amp; projectStatus.id == $canceledProjectStatusId"
          icon="skip-backward-fill" onClick="action-project-record-status-new,save"/>
        <field name="projectStatus.isCompleted" hidden="true"/>
      </panel>

    </panel>

    <panel-tabs name="mainPanelTab">

      <panel name="overviewPanel" title="Overview"
        onTabSelect="action-project-activity-dashboard-method-on-new,action-project-dashboard-method-on-new">
        <panel name="generalInfoPanel" colSpan="12" title="General information"
          canCollapse="true" collapseIf="false">
          <field name="projectStatus" showTitle="false" widget="NavSelect" x-order="sequence"
            onChange="action-business-project-group-project-status-on-change"/>
          <field name="fromDate" colSpan="3"/>
          <field name="toDate" colSpan="3"/>
          <field name="company" form-view="company-form" grid-view="company-grid" colSpan="3"
            canEdit="false" if-module="axelor-business-project"/>
          <field name="clientPartner"
            domain="self.isCustomer = true AND :company member of self.companySet"
            onChange="action-project-method-get-partner-data" required="true"
            form-view="partner-form" grid-view="partner-grid" colSpan="3"
            if="__config__.app.isApp('business-project')" if-module="axelor-business-project"/>
          <field name="currency" colSpan="3" if="__config__.app.isApp('business-project')"
            if-module="axelor-business-project" canEdit="false"/>
          <field name="priceList" colSpan="3" if="__config__.app.isApp('business-project')"
            if-module="axelor-business-project" canEdit="false"/>
          <field name="contactPartner" onSelect="action-attrs-domain-on-contact-partner"
            form-view="partner-form" grid-view="partner-grid" colSpan="6"
            if="__config__.app.isApp('business-project')" if-module="axelor-business-project"/>
          <field name="customerAddress" grid-view="address-grid" form-view="address-form"
            if="__config__.app.isApp('business-project')" if-module="axelor-business-project"
            domain="self IN (SELECT address FROM PartnerAddress where partner = :clientPartner)"/>
        </panel>
        <panel-include view="incl-project-overview-panel-form"/>
      </panel>

      <panel-include view="sprint-project-form"/>

      <panel name="reportingPanel" title="Reporting">
        <panel title="Time follow-up" colSpan="12" canCollapse="true" collapseIf="true">
          <panel-dashlet action="action-project-view-sold-time-custom" colSpan="3"
            showTitle="false" height="125" canSearch="true"/>
          <panel-dashlet action="action-project-view-updated-time-custom" colSpan="3"
            showTitle="false" height="125" canSearch="true"/>
          <panel-dashlet action="action-project-view-planned-time-custom" colSpan="3"
            showTitle="false" height="125" canSearch="true"/>
          <panel-dashlet action="action-project-view-spent-time-custom" colSpan="3"
            showTitle="false" height="125" canSearch="true"/>

          <panel-dashlet action="action-project-view-percentage-progress-custom"
            colSpan="3" showTitle="false" height="125" canSearch="true"/>
          <panel-dashlet action="action-project-view-percentage-consumption-custom"
            colSpan="3" showTitle="false" height="125" canSearch="true"/>
          <panel-dashlet action="action-project-view-remaining-to-do-custom"
            colSpan="3" showTitle="false" height="125" canSearch="true"/>
        </panel>

        <panel title="Financial follow-up" colSpan="12" canCollapse="true" collapseIf="true">
          <panel name="soldPanel" title="ProjectTask.Sold" colSpan="12" showIf="!parentTask">
            <panel-dashlet action="action-project-view-turnover-custom" colSpan="3"
              height="125" canSearch="true"/>
            <panel-dashlet action="action-project-view-initial-costs-custom"
              colSpan="3" height="125" canSearch="true"/>
            <panel-dashlet action="action-project-view-initial-margin-custom"
              colSpan="3" height="125" canSearch="true"/>
            <panel-dashlet action="action-project-view-initial-markup-custom"
              colSpan="3" height="125" canSearch="true"/>
            <field name="turnover" hidden="true"/>
            <field name="initialCosts" hidden="true"/>
            <field name="initialMargin" hidden="true"/>
            <field name="initialMarkup" hidden="true"/>
          </panel>
          <panel name="forecastPanel" title="ProjectTask.Forecast" colSpan="12">
            <panel-dashlet action="action-project-view-forecast-costs-custom"
              colSpan="3" height="125" canSearch="true"/>
            <panel-dashlet action="action-project-view-forecast-margin-custom"
              colSpan="3" height="125" canSearch="true"/>
            <panel-dashlet action="action-project-view-forecast-markup-custom"
              colSpan="3" height="125" canSearch="true"/>
            <field name="forecastCosts" hidden="true"/>
            <field name="forecastMargin" hidden="true"/>
            <field name="forecastMarkup" hidden="true"/>
          </panel>
          <panel name="realPanel" title="ProjectTask.Real" colSpan="12">
            <panel-dashlet action="action-project-view-real-turnover-custom"
              colSpan="3" height="125" canSearch="true"/>
            <panel-dashlet action="action-project-view-real-costs-custom" colSpan="3"
              height="125" canSearch="true"/>
            <panel-dashlet action="action-project-view-real-margin-custom" colSpan="3"
              height="125" canSearch="true"/>
            <panel-dashlet action="action-project-view-real-markup-custom" colSpan="3"
              height="125" canSearch="true"/>
            <field name="realTurnover" hidden="true"/>
            <field name="realCosts" hidden="true"/>
            <field name="realMargin" hidden="true"/>
            <field name="realMarkup" hidden="true"/>
          </panel>
          <panel name="landingPanel" title="ProjectTask.Landing" colSpan="12">
            <panel-dashlet action="action-project-view-landing-costs-custom"
              colSpan="3" height="125" canSearch="true"/>
            <panel-dashlet action="action-project-view-landing-margin-custom"
              colSpan="3" height="125" canSearch="true"/>
            <panel-dashlet action="action-project-view-landing-markup-custom"
              colSpan="3" height="125" canSearch="true"/>
            <field name="landingCosts" hidden="true"/>
            <field name="landingMargin" hidden="true"/>
            <field name="landingMarkup" hidden="true"/>
          </panel>
          <panel name="invoicingPanel" title="Invoicing (excl. VAT)" colSpan="12">
            <panel-dashlet action="action-project-view-total-invoiced-custom"
              colSpan="3" height="125" canSearch="true"/>
            <panel-dashlet action="action-project-view-invoiced-this-month-custom"
              colSpan="3" height="125" canSearch="true"/>
            <panel-dashlet action="action-project-view-invoiced-last-month-custom"
              colSpan="3" height="125" canSearch="true"/>
            <panel-dashlet action="action-project-view-total-paid-custom" colSpan="3"
              height="125" canSearch="true"/>
            <field name="totalInvoiced" hidden="true"/>
            <field name="invoicedThisMonth" hidden="true"/>
            <field name="invoicedLastMonth" hidden="true"/>
            <field name="totalPaid" hidden="true"/>
          </panel>
        </panel>
        <panel name="projectHistoryPanel" title="Project history" colSpan="12">
          <field name="projectHistoryLineList" colSpan="12" canNew="false" canEdit="false"
            canRemove="false" title=""/>
        </panel>
      </panel>

      <panel title="Tasks" name="taskTreePanel">
        <panel-dashlet name="projectTaskTreeDashletPanel" title="Task Tree"
          height="200%" colSpan="12" action="action-view-show-business-project-task"
          x-show-bars="true" canSearch="true"/>
        <panel-dashlet name="taskInvoicingDashletPanel" title="Task Invoicing"
          height="200%" colSpan="12" action="action-dashlet-project-show-all-invoicing-task"
          if="__config__.app.isApp('business-project')" canSearch="true"/>
      </panel>
      <panel-include view="incl-wiki-panel-form"/>

      <panel-include view="incl-checklist-panel-form"/>

      <panel-include if-module="axelor-human-resource"
        view="incl-log-times-panel-form" if="__config__.app.isApp('timesheet')"/>

      <panel title="Invoicing" name="invoicingPanel">
        <help colSpan="12"><![CDATA[To be invoiceable, each element (task, timesheet, expenses, etc.) has to be set with the checkbox "To invoice" as True. These boolean buttons below will set newly created element with "To invoice" as True.]]></help>
        <field name="toInvoice" colSpan="3"
          onChange="action-project-attrs-set-invoicing-sequence"/>
        <field name="isInvoicingTimesheet" colSpan="3" showIf="manageTimeSpent"/>
        <field name="isInvoicingExpenses" colSpan="3"/>
        <field name="isInvoicingPurchases" colSpan="3"/>
        <field name="invoicingSequenceSelect" showIf="toInvoice" requiredIf="toInvoice"
          selection-in="[1,2]" colSpan="6"/>
        <field name="consolidatePhaseWhenInvoicing"
          title="Consolidate sub project when invoicing" colSpan="4"/>
        <spacer name="invoicingSequenceSelectSpacer" colSpan="2"/>
        <button name="showInvoicingProjectsBtn" title="Create invoicing project"
          css="btn-custom" icon="fa-file-text-o"
          onClick="save,action-project-view-show-invoicing-projects"/>
        <help colSpan="12"><![CDATA[This analytic distribution template will be filled with partner or assigned user configuration according to Business Project module configuration.]]></help>
        <field name="analyticDistributionTemplate"
          grid-view="analytic-distribution-template-grid"
          form-view="analytic-distribution-template-form" canEdit="false" canNew="false"
          domain="self.company = :company AND self.isSpecific = false"/>
      </panel>

      <panel title="Configurations" name="configurationsPanel">
        <panel title="Business configuration" name="businessConfigurationsPanel" colSpan="12"
          canCollapse="true" collapseIf="false">
          <field name="projectFolderSet" colSpan="12" widget="TagSelect"/>
          <field name="projectTimeUnit"/>
          <field name="numberHoursADay"/>
          <field name="spentTimeCostComputationMethod"/>
          <field name="allowToGetPricesFromFrameworkContract"/>
        </panel>
        <panel-include view="incl-project-config-panel-form"/>
      </panel>
    </panel-tabs>
    <panel name="attrsPanel">
      <field name="attrs" colSpan="12"/>
    </panel>
    <panel-mail name="mailPanel">
      <mail-messages limit="4"/>
      <mail-followers/>
    </panel-mail>
  </form>

  <form title="Business project" model="com.axelor.apps.project.db.Project" width="large"
    name="business-project-financial-datas-form"
    onLoad="action-business-project-method-set-analytic-distribution-template-required">
    <panel-tabs>
      <panel title="Sales" name="salesPanel"
        if="__config__.app.isApp('business-project')
				&amp;&amp; __config__.app.getApp('business-project').getShowSaleOrderLineRelatedToProject()"
        if-module="axelor-business-project">
        <button name="generateQuotationBtn" title="Generate quotation"
          onClick="action-project-method-generate-quotation" css="btn-custom text-left"/>
        <button name="showSaleOrderLinesBtn" title="Show sale order lines" css="btn-custom"
          icon="fa-line-chart" onClick="action-project-view-show-sale-order-lines"/>
        <panel-dashlet name="saleQuotationPanel" height="200%"
          action="action-project-dashlet-sale-quotation" colSpan="12" canSearch="true"/>
        <panel-dashlet name="saleOrderPanel" height="200%"
          action="action-project-dashlet-sale-order" colSpan="12" canSearch="true"/>
        <button name="selectNewSOLinesBtn" title="Select new lines"
          css="btn-custom text-left"
          onClick="save,action-project-attrs-sales-order-line-select-lines"
          hideIf="$popup() || $readonly()" colSpan="3"/>
        <button name="manageSOLinesBtn" title="Manage lines" css="btn-custom text-left"
          onClick="save,action-project-attrs-sales-order-line-manage-lines"
          hideIf="$popup() || $readonly()" colSpan="3"/>
        <field name="$salesOrderLineSet" hidden="true" type="many-to-many" widget="TagSelect"
          title="Sale order lines" colSpan="12" target="com.axelor.apps.sale.db.SaleOrderLine"
          canEdit="false" canNew="false" grid-view="sale-order-line-project-grid"
          form-view="sale-order-line-form"/>
        <button-group name="SOLinesBtnGroup" colSpan="4">
          <button name="addSelectedSOLinesBtn" hidden="true" title="Add selected lines"
            onClick="action-sale-order-line-method-set-project"/>
          <button name="unlinkSelectedSOLinesBtn" hidden="true" title="Unlink selected lines"
            onClick="action-validate-unset-project,action-sale-order-line-method-unset-project"/>
        </button-group>
        <button name="cancelManageSOLinesBtn" colSpan="4" hidden="true" title="Cancel"
          onClick="action-project-attrs-sales-order-line-cancel-manage-lines"/>
        <panel-dashlet name="saleOrderLinePanel" height="200%"
          action="action-project-view-show-confirmed-sale-order-lines" colSpan="12" canSearch="true"/>
        <panel-dashlet name="customerDeliveriesPanel" canSearch="true" height="200%"
          action="action-project-dashlet-customer-deliveries" colSpan="12"/>
      </panel>
      <panel title="Purchases" name="purchasesPanel"
        if="__config__.app.isApp('business-project')
					&amp;&amp; __config__.app.getApp('business-project').getShowPurchaseOrderLineRelatedToProject()"
        if-module="axelor-business-project">
        <button name="generatePurchaseQuotationBtn" title="Generate quotation"
          onClick="action-project-method-generate-purchase-quotation" css="btn-custom text-left"/>
        <button name="showPurchaseOrderLinesBtn" title="Show purchase order lines"
          css="btn-custom" icon="fa-shopping-cart"
          onClick="action-project-view-show-purchase-order-lines"/>
        <panel-dashlet name="purchaseQuotationPanel" height="200%"
          action="action-project-project-purchase-quotation" colSpan="12" canSearch="true"/>
        <panel-dashlet name="purchaseOrderPanel" height="200%"
          action="action-project-dashlet-purchase-order" colSpan="12" canSearch="true"/>
        <button name="selectNewPOLinesBtn" title="Select new lines"
          css="btn-custom text-left"
          onClick="save,action-project-attrs-purchase-order-line-select-lines"
          hideIf="$popup() || $readonly()" colSpan="3"/>
        <button name="managePOLinesBtn" title="Manage lines" css="btn-custom text-left"
          onClick="save,action-project-attrs-purchase-order-line-manage-lines"
          hideIf="$popup() || $readonly()" colSpan="3"/>
        <field name="$purchaseOrderLineSet" hidden="true" type="many-to-many"
          widget="TagSelect" title="Purchase order lines" colSpan="12"
          target="com.axelor.apps.purchase.db.PurchaseOrderLine" canEdit="false" canNew="false"
          grid-view="purchase-order-line-project-grid" form-view="purchase-order-line-form"/>
        <button-group name="POLinesBtnGroup" colSpan="4">
          <button name="addSelectedPOLinesBtn" hidden="true" title="Add selected lines"
            onClick="action-purchase-order-line-method-set-project"/>
          <button name="unlinkSelectedPOLinesBtn" hidden="true" title="Unlink selected lines"
            onClick="action-validate-unset-project,action-purchase-order-line-method-unset-project"/>
        </button-group>
        <button name="cancelManagePOLinesBtn" colSpan="4" hidden="true" title="Cancel"
          onClick="action-project-attrs-purchase-order-line-cancel-manage-lines"/>
        <panel-dashlet name="purchaseOrderLinePanel" height="200%"
          action="action-project-view-show-confirmed-purchase-order-lines" colSpan="12"
          canSearch="true"/>
        <panel-dashlet name="supplierArrivalsPanel" canSearch="true" height="200%"
          action="action-project-dashlet-supplier-arrivals" colSpan="12"/>
      </panel>

      <panel title="Expenses" name="expensesPanel"
        if="__config__.app.isApp('business-project')
				&amp;&amp;  __config__.app.getApp('business-project').getShowExpenseLineRelatedToProject()"
        if-module="axelor-business-project">
        <button name="showExpenseLinesBtn" title="Show expense lines"
          css="btn-custom text-left" icon="fa-credit-card"
          onClick="action-project-view-show-expense-lines"/>
        <panel-dashlet name="expenseWaitingPanel" height="200%"
          action="action-project-dashlet-expense-waiting" colSpan="12" canSearch="true"/>
        <panel-dashlet name="expensePanel" height="200%"
          action="action-project-dashlet-expense-validated" colSpan="12" canSearch="true"/>
        <button name="selectNewExpenseLinesBtn" title="Select new lines"
          css="btn-custom text-left" onClick="save,action-project-attrs-expense-line-select-lines"
          hideIf="$popup() || $readonly()" colSpan="3" canSearch="true"/>
        <button name="manageExpenseLinesBtn" title="Manage lines" css="btn-custom text-left"
          onClick="save,action-project-attrs-expense-line-manage-lines"
          hideIf="$popup() || $readonly()" colSpan="3"/>
        <field name="$expenseLineSet" hidden="true" type="many-to-many" widget="TagSelect"
          title="Expense lines" colSpan="12" target="com.axelor.apps.hr.db.ExpenseLine"
          canEdit="false" canNew="false" grid-view="expense-line-project-grid"
          form-view="expense-line-form"/>
        <button-group name="expenseLinesBtnGroup" colSpan="4">
          <button name="addSelectedExpenseLinesBtn" hidden="true" title="Add selected lines"
            onClick="action-expense-line-method-set-project"/>
          <button name="unlinkSelectedExpenseLinesBtn" hidden="true"
            title="Unlink selected lines"
            onClick="action-validate-unset-project,action-expense-line-method-unset-project"/>
        </button-group>
        <button name="cancelManageExpenseLinesBtn" colSpan="4" hidden="true" title="Cancel"
          onClick="action-project-attrs-expense-line-cancel-manage-lines"/>
        <panel-dashlet name="expenseLinePanel" height="200%"
          action="action-project-view-show-validated-expense-lines" colSpan="12" canSearch="true"/>
      </panel>

      <panel title="Contracts" name="contractPanel"
        if="__config__.app.isApp('business-project')" if-module="axelor-business-project">
        <panel name="frameworkContractPanel" showIf="allowToGetPricesFromFrameworkContract"
          colSpan="12">
          <field name="frameworkCustomerContractSet" colSpan="12" canEdit="false"
            domain="self.contractTypeSelect = 2 AND self.targetTypeSelect = 1"/>
          <field name="defaultFrameworkCustomerContract"
            onSelect="action-project-attrs-set-default-customer-contract-domain"/>
          <field name="frameworkSupplierContractSet" colSpan="12" canEdit="false"
            domain="self.contractTypeSelect = 2 AND self.targetTypeSelect = 2"/>
          <field name="defaultFrameworkSupplierContract"
            onSelect="action-project-attrs-set-default-supplier-contract-domain"/>
        </panel>
        <button name="createNewCustomerContract" title="Create new customer contract"
          colSpan="6" onClick="save,action-project-view-create-new-customer-contract"/>
        <button name="createNewSupplierContract" title="Create new supplier contract"
          colSpan="6" onClick="save,action-project-view-create-new-supplier-contract"/>
        <panel-dashlet name="customerContractPanel" title="Customer contracts"
          height="200%" action="action-project-dashlet-customer-contracts" colSpan="12"
          canSearch="true"/>
        <panel-dashlet name="supplierContractPanel" title="Supplier contracts"
          height="200%" action="action-project-dashlet-supplier-contracts" colSpan="12"
          canSearch="true"/>
        <panel-dashlet name="contractInvoicePanel" title="Invoices" canSearch="true"
          height="200%" action="action-project-dashlet-contract-invoices" colSpan="12"/>
      </panel>

      <panel title="Production" name="productionPanel" if-module="axelor-business-production"
        if="__config__.app.isApp('business-project')
				 &amp;&amp; __config__.app.getApp('business-project').getShowProductionOrderRelatedToProject()">
        <button name="showProductionOrdersBtn" title="Show production orders"
          css="btn-custom text-left" icon="fa-cogs"
          onClick="action-project-view-show-production-orders"/>
        <panel-related colSpan="12" field="productionOrderList" canSelect="true"
          canNew="false" canEdit="false" canSearch="true" name="productionOrderList"/>
      </panel>
      <panel title="Invoicing" name="invoicingPanel">
        <help colSpan="12"><![CDATA[To be invoiceable, each element (task, timesheet, expenses, etc.) has to be set with the checkbox "To invoice" as True. These boolean buttons below will set newly created element with "To invoice" as True.]]></help>
        <field name="toInvoice" colSpan="3"
          onChange="action-project-attrs-set-invoicing-sequence"/>
        <field name="isInvoicingTimesheet" colSpan="3" showIf="manageTimeSpent"/>
        <field name="isInvoicingExpenses" colSpan="3"/>
        <field name="isInvoicingPurchases" colSpan="3"/>
        <field name="invoicingSequenceSelect" showIf="toInvoice" requiredIf="toInvoice"
          selection-in="[1,2]" colSpan="6"/>
        <field name="consolidatePhaseWhenInvoicing"
          title="Consolidate sub project when invoicing" colSpan="4"/>
        <spacer name="invoicingSequenceSelectSpacer" colSpan="2"/>
        <button name="showInvoicingProjectsBtn" title="Create invoicing project"
          css="btn-custom" icon="fa-file-text-o"
          onClick="save,action-project-view-show-invoicing-projects"/>

        <panel name="analyticPanel" title="Analytics" colSpan="12"
          if="__config__.app.getApp('account').getManageAnalyticAccounting()" canCollapse="true"
          collapseIf="true">
          <help colSpan="12"><![CDATA[This analytic distribution template will be filled with partner or assigned user configuration according to Business Project module configuration.]]></help>
          <field name="analyticDistributionTemplate"
            grid-view="analytic-distribution-template-grid"
            form-view="analytic-distribution-template-form" canEdit="false" canNew="false"
            domain="self.company = :company AND self.isSpecific = false"/>
          <panel-dashlet name="analyticDashletPanel" canSearch="true" height="200%"
            action="action-project-dashlet-analytic-move-lines" colSpan="12"/>
        </panel>

        <panel title="HoldBacks" name="projectHoldBacksPanel" colSpan="12" canCollapse="true"
          collapseIf="true">
          <panel-related name="holdBackLineListPanel" field="projectHoldBackLineList"
            title="HoldBacks lines" colSpan="12" form-view="project-hold-back-line-form"
            grid-view="project-hold-back-line-grid" editable="true"/>
        </panel>

        <panel title="Invoicing reports" name="invoicingReportPanel" colSpan="12"
          canCollapse="true" collapseIf="true">

          <field name="invoicingComment" colSpan="12"/>
          <panel-related name="manualElementListPanel" colSpan="12"
            field="manualElementList" form-view="manual-element-form"
            grid-view="manual-element-grid"/>
          <panel-dashlet name="allinvoicingProjectsPanel" canSearch="true"
            action="action-dashlet-project-show-all-invoicing-project" colSpan="12"/>
          <panel-dashlet name="customerInvoicePanel"
            action="action-project-dashlet-customer-invoices" colSpan="12"
            if="__config__.app.getApp('business-project').getShowSaleInvoiceLineRelatedToProject()"
            canSearch="true"/>
          <button name="selectNewCustomerInvoiceLinesBtn" title="Select new lines"
            css="btn-custom text-left"
            onClick="save,action-project-attrs-customer-invoice-line-select-lines"
            hideIf="$popup() || $readonly()" colSpan="3"
            if="__config__.app.getApp('business-project').getShowSaleInvoiceLineRelatedToProject()"/>
          <button name="manageCustomerInvoiceLinesBtn" title="Manage lines"
            css="btn-custom text-left"
            onClick="save,action-project-attrs-customer-invoice-line-manage-lines"
            hideIf="$popup() || $readonly()" colSpan="3"
            if="__config__.app.getApp('business-project').getShowSaleInvoiceLineRelatedToProject()"/>
          <field name="$customerInvoiceLineSet" hidden="true" type="many-to-many"
            widget="TagSelect" title="Customer Invoice lines" colSpan="12"
            target="com.axelor.apps.account.db.InvoiceLine" canEdit="false" canNew="false"
            grid-view="invoice-line-project-grid" form-view="invoice-line-form"/>
          <button-group name="customerInvoiceLinesBtnGroup" colSpan="4">
            <button name="addSelectedCustomerInvoiceLinesBtn" hidden="true"
              title="Add selected lines"
              onClick="action-invoice-line-method-set-customer-invoice-line-project"/>
            <button name="unlinkSelectedCustomerInvoiceLinesBtn" hidden="true"
              title="Unlink selected lines"
              onClick="action-validate-unset-project,action-invoice-line-method-unset-customer-invoice-line-project"/>
          </button-group>
          <button name="cancelManageCustomerInvoiceLinesBtn" colSpan="4" hidden="true"
            title="Cancel" onClick="action-project-attrs-customer-invoice-line-cancel-manage-lines"/>
          <panel-dashlet name="customerInvoiceLinePanel"
            action="action-project-view-show-sale-invoice-lines" colSpan="12"
            if="__config__.app.getApp('business-project').getShowSaleInvoiceLineRelatedToProject()"
            canSearch="true"/>
          <panel-dashlet name="supplierInvoicePanel"
            action="action-project-dashlet-supplier-invoices" colSpan="12"
            if="__config__.app.getApp('business-project').getShowPurchaseInvoiceLineRelatedToProject()"
            canSearch="true"/>
          <button name="selectNewSupplierInvoiceLinesBtn" title="Select new lines"
            css="btn-custom text-left"
            onClick="save,action-project-attrs-supplier-invoice-line-select-lines"
            hideIf="$popup() || $readonly()" colSpan="3"
            if="__config__.app.getApp('business-project').getShowPurchaseInvoiceLineRelatedToProject()"/>
          <button name="manageSupplierInvoiceLinesBtn" title="Manage lines"
            css="btn-custom text-left"
            onClick="save,action-project-attrs-supplier-invoice-line-manage-lines"
            hideIf="$popup() || $readonly()" colSpan="3"
            if="__config__.app.getApp('business-project').getShowPurchaseInvoiceLineRelatedToProject()"/>
          <field name="$supplierInvoiceLineSet" hidden="true" type="many-to-many"
            widget="TagSelect" title="Supplier Invoice lines" colSpan="12"
            target="com.axelor.apps.account.db.InvoiceLine" canEdit="false" canNew="false"
            grid-view="invoice-line-project-grid" form-view="invoice-line-form"/>
          <button-group name="supplierInvoiceLinesBtnGroup" colSpan="4">
            <button name="addSelectedSupplierInvoiceLinesBtn" hidden="true"
              title="Add selected lines"
              onClick="action-invoice-line-method-set-supplier-invoice-line-project"/>
            <button name="unlinkSelectedSupplierInvoiceLinesBtn" hidden="true"
              title="Unlink selected lines"
              onClick="action-validate-unset-project,action-invoice-line-method-unset-supplier-invoice-line-project"/>
          </button-group>
          <button name="cancelManageSupplierInvoiceLinesBtn" colSpan="4" hidden="true"
            title="Cancel" onClick="action-project-attrs-supplier-invoice-line-cancel-manage-lines"/>
          <panel-dashlet name="supplierInvoiceLinePanel"
            action="action-project-view-show-purchase-invoice-lines" colSpan="12"
            if="__config__.app.getApp('business-project').getShowPurchaseInvoiceLineRelatedToProject()"
            canSearch="true"/>
          <panel-dashlet name="advancePaymentInvoicesDashletPanel"
            action="action-project-dashlet-advance-payment-invoices" colSpan="12"
            if="__config__.app.getApp('business-project').getShowPurchaseInvoiceLineRelatedToProject() || __config__.app.getApp('business-project').getShowSaleInvoiceLineRelatedToProject()"
            canSearch="true"/>
        </panel>
      </panel>
    </panel-tabs>
  </form>

  <form title="Convert into business project" name="project-business-project-wizard-form"
    model="com.axelor.utils.db.Wizard">
    <panel colSpan="12">
      <field name="$company" title="Company" type="many-to-one"
        target="com.axelor.apps.base.db.Company" required="true"/>
      <field name="$clientPartner"
        domain="self.isCustomer = true AND :company member of self.companySet"
        title="Client partner" type="many-to-one" target="com.axelor.apps.base.db.Partner"
        required="true"/>
      <spacer colSpan="6"/>
      <button name="convertBtn" title="Convert"
        onClick="action-method-project-convert-project"/>
    </panel>
  </form>

  <action-group name="action-business-project-project-group-on-new">
    <action name="action-project-group-on-new-project"/>
    <action name="action-attrs-project-set-project-type"
      if="__config__.app.isApp('business-project')"/>
    <action name="action-business-project-project-attrs-defaults"/>
    <action name="action-project-attrs-set-time-unit-domain"/>
    <action name="action-business-project-method-get-analytic-distribution-template"/>
    <action name="action-business-project-method-set-analytic-distribution-template-required"/>
  </action-group>

  <action-group name="action-business-project-project-group-on-load">
    <action name="action-project-on-load-group"/>
    <action name="action-attrs-project-set-project-type"
      if="__config__.app.isApp('business-project')"/>
    <action name="action-project-method-count-to-invoice"
      if="__config__.app.isApp('business-project')"/>
    <action name="action-project-attrs-set-time-unit-domain"/>
    <action name="action-business-project-method-set-analytic-distribution-template-required"/>
  </action-group>

  <action-method name="action-project-method-generate-quotation">
    <call class="com.axelor.apps.businessproject.web.ProjectController"
      method="generateQuotation"/>
  </action-method>

  <action-method name="action-project-method-generate-purchase-quotation">
    <call class="com.axelor.apps.businessproject.web.ProjectController"
      method="generatePurchaseQuotation"/>
  </action-method>

  <action-method name="action-project-method-get-partner-data">
    <call class="com.axelor.apps.businessproject.web.ProjectController" method="getPartnerData"/>
  </action-method>

  <action-method name="action-method-project-convert-project">
    <call class="com.axelor.apps.businessproject.web.ProjectController" method="convertProject"/>
  </action-method>

  <action-validate name="action-validate-unset-project">
    <alert message="Are you sure to unlink project from selected lines?"/>
  </action-validate>

  <action-attrs id="business-project-action-project-project-default"
    name="action-project-project-default" model="com.axelor.apps.project.db.Project">
    <attribute name="value" for="typeSelect" expr="eval:'project'"/>
    <attribute name="value" for="fromDate" expr="eval: __datetime__"/>
    <attribute name="value" for="company" expr="eval:__user__.activeCompany"/>
    <attribute name="value" for="assignedTo" expr="eval: __user__"/>
    <attribute name="value:add" for="membersUserSet" expr="eval: __user__"/>
  </action-attrs>

  <action-attrs name="action-business-project-project-attrs-defaults"
    model="com.axelor.apps.project.db.Project">
    <attribute name="value" for="company" expr="eval:__user__.activeCompany"/>
    <attribute name="value" for="fromDate" expr="eval: __config__.date"/>
    <attribute name="value" for="assignedTo" expr="eval: __user__"/>
    <attribute name="value" for="numberHoursADay"
      expr="eval: __config__.app.getApp('business-project')?.defaultHoursADay"/>
    <attribute name="value" for="projectTimeUnit"
      expr="eval: __config__.app.getApp('business-project')?.daysUnit"/>
  </action-attrs>

  <action-attrs name="action-project-attrs-set-invoicing-sequence">
    <attribute name="value" for="invoicingSequenceSelect" expr="eval: null"/>
  </action-attrs>

  <action-attrs name="action-attrs-domain-on-contact-partner">
    <attribute for="contactPartner"
      if="clientPartner != null &amp;&amp; !clientPartner.contactPartnerSet.empty" name="domain"
      expr="eval: &quot;self.id IN (${clientPartner.contactPartnerSet?.collect{it.id}.join(',')})&quot;"/>
    <attribute for="contactPartner"
      if="clientPartner != null &amp;&amp; clientPartner.contactPartnerSet.empty" name="domain"
      expr="eval: &quot;self.id IN (0)&quot;"/>
    <attribute for="contactPartner" if="clientPartner == null" name="domain"
      expr="eval: &quot;self.isContact = true AND :company member of self.companySet&quot;"/>
  </action-attrs>

  <action-view name="action-dashlet-project-show-all-invoicing-task"
    title="Task Invoicing" model="com.axelor.apps.project.db.ProjectTask">
    <view type="grid" name="business-project-project-task-grid"/>
    <view type="form" name="business-project-task-form"/>
    <view-param name="show-toolbar" value="true"/>
    <view-param name="popup" value="reload"/>
    <domain>self.project.id in (:_projectIds)</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-add-ticket"
    model="com.axelor.apps.project.db.ProjectTask" title="Ticket">
    <view name="business-project-task-form" type="form"/>
    <view name="business-project-task-grid" type="grid"/>
    <view-param name="details-view" value="true"/>
    <view-param name="popup" value="reload"/>
    <view-param name="popup-save" value="true"/>
    <view-param name="show-confirm" value="true"/>
    <view-param name="show-toolbar" value="false"/>
    <view-param name="forceTitle" value="true"/>
    <context name="_project" expr="eval:__parent__"/>
    <context name="_typeSelect"
      expr="eval: com.axelor.apps.project.db.repo.ProjectTaskRepository.TYPE_TICKET"/>
  </action-view>

  <action-view name="action-business-project-add-task"
    model="com.axelor.apps.project.db.ProjectTask" title="Task">
    <view name="business-project-task-form" type="form"/>
    <view name="business-project-task-grid" type="grid"/>
    <view-param name="details-view" value="true"/>
    <view-param name="popup" value="reload"/>
    <view-param name="popup-save" value="true"/>
    <view-param name="show-confirm" value="true"/>
    <view-param name="show-toolbar" value="false"/>
    <context name="_project" expr="eval:__parent__"/>
    <context name="_typeSelect"
      expr="eval: com.axelor.apps.project.db.repo.ProjectTaskRepository.TYPE_TASK"/>
  </action-view>

  <action-view name="action-view-show-business-project-task" title="Project Tasks"
    model="com.axelor.apps.project.db.ProjectTask">
    <view type="grid" name="business-project-task-project-grid"/>
    <view type="form" name="business-project-task-form"/>
    <domain>self.project.id = :_id AND self.parentTask = null</domain>
    <context name="_id" expr="eval: id"/>
  </action-view>

  <action-view name="action-project-view-convert-project-wizard"
    title="Convert into business project" model="com.axelor.apps.project.db.Project">
    <view type="form" name="project-business-project-wizard-form"/>
    <view-param name="popup" value="reload"/>
    <view-param name="show-toolbar" value="false"/>
    <view-param name="show-confirm" value="false"/>
    <view-param name="popup-save" value="false"/>
    <context name="_projectId" expr="eval: __this__.id"/>
  </action-view>

  <action-view name="action-project-view-show-financial-datas-panel"
    title="Financial datas" model="com.axelor.apps.project.db.Project">
    <view type="form" name="business-project-financial-datas-form"/>
    <context name="_showRecord" expr="eval: id"/>
  </action-view>

  <!-- Sales -->

  <action-view name="action-project-dashlet-sale-quotation" title="Quotation"
    model="com.axelor.apps.sale.db.SaleOrder">
    <view type="grid" name="sale-order-quotation-grid"/>
    <view type="form" name="sale-order-form"/>
    <view-param name="popup" value="true"/>
    <domain>self.saleOrderLineList.project.id in (:_projectIds) AND self.statusSelect &lt; 3</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-dashlet-sale-order" title="Sale order"
    model="com.axelor.apps.sale.db.SaleOrder">
    <view type="grid" name="sale-order-grid"/>
    <view type="form" name="sale-order-form"/>
    <view-param name="popup" value="true"/>
    <domain>self.saleOrderLineList.project.id in (:_projectIds) AND self.statusSelect in (3,4)</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-view-show-sale-order-lines" title="Sale Order Lines"
    model="com.axelor.apps.sale.db.SaleOrderLine">
    <view type="grid" name="sale-order-line-project-grid"/>
    <view type="form" name="sale-order-line-project-form"/>
    <domain>self.project.id in (:_projectIds)</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-view-show-confirmed-sale-order-lines"
    title="Sale Order Lines" model="com.axelor.apps.sale.db.SaleOrderLine">
    <view type="grid" name="sale-order-line-project-grid"/>
    <view type="form" name="sale-order-line-project-form"/>
    <view-param name="popup" value="true"/>
    <domain>self.saleOrder.statusSelect in (3,4) AND self.project.id in (:_projectIds)</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-dashlet-customer-deliveries"
    title="Customer deliveries" model="com.axelor.apps.stock.db.StockMove">
    <view type="grid" name="stock-move-out-grid"/>
    <view type="form" name="stock-move-form"/>
    <view-param name="popup" value="true"/>
    <domain>self.stockMoveLineList.saleOrderLine.project.id in (:_projectIds)</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-dashlet-customer-contracts"
    title="Customer contracts" model="com.axelor.apps.contract.db.Contract">
    <view type="grid" name="contract-grid"/>
    <view type="form" name="contract-form"/>
    <domain>self.project.id = :id AND self.targetTypeSelect = 1 AND self.statusSelect != 3</domain>
  </action-view>

  <action-view name="action-project-view-create-new-customer-contract"
    title="Create new customer contract" model="com.axelor.apps.contract.db.Contract">
    <view type="form" name="contract-form"/>
    <context name="_xTargetType" expr="eval:1"/>
    <context name="_project" expr="eval: __self__"/>
    <context name="_clientPartner" expr="eval: __self__.clientPartner"/>
  </action-view>

  <action-attrs name="action-project-attrs-sales-order-line-select-lines">
    <attribute name="readonly" for="selectNewSOLinesBtn" expr="eval:true"/>
    <attribute name="readonly" for="manageSOLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="addSelectedSOLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="cancelManageSOLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="$salesOrderLineSet" expr="eval:false"/>
    <attribute name="value" for="$salesOrderLineSet" expr="eval:false"/>
    <attribute name="title" for="$salesOrderLineSet"
      expr="eval:com.axelor.i18n.I18n.get('Select lines to add')"/>
    <attribute name="domain" for="$salesOrderLineSet"
      expr="eval:&quot;self.saleOrder.clientPartner = :clientPartner AND self.saleOrder.statusSelect in (3,4) AND self.project is null&quot;"/>
  </action-attrs>

  <action-attrs name="action-project-attrs-sales-order-line-manage-lines">
    <attribute name="readonly" for="selectNewSOLinesBtn" expr="eval:true"/>
    <attribute name="readonly" for="manageSOLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="unlinkSelectedSOLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="cancelManageSOLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="$salesOrderLineSet" expr="eval:false"/>
    <attribute name="value" for="$salesOrderLineSet" expr="eval:null"/>
    <attribute name="title" for="$salesOrderLineSet"
      expr="eval:com.axelor.i18n.I18n.get('Select lines to unlink')"/>
    <attribute name="domain" for="$salesOrderLineSet"
      expr="eval:&quot;self.saleOrder.statusSelect in (3,4) AND self.project.id = :id&quot;"
      if="!isShowPhasesElements"/>
    <attribute name="domain" for="$salesOrderLineSet"
      expr="eval:&quot;self.saleOrder.statusSelect in (3,4) AND (self.project.id = :id OR self.project.parentProject.id = :id)&quot;"
      if="isShowPhasesElements"/>
  </action-attrs>

  <action-attrs name="action-project-attrs-sales-order-line-cancel-manage-lines">
    <attribute name="readonly" for="selectNewSOLinesBtn" expr="eval:false"/>
    <attribute name="readonly" for="manageSOLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="unlinkSelectedSOLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="addSelectedSOLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="cancelManageSOLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="$salesOrderLineSet" expr="eval:true"/>
  </action-attrs>

  <!-- Purchase -->

  <action-view name="action-project-project-purchase-quotation" title="PO.Quotation"
    model="com.axelor.apps.purchase.db.PurchaseOrder">
    <view type="grid" name="purchase-order-quotation-grid"/>
    <view type="form" name="purchase-order-form"/>
    <view-param name="popup" value="true"/>
    <domain>self.purchaseOrderLineList.project.id in (:_projectIds) AND self.statusSelect &lt; 3</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-dashlet-purchase-order" title="Purchase order"
    model="com.axelor.apps.purchase.db.PurchaseOrder">
    <view type="grid" name="purchase-order-grid"/>
    <view type="form" name="purchase-order-form"/>
    <view-param name="popup" value="true"/>
    <domain>self.purchaseOrderLineList.project.id in (:_projectIds) AND self.statusSelect in (3,4)</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-dashlet-supplier-arrivals" title="Supplier arrivals"
    model="com.axelor.apps.stock.db.StockMove">
    <view type="grid" name="stock-move-in-grid"/>
    <view type="form" name="stock-move-form"/>
    <view-param name="popup" value="true"/>
    <domain>self.stockMoveLineList.purchaseOrderLine.project.id in (:_projectIds)</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-view-show-purchase-order-lines"
    title="Purchase order lines" model="com.axelor.apps.purchase.db.PurchaseOrderLine">
    <view type="grid" name="purchase-order-line-project-grid"/>
    <view type="form" name="purchase-order-line-project-form"/>
    <domain>self.project.id in (:_projectIds)</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-dashlet-analytic-move-lines"
    model="com.axelor.apps.account.db.AnalyticMoveLine" title="Analytic move lines">
    <view name="analytic-move-line-grid" type="grid"/>
    <view name="analytic-move-line-form" type="form"/>
    <domain>self.project.id = :id</domain>
  </action-view>

  <action-view name="action-project-view-show-confirmed-purchase-order-lines"
    title="Purchase order lines" model="com.axelor.apps.purchase.db.PurchaseOrderLine">
    <view type="grid" name="purchase-order-line-project-grid"/>
    <view type="form" name="purchase-order-line-project-form"/>
    <view-param name="popup" value="true"/>
    <domain>self.purchaseOrder.statusSelect in (3,4) AND self.project.id in (:_projectIds)</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-view-create-new-supplier-contract"
    title="Create new supplier contract" model="com.axelor.apps.contract.db.Contract">
    <view type="form" name="contract-form"/>
    <context name="_xTargetType" expr="eval:2"/>
    <context name="_project" expr="eval:__self__"/>
  </action-view>

  <action-view name="action-project-dashlet-supplier-contracts"
    title="Supplier contracts" model="com.axelor.apps.contract.db.Contract">
    <view type="grid" name="contract-grid"/>
    <view type="form" name="contract-form"/>
    <domain>self.project.id = :id AND self.targetTypeSelect = 2 AND self.statusSelect != 3</domain>
  </action-view>

  <action-attrs name="action-project-attrs-purchase-order-line-select-lines">
    <attribute name="readonly" for="selectNewPOLinesBtn" expr="eval:true"/>
    <attribute name="readonly" for="managePOLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="addSelectedPOLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="cancelManagePOLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="$purchaseOrderLineSet" expr="eval:false"/>
    <attribute name="value" for="$purchaseOrderLineSet" expr="eval:null"/>
    <attribute name="title" for="$purchaseOrderLineSet"
      expr="eval:com.axelor.i18n.I18n.get('Select lines to add')"/>
    <attribute name="domain" for="$purchaseOrderLineSet"
      expr="eval:&quot;self.purchaseOrder.statusSelect in (3,4)  AND self.project is null&quot;"/>
  </action-attrs>

  <action-attrs name="action-project-attrs-purchase-order-line-manage-lines">
    <attribute name="readonly" for="selectNewPOLinesBtn" expr="eval:true"/>
    <attribute name="readonly" for="managePOLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="unlinkSelectedPOLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="cancelManagePOLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="$purchaseOrderLineSet" expr="eval:false"/>
    <attribute name="value" for="$purchaseOrderLineSet" expr="eval:null"/>
    <attribute name="title" for="$purchaseOrderLineSet"
      expr="eval:com.axelor.i18n.I18n.get('Select lines to unlink')"/>
    <attribute name="domain" for="$purchaseOrderLineSet"
      expr="eval:&quot;self.purchaseOrder.statusSelect in (3,4) AND self.project.id = :id&quot;"
      if="!isShowPhasesElements"/>
    <attribute name="domain" for="$purchaseOrderLineSet"
      expr="eval:&quot;self.purchaseOrder.statusSelect in (3,4) AND (self.project.id = :id OR self.project.parentProject.id = :id)&quot;"
      if="isShowPhasesElements"/>
  </action-attrs>

  <action-attrs name="action-project-attrs-purchase-order-line-cancel-manage-lines">
    <attribute name="readonly" for="selectNewPOLinesBtn" expr="eval:false"/>
    <attribute name="readonly" for="managePOLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="addSelectedPOLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="unlinkSelectedPOLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="cancelManagePOLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="$purchaseOrderLineSet" expr="eval:true"/>
  </action-attrs>

  <!-- Expense -->

  <action-view name="action-project-dashlet-expense-waiting" title="Waiting expenses"
    model="com.axelor.apps.hr.db.Expense">
    <view type="grid" name="expense-grid"/>
    <view type="form" name="expense-form"/>
    <view-param name="popup" value="true"/>
    <domain>(self.kilometricExpenseLineList.project.id in (:_projectIds) or
      self.generalExpenseLineList.project.id in (:_projectIds)) AND self.statusSelect &lt; 3</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-dashlet-expense-validated"
    title="Validated expenses" model="com.axelor.apps.hr.db.Expense">
    <view type="grid" name="expense-grid"/>
    <view type="form" name="expense-form"/>
    <view-param name="popup" value="true"/>
    <domain>(self.kilometricExpenseLineList.project.id in (:_projectIds) or
      self.generalExpenseLineList.project.id in (:_projectIds)) AND self.statusSelect in (3,4)</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-view-show-expense-lines" title="Expense lines"
    model="com.axelor.apps.hr.db.ExpenseLine">
    <view type="grid" name="expense-line-project-grid"/>
    <view type="form" name="expense-line-project-form"/>
    <domain>self.project.id in (:_projectIds)</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-view-show-validated-expense-lines"
    title="Expense lines" model="com.axelor.apps.hr.db.ExpenseLine">
    <view type="grid" name="expense-line-project-grid"/>
    <view type="form" name="expense-line-project-form"/>
    <view-param name="popup" value="true"/>
    <domain>self.expense.statusSelect in (3,4) AND self.project.id in (:_projectIds)</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-attrs name="action-project-attrs-expense-line-select-lines">
    <attribute name="readonly" for="selectNewExpenseLinesBtn" expr="eval:true"/>
    <attribute name="readonly" for="manageExpenseLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="addSelectedExpenseLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="cancelManageExpenseLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="$expenseLineSet" expr="eval:false"/>
    <attribute name="value" for="$expenseLineSet" expr="eval:null"/>
    <attribute name="title" for="$expenseLineSet"
      expr="eval:com.axelor.i18n.I18n.get('Select lines to add')"/>
    <attribute name="domain" for="$expenseLineSet"
      expr="eval:&quot;self.expense.statusSelect in (3,4)  AND self.project is null&quot;"/>
  </action-attrs>

  <action-attrs name="action-project-attrs-expense-line-manage-lines">
    <attribute name="readonly" for="selectNewExpenseLinesBtn" expr="eval:true"/>
    <attribute name="readonly" for="manageExpenseLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="unlinkSelectedExpenseLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="cancelManageExpenseLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="$expenseLineSet" expr="eval:false"/>
    <attribute name="value" for="$expenseLineSet" expr="eval:false"/>
    <attribute name="title" for="$expenseLineSet"
      expr="eval:com.axelor.i18n.I18n.get('Select lines to unlink')"/>
    <attribute name="domain" for="$expenseLineSet"
      expr="eval:&quot;self.expense.statusSelect in (3,4) AND self.project.id = :id&quot;"
      if="!isShowPhasesElements"/>
    <attribute name="domain" for="$expenseLineSet"
      expr="eval:&quot;self.expense.statusSelect in (3,4) AND (self.project.id = :id OR self.project.parentProject.id = :id)&quot;"
      if="isShowPhasesElements"/>
  </action-attrs>

  <action-attrs name="action-project-attrs-expense-line-cancel-manage-lines">
    <attribute name="readonly" for="selectNewExpenseLinesBtn" expr="eval:false"/>
    <attribute name="readonly" for="manageExpenseLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="unlinkSelectedExpenseLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="addSelectedExpenseLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="cancelManageExpenseLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="$expenseLineSet" expr="eval:true"/>
  </action-attrs>

  <!-- Invoice -->

  <action-view name="action-dashlet-project-show-all-invoicing-project"
    title="Invoicing projects" model="com.axelor.apps.businessproject.db.InvoicingProject">
    <view type="grid" name="invoicing-project-grid"/>
    <view type="form" name="invoicing-project-form"/>
    <view-param name="popup" value="true"/>
    <domain>self.project.id in (:_projectIds)</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-dashlet-customer-invoices" title="Customer invoices"
    model="com.axelor.apps.account.db.Invoice">
    <view type="grid" name="invoice-grid"/>
    <view type="form" name="invoice-form"/>
    <view-param name="popup" value="true"/>
    <domain>self.invoiceLineList.project.id in (:_projectIds) AND self.operationTypeSelect = 3 AND
      self.operationSubTypeSelect != 2</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-view-show-sale-invoice-lines"
    title="Customer invoice lines" model="com.axelor.apps.account.db.InvoiceLine">
    <view type="grid" name="invoice-line-project-grid"/>
    <view type="form" name="invoice-line-form"/>
    <view-param name="popup" value="true"/>
    <domain>self.invoice.operationTypeSelect = 3 AND self.project.id in (:_projectIds) AND
      self.invoice.statusSelect = 3 AND self.invoice.operationSubTypeSelect != 2</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
    <context name="$isReadOnly" expr="true"/>
  </action-view>

  <action-view name="action-project-dashlet-supplier-invoices" title="Supplier invoices"
    model="com.axelor.apps.account.db.Invoice">
    <view type="grid" name="invoice-supplier-grid"/>
    <view type="form" name="invoice-form"/>
    <view-param name="popup" value="true"/>
    <domain>self.invoiceLineList.project.id in (:_projectIds) AND self.operationTypeSelect = 1 AND
      self.operationSubTypeSelect != 2</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-view-show-purchase-invoice-lines"
    title="Supplier invoice lines" model="com.axelor.apps.account.db.InvoiceLine">
    <view type="grid" name="invoice-line-project-grid"/>
    <view type="form" name="invoice-line-form"/>
    <view-param name="popup" value="true"/>
    <domain>self.invoice.operationTypeSelect = 1 AND self.project.id in (:_projectIds) AND
      self.invoice.statusSelect = 3 AND self.invoice.operationSubTypeSelect != 2</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
    <context name="$isReadOnly" expr="true"/>
  </action-view>

  <action-view name="action-project-dashlet-advance-payment-invoices"
    title="Advance payment invoices" model="com.axelor.apps.account.db.Invoice">
    <view type="grid" name="invoice-grid"/>
    <view type="form" name="invoice-form"/>
    <view-param name="popup" value="true"/>
    <domain>self.invoiceLineList.project.id in (:_projectIds) AND self.operationSubTypeSelect = 2</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>

  <action-view name="action-project-dashlet-contract-invoices" title="Invoices"
    model="com.axelor.apps.account.db.Invoice">
    <view type="grid" name="invoice-grid"/>
    <view type="form" name="invoice-form"/>
    <domain>:_id IN self.contractSet.project.id</domain>
  </action-view>

  <action-attrs name="action-project-attrs-customer-invoice-line-select-lines">
    <attribute name="readonly" for="selectNewCustomerInvoiceLinesBtn" expr="eval:true"/>
    <attribute name="readonly" for="manageCustomerInvoiceLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="addSelectedCustomerInvoiceLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="cancelManageCustomerInvoiceLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="$customerInvoiceLineSet" expr="eval:false"/>
    <attribute name="value" for="$customerInvoiceLineSet" expr="eval:null"/>
    <attribute name="title" for="$customerInvoiceLineSet"
      expr="eval:com.axelor.i18n.I18n.get('Select lines to add')"/>
    <attribute name="domain" for="$customerInvoiceLineSet"
      expr="eval:&quot;self.invoice.operationTypeSelect = 3 AND self.invoice.partner = :clientPartner AND self.project is null AND self.invoice.statusSelect = 3  AND self.invoice.operationSubTypeSelect != 2&quot;"/>
  </action-attrs>

  <action-attrs name="action-project-attrs-customer-invoice-line-manage-lines">
    <attribute name="readonly" for="selectNewCustomerInvoiceLinesBtn" expr="eval:true"/>
    <attribute name="readonly" for="manageCustomerInvoiceLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="unlinkSelectedCustomerInvoiceLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="cancelManageCustomerInvoiceLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="$customerInvoiceLineSet" expr="eval:false"/>
    <attribute name="value" for="$customerInvoiceLineSet" expr="eval:null"/>
    <attribute name="title" for="$customerInvoiceLineSet"
      expr="eval:com.axelor.i18n.I18n.get('Select lines to unlink')"/>
    <attribute name="domain" for="$customerInvoiceLineSet"
      expr="eval:&quot;self.invoice.operationTypeSelect = 3 AND self.project.id = :id AND self.invoice.statusSelect = 3  AND self.invoice.operationSubTypeSelect != 2&quot;"
      if="!isShowPhasesElements"/>
    <attribute name="domain" for="$customerInvoiceLineSet"
      expr="eval:&quot;self.invoice.operationTypeSelect = 3 AND (self.project.id = :id OR self.project.parentProject.id = :id) AND self.invoice.statusSelect = 3  AND self.invoice.operationSubTypeSelect != 2&quot;"
      if="isShowPhasesElements"/>
  </action-attrs>

  <action-attrs name="action-project-attrs-customer-invoice-line-cancel-manage-lines">
    <attribute name="readonly" for="selectNewCustomerInvoiceLinesBtn" expr="eval:false"/>
    <attribute name="readonly" for="manageCustomerInvoiceLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="unlinkSelectedCustomerInvoiceLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="addSelectedCustomerInvoiceLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="cancelManageCustomerInvoiceLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="$customerInvoiceLineSet" expr="eval:true"/>
  </action-attrs>

  <action-attrs name="action-project-attrs-supplier-invoice-line-select-lines">
    <attribute name="readonly" for="selectNewSupplierInvoiceLinesBtn" expr="eval:true"/>
    <attribute name="readonly" for="manageSupplierInvoiceLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="addSelectedSupplierInvoiceLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="cancelManageSupplierInvoiceLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="$supplierInvoiceLineSet" expr="eval:false"/>
    <attribute name="value" for="$supplierInvoiceLineSet" expr="eval:null"/>
    <attribute name="title" for="$supplierInvoiceLineSet"
      expr="eval:com.axelor.i18n.I18n.get('Select lines to add')"/>
    <attribute name="domain" for="$supplierInvoiceLineSet"
      expr="eval:&quot;self.invoice.operationTypeSelect = 1 AND self.project is null AND self.invoice.statusSelect = 3  AND self.invoice.operationSubTypeSelect != 2&quot;"/>
  </action-attrs>

  <action-attrs name="action-project-attrs-supplier-invoice-line-manage-lines">
    <attribute name="readonly" for="selectNewSupplierInvoiceLinesBtn" expr="eval:true"/>
    <attribute name="readonly" for="manageSupplierInvoiceLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="unlinkSelectedSupplierInvoiceLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="cancelManageSupplierInvoiceLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="$supplierInvoiceLineSet" expr="eval:false"/>
    <attribute name="value" for="$supplierInvoiceLineSet" expr="eval:null"/>
    <attribute name="title" for="$supplierInvoiceLineSet"
      expr="eval:com.axelor.i18n.I18n.get('Select lines to unlink')"/>
    <attribute name="domain" for="$supplierInvoiceLineSet"
      expr="eval:&quot;self.invoice.operationTypeSelect = 1 AND self.project.id = :id AND self.invoice.statusSelect = 3  AND self.invoice.operationSubTypeSelect != 2&quot;"
      if="!isShowPhasesElements"/>
    <attribute name="domain" for="$supplierInvoiceLineSet"
      expr="eval:&quot;self.invoice.operationTypeSelect = 1 AND (self.project.id = :id OR self.project.parentProject.id = :id) AND self.invoice.statusSelect = 3  AND self.invoice.operationSubTypeSelect != 2&quot;"
      if="isShowPhasesElements"/>
  </action-attrs>

  <action-attrs name="action-project-attrs-supplier-invoice-line-cancel-manage-lines">
    <attribute name="readonly" for="selectNewSupplierInvoiceLinesBtn" expr="eval:false"/>
    <attribute name="readonly" for="manageSupplierInvoiceLinesBtn" expr="eval:false"/>
    <attribute name="hidden" for="addSelectedSupplierInvoiceLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="unlinkSelectedSupplierInvoiceLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="cancelManageSupplierInvoiceLinesBtn" expr="eval:true"/>
    <attribute name="hidden" for="$supplierInvoiceLineSet" expr="eval:true"/>
  </action-attrs>


  <!-- Production -->

  <action-view name="action-project-view-show-production-orders"
    title="Production orders" model="com.axelor.apps.production.db.ProductionOrder">
    <view type="grid" name="production-order-grid"/>
    <view type="form" name="production-order-form"/>
    <domain>self.project.id in (:_projectIds)</domain>
    <context if="id == null" name="_projectIds" expr="eval:[0]"/>
    <context if="id != null &amp;&amp; !isShowPhasesElements" name="_projectIds"
      expr="eval:[id]"/>
    <context if="id != null &amp;&amp; isShowPhasesElements" name="_projectIds"
      expr="eval:[id] + childProjectList.collect{it->it.id}"/>
  </action-view>


  <action-method name="action-project-method-count-to-invoice">
    <call class="com.axelor.apps.businessproject.web.ProjectController" method="countToInvoice"/>
  </action-method>

  <action-method name="action-project-view-show-invoicing-projects">
    <call class="com.axelor.apps.businessproject.web.ProjectController"
      method="showInvoicingProjects"/>
  </action-method>

  <action-attrs name="action-project-attrs-set-time-unit-domain">
    <attribute name="domain" for="projectTimeUnit"
      expr="eval: &quot; self.id = ${__config__.app.getApp('business-project')?.daysUnit?.id} OR self.id = ${__config__.app.getApp('business-project')?.hoursUnit?.id}&quot;"/>
  </action-attrs>

  <action-method name="action-project-method-compute-project-totals">
    <call class="com.axelor.apps.businessproject.web.ProjectController"
      method="computeProjectTotals"/>
  </action-method>

  <action-method name="action-business-project-view-show-related-tasks">
    <call class="com.axelor.apps.businessproject.web.ProjectMenuController"
      method="allProjectRelatedTasks"/>
  </action-method>

  <action-group name="action-business-project-group-finish-project">
    <action name="action-business-project-method-check-project-state"
      if="__config__.app.isApp('business-project')"/>
    <action name="action-project-group-finish-project"/>
  </action-group>

  <action-group name="action-business-project-group-project-status-on-change">
    <action name="action-business-project-method-check-project-state"
      if="__config__.app.isApp('business-project') &amp;&amp; projectStatus.id == __config__.app.getApp('project')?.completedProjectStatus.id"/>
    <action name="action-project-group-finish-project"
      if="__config__.app.isApp('business-project') &amp;&amp; projectStatus.id == __config__.app.getApp('project')?.completedProjectStatus.id"/>
  </action-group>

  <action-method name="action-business-project-method-check-project-state">
    <call class="com.axelor.apps.businessproject.web.ProjectController"
      method="checkProjectState"/>
  </action-method>

  <action-attrs name="action-project-attrs-set-default-customer-contract-domain">
    <attribute for="defaultFrameworkCustomerContract" name="domain"
      expr="eval: &quot;self.id IN (${frameworkCustomerContractSet?.collect{it.id}.join(',')})&quot;"/>
  </action-attrs>

  <action-attrs name="action-project-attrs-set-default-supplier-contract-domain">
    <attribute for="defaultFrameworkSupplierContract" name="domain"
      expr="eval: &quot;self.id IN (${frameworkSupplierContractSet?.collect{it.id}.join(',')})&quot;"/>
  </action-attrs>

  <!-- Analytic -->
  <!-- Action group -->
  <action-group name="action-business-project-group-assigned-to-onchange">
    <action name="action-attrs-project-add-member"/>
    <action name="action-business-project-method-get-analytic-distribution-template"/>
  </action-group>

  <!-- Action method -->
  <action-method
    name="action-business-project-method-set-analytic-distribution-template-required">
    <call class="com.axelor.apps.businessproject.web.ProjectController"
      method="setAnalyticDistributionTemplateRequired"/>
  </action-method>

  <action-method
    name="action-business-project-method-get-analytic-distribution-template">
    <call class="com.axelor.apps.businessproject.web.ProjectController"
      method="getAnalyticDistributionTemplate"/>
  </action-method>

</object-views>
