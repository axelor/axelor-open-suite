<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_7.4.xsd">

  <form id="business-project-invoice-form" name="invoice-form" title="Invoice"
    model="com.axelor.apps.account.db.Invoice" extension="true">

    <extend target="//panel[@name='deliveryPanel']">
      <insert position="after">
        <panel name="projectPanel"
          if="__config__.app.isApp('business-project') &amp;&amp; __config__.app.getApp('business-project').getGenerateProjectOrder()"
          title="Business project" colSpan="12" if-module="axelor-business-project">
          <field name="project" onSelect="action-invoice-attrs-domain-project"
            form-view="business-project-form" grid-view="project-grid" colSpan="6"/>
          <button name="updateLinesBtn" title="Update lines with selected project"
            onClick="save,action-invoice-business-project-method-update-lines,save" colSpan="6"
            readonlyIf="!project"/>
        </panel>
      </insert>
    </extend>

    <extend target="//field[@name='specificNotes']">
      <insert position="after">
        <field name="displayTimesheetOnPrinting" if-module="axelor-business-project"
          hidden="true"/>
        <field name="displayExpenseOnPrinting" if-module="axelor-business-project"
          hidden="true"/>
        <field name="isExpenseLineOnInvoiceGrouped" if-module="axelor-business-project"
          if="__config__.app.getApp('business-project')?.getEnableToInvoiceExpense()"
          showIf="displayExpenseOnPrinting"/>
        <field name="groupingPeriodSelect" if-module="axelor-business-project"
          if="__config__.app.getApp('business-project')?.getEnableToInvoiceExpense()"
          showIf="isExpenseLineOnInvoiceGrouped &amp;&amp; displayExpenseOnPrinting"/>
      </insert>
    </extend>
  </form>

  <form id="business-project-invoice-client-form" name="invoice-client-form" title="Invoice"
    model="com.axelor.apps.account.db.Invoice" extension="true">

    <extend target="//button[@name='printBtn']">
      <insert position="after">
        <button name="showAnnexBtn" title="Print annex" icon="fa-print"
          onClick="action-business-project-group-print-annex" if-module="axelor-business-project"
          showIf="partner != null &amp;&amp; (displayTimesheetOnPrinting || displayExpenseOnPrinting)"/>
      </insert>
    </extend>

    <extend target="//field[@name='currency']">
      <insert position="after">
        <field name="project" if-module="axelor-business-project"
          onSelect="action-invoice-attrs-domain-project" form-view="business-project-form"
          grid-view="project-grid" if="__config__.app.isApp('project')"/>
      </insert>
    </extend>
  </form>

  <action-group name="action-business-project-group-print-annex">
    <action name="action-business-project-validate-printing-settings"/>
    <action name="action-invoice-business-project-method-print-annex"
      if="!__user__.activeCompany ||  __user__.activeCompany?.accountConfig?.displayTimesheetOnPrinting || __user__.activeCompany?.accountConfig?.displayExpenseOnPrinting"/>
  </action-group>

  <action-method name="action-invoice-business-project-method-print-annex">
    <call class="com.axelor.apps.businessproject.web.InvoiceController" method="exportAnnex"/>
  </action-method>

  <action-method name="action-invoice-business-project-method-update-lines">
    <call class="com.axelor.apps.businessproject.web.InvoiceController" method="updateLines"/>
  </action-method>

  <action-record name="action-invoice-record-printing-fields"
    model="com.axelor.apps.account.db.Invoice">
    <field name="displayTimesheetOnPrinting"
      expr="eval: __user__.activeCompany?.accountConfig?.displayTimesheetOnPrinting"/>
    <field name="displayExpenseOnPrinting"
      expr="eval: __user__.activeCompany?.accountConfig?.displayExpenseOnPrinting"/>
  </action-record>

  <action-validate name="action-business-project-validate-printing-settings">
    <error message="Please fill printing settings on invoice ${invoiceId}."
      if="!printingSettings"/>
  </action-validate>

  <action-group name="action-invoice-wizard-group-print"
    id="business-project-action-invoice-wizard-group-print">
    <action name="action-invoice-group-report-print"/>
    <action name="action-invoice-method-print-expenses"
      if="__config__.app.isApp('business-project')"/>
    <action name="close"/>
  </action-group>

  <action-method name="action-invoice-method-print-expenses">
    <call class="com.axelor.apps.businessproject.web.InvoiceController" method="printExpenses"/>
  </action-method>

  <action-group id="business-project-action-account-invoice-onnew-group"
    name="action-account-invoice-onnew-group">
    <action name="action-invoice-record-default"/>
    <action name="action-invoice-method-payment-mode-condition" if="company != null"/>
    <action name="action-invoice-method-fill-company-bank-details"/>
    <action name="action-invoice-attrs-collapse-irrecoverable-group"/>
    <action name="action-invoice-record-in-ati"/>
    <action name="action-invoice-attrs-in-ati"/>
    <action name="action-invoice-method-fill-advance-payment-set"/>
    <action name="action-invoice-attrs-show-validate-button"/>
    <action name="action-invoice-attrs-interco-supplychain"/>
    <action name="action-invoice-record-interco-supplychain"/>
    <action name="action-invoice-method-manage-refund-titles"/>
    <action name="action-invoice-record-printing-fields"
      if="__config__.app.isApp('business-project')"/>
    <action name="action-invoice-record-set-dummy-field-localization"/>
    <action name="action-invoice-method-set-default-group-products-on-printings"/>
    <action name="action-invoice-record-set-display-stock-move-on-invoice-printing"
      if="__config__.app.isApp('supplychain')"/>
    <action name="action-invoice-method-set-payment-visibility"/>
    <action name="action-invoice-attrs-selection-in-operation-type-select"/>
    <action name="action-invoice-record-set-pfp-status"
      if="__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <action name="action-invoice-attrs-set-hidden-analytic-accounting-panel"/>
    <action name="action-invoice-attrs-operationsubtype-selection"/>
    <action name="action-record-invoice-set-discount-values"
      if="__config__.app.getApp('account').getManageFinancialDiscount()"/>
    <action name="action-invoice-attrs-display-line-coefficient"/>
  </action-group>



  <action-attrs name="action-invoice-attrs-printing-fields"
    if-module="axelor-business-project">
    <attribute name="hidden" for="displayTimesheetOnPrinting"
      if="__config__.app.isApp('business-project')"
      expr="eval: __repo__(InvoicingProject).all().filter('self.invoice.id = :id').bind('id',id).fetch().isEmpty() &amp;&amp; !__user__.activeCompany?.accountConfig?.displayTimesheetOnPrinting"/>
    <attribute name="value" for="displayTimesheetOnPrinting"
      if="__config__.app.isApp('business-project') &amp;&amp; __repo__(InvoicingProject).all().filter('self.invoice.id = :id').bind('id',id).fetch().isEmpty() &amp;&amp; !__user__.activeCompany?.accountConfig?.displayTimesheetOnPrinting"
      expr="eval: false"/>
    <attribute name="hidden" for="displayExpenseOnPrinting"
      if="__config__.app.isApp('business-project')"
      expr="eval: __repo__(InvoicingProject).all().filter('self.invoice.id = :id').bind('id',id).fetch().isEmpty() &amp;&amp; !__user__.activeCompany?.accountConfig?.displayExpenseOnPrinting"/>
    <attribute name="value" for="displayExpenseOnPrinting"
      if="__config__.app.isApp('business-project') &amp;&amp; __repo__(InvoicingProject).all().filter('self.invoice.id = :id').bind('id',id).fetch().isEmpty() &amp;&amp; !__user__.activeCompany?.accountConfig?.displayExpenseOnPrinting"
      expr="eval: false"/>
  </action-attrs>

  <action-attrs name="action-invoice-attrs-domain-project">
    <attribute name="domain" for="project"
      expr="eval: &quot; self.clientPartner.id = ${partner?.id} AND self.isBusinessProject = true &quot;"
      if="operationTypeSelect == 3 || operationTypeSelect == 4"/>
    <attribute name="domain" for="project"
      expr="eval: &quot; self.isBusinessProject = true &quot;"
      if="operationTypeSelect == 1 || operationTypeSelect == 2"/>
  </action-attrs>

  <action-record id="business-project-action-invoice-record-partner-change"
    name="action-invoice-record-partner-change" model="com.axelor.apps.account.db.Invoice">
    <field name="fiscalPosition" expr="eval: partner?.fiscalPosition"/>
    <field name="address"
      expr="call:com.axelor.apps.base.service.PartnerService:getInvoicingAddress(partner)"/>
    <field name="currency" expr="eval: partner?.currency"
      if="eval: (!invoiceLineList || invoiceLineList?.empty) &amp;&amp; partner"/>
    <field name="contactPartner"
      expr="eval: partner?.contactPartnerSet?.size() == 1 ? partner?.contactPartnerSet[0] : null"/>
    <field name="invoicesCopySelect"
      expr="eval: partner?.invoicesCopySelect != 0 ? partner?.invoicesCopySelect :1"/>
    <field name="project" expr="eval: null"/>
    <field name="purchaseOrder" expr="eval: null"/>
    <field name="partnerTaxNbr" expr="eval: partner?.taxNbr"/>
    <field name="proformaComments" expr="eval: partner?.proformaComments"/>
    <field name="headOfficeAddress" expr="eval: partner?.headOfficeAddress"/>
  </action-record>

  <search-filters id="business-project-customer-invoices-filters"
    name="customer-invoices-filters" model="com.axelor.apps.account.db.Invoice"
    title="Customer invoices filters">
    <field name="company" hidden="true"
      if="!__config__.app.getApp('base')?.getEnableMultiCompany()"/>
    <field name="tradingName" hidden="true"
      if="!__config__.app.getApp('base')?.enableTradingNamesManagement"/>
    <field name="pfpValidateStatusSelect" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="pfpValidatorUser" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="project" hidden="true"
      if="!(__config__.app.isApp('business-project') &amp;&amp; __config__.app.getApp('business-project').getGenerateProjectOrder())"/>
    <field name="decisionPfpTakenDateTime" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="company.accountConfig" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="company.accountConfig.isManagePassedForPayment" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="advancePaymentInvoiceSet" hidden="true"
      if="!__config__.app.getApp('account')?.getManageAdvancePaymentInvoice()"/>
    <field name="stockMoveSet" hidden="true"
      if="!(__config__.app.isApp('supplychain') &amp;&amp; __config__.app.getApp('supplychain')?.getGenerateInvoiceFromStockMove())"/>
    <field name="reasonOfRefusalToPay" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="company.accountConfig.isManagePFPInRefund" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="interco" hidden="true" if="!__config__.app.isApp('supplychain')"/>
    <field name="createdByInterco" hidden="true" if="!__config__.app.isApp('supplychain')"/>
    <field name="partnerTaxNbr" hidden="true" if="!__config__.app.isApp('supplychain')"/>
    <field name="estimatedPaymentDate" hidden="true"
      if="!__config__.app.isApp('cash-management')"/>
    <field name="address" hidden="true"/>
    <field name="debitBlockingByUser" title="Debit blocking done by"/>
    <field name="debtRecoveryBlockingByUser" title="Debt recovery blocking done by"/>
    <field name="debitBlockingReason" title="Debit blocking reason"/>
    <field name="debtRecoveryBlockingReason" title="Debt recovery blocking reason"/>
    <field name="debitBlockingToDate" title="Debit blocking until"/>
    <field name="debtRecoveryBlockingToDate" title="Debt recovery blocking until"/>
    <field name="companyExTaxTotal" title="Total W.T. in company currency"/>
    <field name="companyTaxTotal" title="Total tax in company currency"/>
    <field name="companyInTaxTotal" title="Total A.T.I. in company currency"/>
    <filter name="customer-invoices-filters-validated" title="Validated">
      <domain>self.statusSelect = 2</domain>
    </filter>
    <filter name="customer-invoices-filters-ventilated" title="Ventilated">
      <domain>self.statusSelect = 3</domain>
    </filter>
    <filter name="customer-invoices-filters-unpaid" title="Unpaid">
      <domain>self.companyInTaxTotalRemaining &gt; 0</domain>
    </filter>
    <filter name="customer-invoices-filters-unpaid-due" title="Unpaid Due">
      <domain>CURRENT_DATE &gt; self.dueDate and self.companyInTaxTotalRemaining &gt; 0</domain>
    </filter>
    <filter name="customer-invoices-filters-with-payment-rejected"
      title="With Payment Rejected">
      <domain>self.rejectMoveLine IS NOT NULL</domain>
    </filter>
    <filter name="customer-invoices-filters-b2b" title="B2B">
      <domain>self.partner.partnerTypeSelect = 1</domain>
    </filter>
    <filter name="customer-invoices-filters-b2c" title="B2C">
      <domain>self.partner.partnerTypeSelect = 2</domain>
    </filter>
  </search-filters>

  <search-filters id="business-project-customer-refunds-filters"
    name="customer-refunds-filters" model="com.axelor.apps.account.db.Invoice"
    title="Customer refunds filters">
    <field name="company" hidden="true"
      if="!__config__.app.getApp('base')?.getEnableMultiCompany()"/>
    <field name="tradingName" hidden="true"
      if="!__config__.app.getApp('base')?.enableTradingNamesManagement"/>
    <field name="pfpValidateStatusSelect" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="pfpValidatorUser" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="project" hidden="true"
      if="!(__config__.app.isApp('business-project') &amp;&amp; __config__.app.getApp('business-project').getGenerateProjectOrder())"/>
    <field name="decisionPfpTakenDateTime" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="company.accountConfig" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="company.accountConfig.isManagePassedForPayment" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="advancePaymentInvoiceSet" hidden="true"
      if="!__config__.app.getApp('account')?.getManageAdvancePaymentInvoice()"/>
    <field name="stockMoveSet" hidden="true"
      if="!(__config__.app.isApp('supplychain') &amp;&amp; __config__.app.getApp('supplychain')?.getGenerateInvoiceFromStockMove())"/>
    <field name="reasonOfRefusalToPay" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="company.accountConfig.isManagePFPInRefund" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="interco" hidden="true" if="!__config__.app.isApp('supplychain')"/>
    <field name="createdByInterco" hidden="true" if="!__config__.app.isApp('supplychain')"/>
    <field name="partnerTaxNbr" hidden="true" if="!__config__.app.isApp('supplychain')"/>
    <field name="estimatedPaymentDate" hidden="true"
      if="!__config__.app.isApp('cash-management')"/>
    <field name="address" hidden="true"/>
    <field name="debitBlockingByUser" title="Debit blocking done by"/>
    <field name="debtRecoveryBlockingByUser" title="Debt recovery blocking done by"/>
    <field name="debitBlockingReason" title="Debit blocking reason"/>
    <field name="debtRecoveryBlockingReason" title="Debt recovery blocking reason"/>
    <field name="debitBlockingToDate" title="Debit blocking until"/>
    <field name="debtRecoveryBlockingToDate" title="Debt recovery blocking until"/>
    <field name="companyExTaxTotal" title="Total W.T. in company currency"/>
    <field name="companyTaxTotal" title="Total tax in company currency"/>
    <field name="companyInTaxTotal" title="Total A.T.I. in company currency"/>
    <filter name="customer-refunds-filters-validated" title="Validated">
      <domain>self.statusSelect = 2</domain>
    </filter>
    <filter name="customer-refunds-filters-ventilated" title="Ventilated">
      <domain>self.statusSelect = 3</domain>
    </filter>
    <filter name="customer-refunds-filters-unpaid" title="Unpaid">
      <domain>self.companyInTaxTotalRemaining &gt; 0</domain>
    </filter>
    <filter name="customer-refunds-filters-unpaid-due" title="Unpaid Due">
      <domain>CURRENT_DATE &gt; self.dueDate and self.companyInTaxTotalRemaining &gt; 0</domain>
    </filter>
  </search-filters>

  <search-filters id="business-project-supplier-invoices-filters"
    name="supplier-invoices-filters" model="com.axelor.apps.account.db.Invoice"
    title="Supplier invoices filters">
    <field name="company" hidden="true"
      if="!__config__.app.getApp('base')?.getEnableMultiCompany()"/>
    <field name="tradingName" hidden="true"
      if="!__config__.app.getApp('base')?.enableTradingNamesManagement"/>
    <field name="pfpValidateStatusSelect" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="pfpValidatorUser" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="project" hidden="true"
      if="!(__config__.app.isApp('business-project') &amp;&amp; __config__.app.getApp('business-project').getGenerateProjectOrder())"/>
    <field name="decisionPfpTakenDateTime" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="company.accountConfig" hidden="true"
      if="__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="company.accountConfig.isManagePassedForPayment" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="advancePaymentInvoiceSet" hidden="true"
      if="!__config__.app.getApp('account')?.getManageAdvancePaymentInvoice()"/>
    <field name="stockMoveSet" hidden="true"
      if="!(__config__.app.isApp('supplychain') &amp;&amp; __config__.app.getApp('supplychain')?.getGenerateInvoiceFromStockMove())"/>
    <field name="reasonOfRefusalToPay" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="company.accountConfig.isManagePFPInRefund" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="interco" hidden="true" if="!__config__.app.isApp('supplychain')"/>
    <field name="createdByInterco" hidden="true" if="!__config__.app.isApp('supplychain')"/>
    <field name="partnerTaxNbr" hidden="true" if="!__config__.app.isApp('supplychain')"/>
    <field name="estimatedPaymentDate" hidden="true"
      if="!__config__.app.isApp('cash-management')"/>
    <field name="address" hidden="true"/>
    <field name="debitBlockingByUser" title="Debit blocking done by"/>
    <field name="debtRecoveryBlockingByUser" title="Debt recovery blocking done by"/>
    <field name="debitBlockingReason" title="Debit blocking reason"/>
    <field name="debtRecoveryBlockingReason" title="Debt recovery blocking reason"/>
    <field name="debitBlockingToDate" title="Debit blocking until"/>
    <field name="debtRecoveryBlockingToDate" title="Debt recovery blocking until"/>
    <field name="companyExTaxTotal" title="Total W.T. in company currency"/>
    <field name="companyTaxTotal" title="Total tax in company currency"/>
    <field name="companyInTaxTotal" title="Total A.T.I. in company currency"/>
    <filter name="supplier-invoices-filters-draft" title="Draft">
      <domain>self.statusSelect = 1</domain>
    </filter>
    <filter name="supplier-invoices-filters-validated" title="Validated">
      <domain>self.statusSelect = 2</domain>
    </filter>
    <filter name="supplier-invoices-filters-ventilated" title="Ventilated">
      <domain>self.statusSelect = 3</domain>
    </filter>
    <filter name="supplier-invoices-filters-unpaid" title="Unpaid">
      <domain>self.companyInTaxTotalRemaining &gt; 0</domain>
    </filter>
    <filter name="supplier-invoices-filters-unpaid-due" title="Unpaid Due">
      <domain>CURRENT_DATE &gt; self.dueDate and self.companyInTaxTotalRemaining &gt; 0</domain>
    </filter>
  </search-filters>

  <search-filters id="business-project-supplier-refunds-filters"
    name="supplier-refunds-filters" model="com.axelor.apps.account.db.Invoice"
    title="Supplier credit notes filters">
    <field name="company" hidden="true"
      if="!__config__.app.getApp('base')?.getEnableMultiCompany()"/>
    <field name="tradingName" hidden="true"
      if="!__config__.app.getApp('base')?.enableTradingNamesManagement"/>
    <field name="pfpValidateStatusSelect" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="pfpValidatorUser" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="project" hidden="true"
      if="!(__config__.app.isApp('business-project') &amp;&amp; __config__.app.getApp('business-project').getGenerateProjectOrder())"/>
    <field name="decisionPfpTakenDateTime" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="company.accountConfig" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="company.accountConfig.isManagePassedForPayment" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="advancePaymentInvoiceSet" hidden="true"
      if="!__config__.app.getApp('account')?.getManageAdvancePaymentInvoice()"/>
    <field name="stockMoveSet" hidden="true"
      if="!(__config__.app.isApp('supplychain') &amp;&amp; __config__.app.getApp('supplychain')?.getGenerateInvoiceFromStockMove())"/>
    <field name="reasonOfRefusalToPay" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="company.accountConfig.isManagePFPInRefund" hidden="true"
      if="!__config__.app.getApp('account')?.getActivatePassedForPayment()"/>
    <field name="interco" hidden="true" if="!__config__.app.isApp('supplychain')"/>
    <field name="createdByInterco" hidden="true" if="!__config__.app.isApp('supplychain')"/>
    <field name="partnerTaxNbr" hidden="true" if="!__config__.app.isApp('supplychain')"/>
    <field name="estimatedPaymentDate" hidden="true"
      if="!__config__.app.isApp('cash-management')"/>
    <field name="address" hidden="true"/>
    <field name="debitBlockingByUser" title="Debit blocking done by"/>
    <field name="debtRecoveryBlockingByUser" title="Debt recovery blocking done by"/>
    <field name="debitBlockingReason" title="Debit blocking reason"/>
    <field name="debtRecoveryBlockingReason" title="Debt recovery blocking reason"/>
    <field name="debitBlockingToDate" title="Debit blocking until"/>
    <field name="debtRecoveryBlockingToDate" title="Debt recovery blocking until"/>
    <field name="companyExTaxTotal" title="Total W.T. in company currency"/>
    <field name="companyTaxTotal" title="Total tax in company currency"/>
    <field name="companyInTaxTotal" title="Total A.T.I. in company currency"/>
    <filter name="supplier-refunds-filters-draft" title="Draft">
      <domain>self.statusSelect = 1</domain>
    </filter>
    <filter name="supplier-refunds-filters-validated" title="Validated">
      <domain>self.statusSelect = 2</domain>
    </filter>
    <filter name="supplier-refunds-filters-ventilated" title="Ventilated">
      <domain>self.statusSelect = 3</domain>
    </filter>
    <filter name="supplier-refunds-filters-unpaid" title="Unpaid">
      <domain>self.companyInTaxTotalRemaining &gt; 0</domain>
    </filter>
    <filter name="supplier-refunds-filters-unpaid-due" title="Unpaid Due">
      <domain>CURRENT_DATE &gt; self.dueDate and self.companyInTaxTotalRemaining &gt; 0</domain>
    </filter>
  </search-filters>

</object-views>