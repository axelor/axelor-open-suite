<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_6.1.xsd">

  <input file="studio_appBusinessProject.csv" separator=";"
    type="com.axelor.studio.db.AppBusinessProject" search="self.app.code = :code" update="true">
    <bind to="preTaskStatusSet" column="preTaskStatusSetImportId"
      search="self.importId in :preTaskStatusSetImportId"
      eval="preTaskStatusSetImportId.split('\\|') as List"/>
    <bind to="postTaskStatusSet" column="postTaskStatusSetImportId"
      search="self.importId in :postTaskStatusSetImportId"
      eval="postTaskStatusSetImportId.split('\\|') as List"/>
  </input>
  <input file="account_accountConfig.csv" separator=";"
    type="com.axelor.apps.account.db.AccountConfig" search="self.importId = :importId" update="true"/>

  <input file="base_sequence.csv" separator=";" type="com.axelor.apps.base.db.Sequence"
    search="self.importId = :importId" call="com.axelor.csv.script.SequenceScript:computeFullname">
    <bind to="yearlyResetOk" column="yearlyResetOk" eval="yearlyResetOk == '1' ? true : false"/>
    <bind to="nextNum" column="nextNum" eval="nextNum?.empty ? '1' : nextNum"/>
    <bind to="padding" column="padding" eval="padding?.empty ? '1' : padding"/>
    <bind to="toBeAdded" column="toBeAdded" eval="toBeAdded?.empty ? '1' : toBeAdded"/>
    <bind to="resetDate"
      eval="call:com.axelor.apps.base.service.app.AppBaseService:getTodayDate(null)"/>
  </input>

  <input file="project_taskTemplate.csv" separator=";" search="self.importId = :importId"
    type="com.axelor.apps.project.db.TaskTemplate"/>

  <input file="base_product.csv" separator=";" search="self.importId = :importId"
    type="com.axelor.apps.base.db.Product">
    <bind to="taskTemplateSet" column="taskTemplateSet_importId"
      search="self.importId in :taskTemplateSet_importId"
      eval="taskTemplateSet_importId.split('\\|') as List"/>
  </input>

  <input file="sale_saleOrder.csv" separator=";" search="self.importId = :importId"
    type="com.axelor.apps.sale.db.SaleOrder">
    <bind to="creationDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(creationDate)"
      column="creationDate"/>
    <bind to="confirmationDateTime"
      eval="call:com.axelor.csv.script.ImportDateTime:importDateTime(confirmationDateTime)"
      column="confirmationDateTime"/>
    <bind to="shipmentDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(shipmentDate)"
      column="shipmentDate"/>
  </input>

  <input file="sale_saleOrderLine.csv" separator=";"
    type="com.axelor.apps.sale.db.SaleOrderLine" search="self.importId = :importId"
    call="com.axelor.csv.script.ImportSaleOrderLine:importSaleOrderLine">
    <bind to="priceDiscounted" eval="price"/>
  </input>

  <input file="sale_saleOrder.csv" separator=";" search="self.importId = :importId"
    type="com.axelor.apps.sale.db.SaleOrder"
    call="com.axelor.csv.script.ImportSaleOrder:importSaleOrder">
    <bind to="creationDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(creationDate)"
      column="creationDate"/>
    <bind to="confirmationDateTime"
      eval="call:com.axelor.csv.script.ImportDateTime:importDateTime(confirmationDateTime)"
      column="confirmationDateTime"/>
    <bind to="shipmentDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(shipmentDate)"
      column="shipmentDate"/>
  </input>

  <input file="sale_saleOrder.csv" separator=";" search="self.importId = :importId"
    type="com.axelor.apps.sale.db.SaleOrder"
    call="com.axelor.csv.script.FinalizeAndConfirmSaleOrder:finalizeAndConfirmSaleOrder">
    <bind to="creationDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(creationDate)"
      column="creationDate"/>
    <bind to="confirmationDateTime"
      eval="call:com.axelor.csv.script.ImportDateTime:importDateTime(confirmationDateTime)"
      column="confirmationDateTime"/>
    <bind to="shipmentDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(shipmentDate)"
      column="shipmentDate"/>
  </input>

  <input file="sale_saleOrder.csv" separator=";" search="self.importId = :importId"
    type="com.axelor.apps.sale.db.SaleOrder"
    call="com.axelor.csv.script.GenerateBusinessProject:generateBusinessProject">
    <bind to="creationDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(creationDate)"
      column="creationDate"/>
    <bind to="confirmationDateTime"
      eval="call:com.axelor.csv.script.ImportDateTime:importDateTime(confirmationDateTime)"
      column="confirmationDateTime"/>
    <bind to="shipmentDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(shipmentDate)"
      column="shipmentDate"/>
  </input>

  <input file="hr_timesheet.csv" type="com.axelor.apps.hr.db.Timesheet" separator=";"
    search="self.importId = :importId">
    <bind to="fromDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(fromDate)"
      column="fromDate"/>
    <bind to="toDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(toDate)"
      column="toDate"/>
  </input>

  <input file="hr_timesheetLine.csv" type="com.axelor.apps.hr.db.TimesheetLine" separator=";"
    search="self.importId = :importId">
    <bind to="employee" search="self.importId = :employee_importId"/>
    <bind to="date" eval="call:com.axelor.csv.script.ImportDateTime:importDate(date)"
      column="date"/>
    <bind to="duration" column="hoursDuration"/>
    <bind to="hoursDuration" column="hoursDuration"/>
    <bind to="projectTask" column="projectTask_importId"
      search="self.importId = :projectTask_importId" if="projectTask"/>
  </input>

  <input file="hr_timesheet.csv" type="com.axelor.apps.hr.db.Timesheet" separator=";"
    search="self.importId = :importId"
    call="com.axelor.csv.script.ValidateTimesheet:validateTimesheet">
    <bind to="fromDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(fromDate)"
      column="fromDate"/>
    <bind to="toDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(toDate)"
      column="toDate"/>
  </input>

  <input file="hr_projectPlanningTime.csv"
    type="com.axelor.apps.project.db.ProjectPlanningTime" separator=";"
    search="self.importId = :importId">
    <bind to="employee" search="self.importId = :employee_importId"/>
    <bind to="startDateTime"
      eval="call:com.axelor.csv.script.ImportDateTime:importDateTime(startDateTime)"
      column="startDateTime"/>
    <bind to="endDateTime"
      eval="call:com.axelor.csv.script.ImportDateTime:importDateTime(endDateTime)"
      column="endDateTime"/>
  </input>

  <input file="sale_saleOrder.csv" separator=";" search="self.importId = :importId"
    type="com.axelor.apps.sale.db.SaleOrder"
    call="com.axelor.csv.script.ComputeSaleOrderProjectTotals:computeSaleOrderProjectTotals">
    <bind to="creationDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(creationDate)"
      column="creationDate"/>
    <bind to="confirmationDateTime"
      eval="call:com.axelor.csv.script.ImportDateTime:importDateTime(confirmationDateTime)"
      column="confirmationDateTime"/>
    <bind to="shipmentDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(shipmentDate)"
      column="shipmentDate"/>
  </input>

  <input file="project_project.csv" type="com.axelor.apps.project.db.Project" separator=";"
    search="self.importId = :importId"/>
</csv-inputs>