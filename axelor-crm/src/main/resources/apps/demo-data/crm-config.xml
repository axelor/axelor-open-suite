<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_6.1.xsd">

  <input file="crm_crmBatch.csv" separator=";" type="com.axelor.apps.crm.db.CrmBatch"
    search="self.code = :code"/>


  <input file="base_sequence.csv" separator=";" type="com.axelor.apps.base.db.Sequence"
    search="self.importId = :importId" call="com.axelor.csv.script.ImportSequence:importSequence">
    <bind to="yearlyResetOk" column="yearlyResetOk" eval="yearlyResetOk == '1' ? true : false"
      if="yearlyResetOk"/>
    <bind to="nextNum" column="nextNum" eval="nextNum?.empty ? '1' : nextNum"/>
    <bind to="padding" column="padding" eval="padding?.empty ? '1' : padding"/>
    <bind to="toBeAdded" column="toBeAdded" eval="toBeAdded?.empty ? '1' : toBeAdded"/>
    <bind to="resetDate"
      eval="call:com.axelor.apps.base.service.app.AppBaseService:getTodayDate(null)"/>
  </input>

  <input file="crm_lead.csv" separator=";" type="com.axelor.apps.crm.db.Lead"
    search="self.importId = :importId" call="com.axelor.csv.script.ImportLead:saveLead">
    <bind column="description" to="description"/>
    <bind to="jobTitleFunction" search="self.name = :jobTitle">
      <bind to="name" column="jobTitle"/>
    </bind>
    <bind to="emailAddress" search="self.address = :email">
      <bind to="address" column="email"/>
    </bind>
    <bind to="contactDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(contactDate)" column="contactDate"/>
    <bind to="createdOn"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(contactDate)" column="contactDate"/>
    <bind to="user" search="self.importId = :userImportId" update="true"/>
    <bind to="createdBy"
      eval="call:com.axelor.csv.script.ImportLead:importCreatedBy(userImportId)"/>
  </input>

  <input file="crm_eventCategory.csv" separator=";"
    type="com.axelor.apps.crm.db.EventCategory" search="self.importId = :importId"/>

  <input file="crm_event.csv" separator=";" type="com.axelor.apps.crm.db.Event"
    search="self.importId = :importId">
    <bind to="startDateTime"
      eval="call:com.axelor.csv.script.ImportDateTime:importDateTime(startDateTimeNow)"
      column="startDateTimeNow"/>
    <bind to="endDateTime"
      eval="call:com.axelor.csv.script.ImportDateTime:importDateTime(endDateTimeNow)"
      column="endDateTimeNow"/>
  </input>

  <input file="crm_event.csv" separator=";" type="com.axelor.apps.crm.db.Event"
    search="self.importId = :importId">
    <bind column="subject" to="subjectTeam"/>
  </input>

  <input file="crm_opportunity.csv" separator=";" type="com.axelor.apps.crm.db.Opportunity"
    search="self.importId = :importId"
    call="com.axelor.csv.script.ImportOpportunity:importOpportunity">
    <bind to="expectedCloseDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(expectedCloseDate)"
      column="expectedCloseDate"/>
    <bind to="user" search="self.importId = :userImportId" update="true"/>
    <bind to="createdBy"
      eval="call:com.axelor.csv.script.ImportLead:importCreatedBy(userImportId)"/>
  </input>

  <input file="crm_crmConfig.csv" separator=";" type="com.axelor.apps.crm.db.CrmConfig"
    search="self.importId = :importId"/>

  <input file="crm_anonymizer.csv" type="com.axelor.apps.base.db.Anonymizer" separator=";"/>

  <input file="crm_anonymizerLine.csv" type="com.axelor.apps.base.db.AnonymizerLine"
    separator=";">
    <bind to="metaModel" column="metaModel" search="self.name = :metaModel"/>
    <bind to="metaField" column="metaField"
      search="self.name = :metaField AND self.metaModel.name = :metaModel"/>
    <bind to="anonymizer" column="anonymizer_importId"
      search="self.importId = :anonymizer_importId"/>
    <bind to="useFakeData" column="useFakeData"/>
  </input>

  <input file="base_template.csv" separator=";" type="com.axelor.message.db.Template"
    search="self.name = :name"/>

</csv-inputs>