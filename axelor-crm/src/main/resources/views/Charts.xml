<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_6.1.xsd">



  <chart name="chart.dashboard.opportunities.sale.stage.amount.bar"
    title="Opportunities By Sale Stage">
    <dataset type="sql">
	    <![CDATA[
            SELECT
          		SUM(self.amount) AS amount,
              	status.name as _sale_stage
		    FROM
		        crm_opportunity self
			INNER JOIN
		    	crm_opportunity_status AS status ON status.id = self.opportunity_status
            JOIN
                auth_user AS _user
                ON _user.id = :__user__
			GROUP BY
				status.name,status.sequence
			ORDER BY
			   status.sequence
	    ]]>
    </dataset>
    <category key="_sale_stage" type="text" title="Sales Stage"/>
    <series key="amount" type="bar" title="Amount"/>
  </chart>

  <chart name="chart.dashboard.opportunities.sale.stage.amount.funnel"
    title="Opportunities By Sale Stage">
    <dataset type="sql">
	    <![CDATA[
			SELECT
	          SUM(self.amount) AS amount,
              status.name as _sale_stage
		    FROM
		        crm_opportunity self
		    INNER JOIN
		    	crm_opportunity_status AS status ON status.id = self.opportunity_status
            JOIN
                auth_user AS _user
                ON _user.id = :__user__
            GROUP BY
				status.name,status.sequence
			ORDER BY
			   status.sequence
	    ]]>
    </dataset>
    <category key="_sale_stage" type="text" title="Sales Stage"/>
    <series key="amount" type="funnel" title="Amount"/>
  </chart>

  <chart name="chart.dashboard.opportunities.by.stage.type.bar" stacked="true"
    title="Pipeline by Stage and Type">
    <dataset type="sql">
	    <![CDATA[
			SELECT
	          SUM(self.amount) AS amount,
              status.name as _sale_stage
		    FROM
		        crm_opportunity self
		    INNER JOIN
		     	crm_opportunity_status AS status ON status.id = self.opportunity_status
            JOIN
                auth_user AS _user
                ON _user.id = :__user__
            GROUP BY
				status.name,status.sequence
			ORDER BY
			   status.sequence
	    ]]>
    </dataset>
    <category key="_sale_stage" type="text" title="Sales Stage"/>
    <series key="amount" type="bar" groupBy="opp_type_name" title="Amount"/>
  </chart>

  <chart name="chart.dashboard.opportunities.source.amount.bar"
    title="Opportunities By Source">
    <dataset type="sql">
		    <![CDATA[
			SELECT
	          SUM(self.amount) AS amount,
		      Source.name as _source
		    FROM
		        crm_opportunity self
		    LEFT JOIN
		        base_source as Source ON self.source = Source.id
		    GROUP BY
			    _source
			ORDER BY
			    _source
		    ]]>
    </dataset>
    <category key="_source" type="text" title="Source"/>
    <series key="amount" type="bar" title="Amount"/>
  </chart>

  <chart name="chart.dashboard.opportunities.won.by.leadsource.bar"
    title="Opportunities Won By Lead Source">
    <dataset type="sql">
		    <![CDATA[
			SELECT
 				 count(*) AS lead_won,
 				 Source.name as _source
			FROM
    			crm_opportunity self
 			JOIN
    			base_source as Source ON self.source = Source.id
			INNER JOIN
    			crm_opportunity_status as status ON status.id = self.opportunity_status
			GROUP BY
    			_source
			ORDER BY
    			_source
		 ]]>
    </dataset>
    <category key="_source" type="text" title="Source"/>
    <series key="lead_won" type="donut" title="Opportunities"/>
  </chart>

  <chart name="chart.dashboard.opportunities.won.by.saleman.bar"
    title="Opportunities Won By Salesman">
    <dataset type="sql">
		    <![CDATA[
			SELECT
          		SUM(self.amount) AS amount,
	      		sale_man.full_name as _sale_man
	    	FROM
	        	crm_opportunity self
	    	LEFT JOIN
	        	auth_user as sale_man ON self.user_id = sale_man.id
	        	AND sale_man.full_name IS NOT NULL
	    	GROUP BY
		    	_sale_man
			ORDER BY
		   		_sale_man
		 ]]>
    </dataset>
    <category key="_sale_man" type="text" title="Salesperson"/>
    <series key="amount" type="bar" title="Amount"/>
  </chart>

  <chart name="chart.dashboard.events.by.team" title="Events by team">
    <dataset type="sql">
		    <![CDATA[
			SELECT
          		COUNT(self.id) AS total_event,
	      		_team.name as team_name
	    	FROM
	        	ical_event as self
	    	LEFT JOIN
	        	team_team as _team ON self.team = _team.id
	    	GROUP BY
		    	team_name
			ORDER BY
		   		team_name
		 ]]>
    </dataset>
    <category key="team_name" type="text" title="Team"/>
    <series key="total_event" type="bar" title="Events"/>
  </chart>

  <chart name="chart.dashboard.events.by.saleman" title="Events by saleman">
    <dataset type="sql">
		    <![CDATA[
			SELECT
          		COUNT(self.id) AS total_event,
	      		sale_man.full_name as _sale_man
	    	FROM
	        	ical_event as self
	    	LEFT JOIN
	        	auth_user as sale_man ON self.user_id = sale_man.id
	        	AND sale_man.full_name IS NOT NULL
	    	GROUP BY
		    	_sale_man
			ORDER BY
		   		_sale_man
		 ]]>
    </dataset>
    <category key="_sale_man" type="text" title="Salesperson"/>
    <series key="total_event" type="bar" title="Event"/>
  </chart>


  <chart name="chart.opportunities.by.origin.by.stage"
    title="Opportunities By Origin By Stage" stacked="true">
    <dataset type="sql">
		    <![CDATA[
		    SELECT
                SUM(self.amount) AS amount,
			    src.name    AS source,
    		status.name as stage
			FROM
			    crm_opportunity self
            LEFT JOIN
                base_source src on src.id = self.source
			INNER JOIN
		crm_opportunity_status AS status ON status.id = self.opportunity_status
            JOIN
                auth_user AS _user
                ON _user.id = :__user__
			GROUP BY
			    status.name,status.sequence,src.name
			ORDER BY
			   status.sequence,src.name
		    ]]>
    </dataset>
    <category key="source" type="text" title="Source"/>
    <series key="amount" groupBy="stage" type="bar" title="Amount"/>
  </chart>

  <chart name="chart.opportunities.pipeline.next.90d" title="Pipeline next 90 days"
    stacked="true">
    <dataset type="sql">
		    <![CDATA[
		SELECT
	          SUM(self.amount) AS amount,
              status.name as stage,
			  'Pipeline' as pipeline
		    FROM
		        crm_opportunity self
		    INNER JOIN
		    	crm_opportunity_status AS status ON status.id = self.opportunity_status
            JOIN
                auth_user AS _user
                ON _user.id = :__user__
			WHERE
				self.expected_close_date < current_date+ interval '90 day'
			GROUP BY
				status.name,status.sequence,pipeline
			ORDER BY
			   status.sequence
			]]>
    </dataset>
    <category key="pipeline" type="text" title="Pipeline"/>
    <series key="amount" groupBy="stage" type="bar" title="Amount"/>
  </chart>

  <action-record model="com.axelor.apps.crm.db.Lead" name="action.crm.chart.set.date">
    <field name="toDateT"
      expr="eval:LocalDate.parse(todayDate).atStartOfDay().withHour(23).withMinute(59)"/>
    <field name="fromDateT"
      expr="eval:LocalDate.parse(todayDate).atStartOfDay().withDayOfMonth(1).withMonth(1)"/>
  </action-record>

  <chart onInit="action.crm.chart.set.date" name="chart.leads.by.source.bar"
    title="Leads by Source">
    <search-fields>
      <field type="datetime" name="fromDateT" title="From Date" x-required="true"/>
      <field type="datetime" name="toDateT" title="To Date" x-required="true"/>
    </search-fields>

    <dataset type="jpql">
		    <![CDATA[
		    SELECT
		        COUNT(*) AS leads,
		        self.source.name AS source
		    FROM
		        Lead self
		    WHERE
		      self.createdOn BETWEEN :fromDateT AND :toDateT
		    GROUP BY
		    	self.source.name
		    ORDER BY
		        self.source.name
		    ]]>
    </dataset>
    <category key="source" type="text" title="Source"/>
    <series key="leads" type="bar" title="Leads"/>
  </chart>

  <chart onInit="action.crm.chart.set.date" name="chart.leads.by.team.by.status.bar"
    title="Leads by Team by Status" stacked="true">
    <search-fields>
      <field type="datetime" name="fromDateT" title="From Date" x-required="true"/>
      <field type="datetime" name="toDateT" title="To Date" x-required="true"/>
    </search-fields>
    <dataset type="sql">
		    <![CDATA[
		    SELECT
			    COUNT(self.id) AS _leads,
			    team.name AS _team,
			    coalesce(nullif(message_value, ''), message_key) as _status
			FROM
			   crm_lead as self
			LEFT JOIN
			   team_team as team ON self.team = team.id
			LEFT JOIN
	        	meta_select as selection ON selection.name = 'crm.lead.status.select'
	    	LEFT JOIN
	    		meta_select_item as selection_item ON selection_item.select_id = selection.id
            LEFT JOIN
                meta_translation ON selection_item.select_id = selection.id
            JOIN
                auth_user AS _user
                ON _user.id = :__user__
			WHERE
				self.created_on BETWEEN DATE(:fromDateT) AND DATE(:toDateT)
                AND message_key = selection_item.title AND meta_translation.language = _user.language
	    	GROUP BY
			  	_status,
                _team, message_value, message_key
			ORDER BY
			   	_status,
                _team
    ]]>
    </dataset>
    <category key="_team" type="text" title="Team"/>
    <series key="_leads" groupBy="_status" type="bar" title="Leads"/>
  </chart>

  <chart onInit="action.crm.chart.set.date" name="chart.leads.by.saleman.by.status.bar"
    title="Leads by Salesperson by Status" stacked="true">
    <search-fields>
      <field type="datetime" name="fromDateT" title="From Date" x-required="true"/>
      <field type="datetime" name="toDateT" title="To Date" x-required="true"/>
    </search-fields>
    <dataset type="sql">
		    <![CDATA[
		    SELECT
			    COUNT(self.id)    AS _leads,
			    sale_man.full_name as _sale_man,
			    coalesce(nullif(message_value, ''), message_key) as _status
			FROM
			    crm_lead as self
			LEFT JOIN
	        	auth_user as sale_man ON self.user_id = sale_man.id
			LEFT JOIN
	        	meta_select as selection ON selection.name = 'crm.lead.status.select'
	    	LEFT JOIN
	    		meta_select_item as selection_item ON selection_item.select_id = selection.id
            LEFT JOIN
                meta_translation ON selection_item.select_id = selection.id
            JOIN
                auth_user AS _user
                ON _user.id = :__user__
			WHERE
				sale_man.full_name != '' AND
				self.created_on BETWEEN DATE(:fromDateT) AND DATE(:toDateT)
                AND message_key = selection_item.title AND meta_translation.language = _user.language
	    	GROUP BY
			  	_status,
                _sale_man, message_value, message_key
			ORDER BY
			   	_status,
                _sale_man
			  ]]>
    </dataset>
    <category key="_sale_man" type="text" title="Salesperson"/>
    <series key="_leads" groupBy="_status" type="bar" title="Leads"/>
  </chart>

  <chart onInit="action.crm.chart.set.date" name="chart.calls.types.by.user.bar"
    title="Calls type by user" stacked="true">
    <search-fields>
      <field type="datetime" name="fromDateT" title="From Date" x-required="true"/>
      <field type="datetime" name="toDateT" title="To Date" x-required="true"/>
    </search-fields>
    <dataset type="sql">
		    <![CDATA[
            SELECT
                COUNT(_event.id) AS _total_calls,
                _user.full_name AS _user_name,
                _meta._select_title AS _event_type
            FROM
                ical_event AS _event
            LEFT JOIN
                auth_user AS _user
                ON _event.user_id = _user.id
            JOIN
                (SELECT
                    cast(_item.value as int) AS _select_value,
                    coalesce(nullif(message_value, ''), message_key) AS _select_title
                FROM
                    meta_select AS _selection
                JOIN
                    meta_select_item AS _item
                    ON _selection.name = 'icalendar.event.type.select'
                    AND _item.select_id = _selection.id
                LEFT JOIN
                    meta_translation ON _item.select_id = _selection.id
                JOIN
	                auth_user AS _user
	                ON _user.id = :__user__
                WHERE
                    message_key = _item.title AND meta_translation.language = _user.language
                GROUP BY
                    _item.value, message_value, message_key
                ) AS _meta
            ON
                _meta._select_value = _event.type_select
            WHERE
                (_event.type_select = 1 OR _event.type_select = 6) AND
                _event.start_date_time BETWEEN (cast(:fromDateT as TIMESTAMP) AT TIME ZONE 'UTC') AND (cast(:toDateT as TIMESTAMP) AT TIME ZONE 'UTC')
            GROUP BY
                _user_name, _event_type
            ORDER BY
                _user_name, _total_calls DESC
            ]]>
    </dataset>
    <category key="_user_name" type="text" title="User"/>
    <series key="_total_calls" groupBy="_event_type" type="bar" title="Calls"/>
  </chart>
  <chart onInit="action.crm.chart.set.date" name="chart.held.calls.types.by.user.bar"
    title="Calls held by type by user" stacked="true">
    <search-fields>
      <field type="datetime" name="fromDateT" title="From Date" x-required="true"/>
      <field type="datetime" name="toDateT" title="To Date" x-required="true"/>
    </search-fields>
    <dataset type="sql">
		    <![CDATA[
				SELECT
				    COUNT(_event.id) AS _total_calls,
					_user.full_name AS _user_name,
					_meta._select_title AS _event_type
				FROM
					ical_event AS _event
				LEFT JOIN
					auth_user AS _user
					ON _event.user_id = _user.id
				JOIN
					(SELECT
						cast(_item.value as int) AS _select_value,
				        coalesce(nullif(message_value, ''), message_key) AS _select_title
					FROM
						meta_select AS _selection
					JOIN
						meta_select_item AS _item
						ON _selection.name = 'icalendar.event.type.select'
						AND _item.select_id = _selection.id
                    LEFT JOIN
                        meta_translation ON _item.select_id = _selection.id
                    JOIN
	                    auth_user AS _user
	                    ON _user.id = :__user__
                    WHERE
                        message_key = _item.title AND meta_translation.language = _user.language
                    GROUP BY
                        _item.value, message_value, message_key
					) AS _meta
				ON
					_meta._select_value = _event.type_select
				WHERE
        			(_event.type_select = 1 OR _event.type_select = 6) AND
        			_event.start_date_time BETWEEN (cast(:fromDateT as TIMESTAMP) AT TIME ZONE 'UTC') AND (cast(:toDateT as TIMESTAMP) AT TIME ZONE 'UTC')
				GROUP BY
					_user_name, _event_type
				ORDER BY
					_user_name, _total_calls DESC
			  ]]>
    </dataset>
    <category key="_user_name" type="text" title="User"/>
    <series key="_total_calls" groupBy="_event_type" type="bar" title="Calls"/>
  </chart>
  <chart onInit="action.crm.chart.set.date" name="chart.calls.types.by.team.bar"
    title="Calls type by team" stacked="true">
    <search-fields>
      <field type="datetime" name="fromDateT" title="From Date" x-required="true"/>
      <field type="datetime" name="toDateT" title="To Date" x-required="true"/>
    </search-fields>
    <dataset type="sql">
		    <![CDATA[
				SELECT
				    COUNT(_event.id) AS _total_calls,
					_team.name AS _team_name,
					_meta._select_title AS _event_type
				FROM
					ical_event AS _event
				LEFT JOIN
					team_team AS _team
					ON _event.team = _team.id
				JOIN
					(SELECT
						cast(_item.value as int) AS _select_value,
				        coalesce(nullif(message_value, ''), message_key) AS _select_title
					FROM
						meta_select AS _selection
					JOIN
						meta_select_item AS _item
						ON _selection.name = 'icalendar.event.type.select'
						AND _item.select_id = _selection.id
					LEFT JOIN
                        meta_translation ON _item.select_id = _selection.id
                    JOIN
                        auth_user AS _user
                        ON _user.id = :__user__
                    WHERE
                        message_key = _item.title AND meta_translation.language = _user.language
                    GROUP BY
                        _item.value, message_value, message_key
					) AS _meta
				ON
					_meta._select_value = _event.type_select
				WHERE
        			(_event.type_select = 1 OR _event.type_select = 6) AND
        			_event.start_date_time BETWEEN (cast(:fromDateT as TIMESTAMP) AT TIME ZONE 'UTC') AND (cast(:toDateT as TIMESTAMP) AT TIME ZONE 'UTC')
				GROUP BY
					_team_name, _event_type
				ORDER BY
					_team_name, _total_calls DESC
		  ]]>
    </dataset>
    <category key="_team_name" type="text" title="Team"/>
    <series key="_total_calls" groupBy="_event_type" type="bar" title="Calls"/>
  </chart>
  <chart onInit="action.crm.chart.set.date" name="chart.held.calls.types.by.team.bar"
    title="Calls held by team by type" stacked="true">
    <search-fields>
      <field type="datetime" name="fromDateT" title="From Date" x-required="true"/>
      <field type="datetime" name="toDateT" title="To Date" x-required="true"/>
    </search-fields>
    <dataset type="sql">
		    <![CDATA[
				SELECT
				    COUNT(_event.id) AS _total_calls,
					_team.name AS _team_name,
					_meta._select_title AS _event_type
				FROM
					ical_event AS _event
				LEFT JOIN
					team_team AS _team
					ON _event.team = _team.id
				JOIN
					(SELECT
						cast(_item.value as int) AS _select_value,
				        coalesce(nullif(message_value, ''), message_key) AS _select_title
					FROM
						meta_select AS _selection
					JOIN
						meta_select_item AS _item
						ON _selection.name = 'icalendar.event.type.select'
						AND _item.select_id = _selection.id
                    LEFT JOIN
                        meta_translation ON _item.select_id = _selection.id
                    JOIN
                        auth_user AS _user
                        ON _user.id = :__user__
                    WHERE
                        message_key = _item.title AND meta_translation.language = _user.language
                    GROUP BY
                        _item.value, message_value, message_key
					) AS _meta
				ON
					_meta._select_value = _event.type_select
				WHERE
        			(_event.type_select = 1 OR _event.type_select = 6) AND
        			_event.start_date_time BETWEEN (cast(:fromDateT as TIMESTAMP) AT TIME ZONE 'UTC') AND (cast(:toDateT as TIMESTAMP) AT TIME ZONE 'UTC')
				GROUP BY
					_team_name, _event_type
				ORDER BY
					_team_name, _total_calls DESC
		  ]]>
    </dataset>
    <category key="_team_name" type="text" title="Team"/>
    <series key="_total_calls" groupBy="_event_type" type="bar" title="Calls"/>
  </chart>

  <chart onInit="action.crm.chart.set.date,action.chart.crm.chart.set.active.team"
    stacked="true" name="chart.calls.types.by.team.by.user.bar" title="Calls by user(of a team)">
    <search-fields>
      <field type="datetime" name="fromDateT" title="From Date" x-required="true"/>
      <field type="reference" name="activeTeam" target="com.axelor.team.db.Team"
        x-required="true" title="Team"/>
    </search-fields>
    <dataset type="sql">
		    <![CDATA[
			    SELECT
				    COUNT(_event.id) AS _total_calls,
					_user.full_name AS _user_name,
					_meta._select_title AS _event_type
				FROM
					ical_event AS _event
				LEFT JOIN
					auth_user AS _user
					ON _event.user_id = _user.id
			    JOIN
					(SELECT
						cast(_item.value as int) AS _select_value,
				        coalesce(nullif(message_value, ''), message_key) AS _select_title
					FROM
						meta_select AS _selection
					JOIN
						meta_select_item AS _item
						ON _selection.name = 'icalendar.event.type.select'
						AND _item.select_id = _selection.id
					LEFT JOIN
                        meta_translation ON _item.select_id = _selection.id
                    JOIN
                        auth_user AS _user
                        ON _user.id = :__user__
                    WHERE
                        message_key = _item.title AND meta_translation.language = _user.language
                    GROUP BY
                        _item.value, message_value, message_key
					) AS _meta
				ON
					_meta._select_value = _event.type_select

			    WHERE
			      (_event.type_select = 1 OR _event.type_select = 6) AND
			      _event.team = :activeTeam AND
			      _event.start_date_time >= (cast(:fromDateT as TIMESTAMP) AT TIME ZONE 'UTC')
			    GROUP BY
			        _user.full_name, _event_type
			    ORDER BY
			         _user.full_name, _event_type DESC
			  ]]>
    </dataset>
    <category key="_user_name" type="text" title="User"/>
    <series key="_total_calls" type="bar" groupBy="_event_type" title="Calls"/>
  </chart>
  <chart onInit="action.crm.chart.set.date,action.chart.crm.chart.set.active.team"
    name="chart.daily.team.calls.summary.by.user.bar" title="Daily team call summary by user"
    stacked="false">
    <search-fields>
      <field name="toDateT" title="From Date" type="date" x-required="true"/>
      <field name="activeTeam" title="Team" type="reference" x-required="true"
        target="com.axelor.team.db.Team"/>
    </search-fields>
    <dataset type="jpql">
      SELECT
      COUNT(*) AS _total_calls,
      salesMan.fullName AS _sale_man
      FROM
      Event
      self,
      User salesMan
      WHERE
      (self.typeSelect = 1 OR self.typeSelect = 6) AND
      self.user = salesMan
      AND
      self.team = :activeTeam AND
      DATE(self.startDateTime) = DATE(:toDateT)
      GROUP BY
      salesMan.fullName
      ORDER BY
      salesMan.fullName

    </dataset>
    <category key="_sale_man" type="text" title="User"/>
    <series key="_total_calls" type="bar" title="Calls"/>
  </chart>

  <chart name="chart.user.by.open.cases.bar" title="Open Cases by Agents" stacked="true">
    <dataset type="sql">

      SELECT
      COUNT(self.id) AS _cases,
      sale_man.full_name AS _sale_man,
      coalesce(nullif(message_value, ''), message_key) AS _status
      FROM
      ical_event as self
      JOIN
      auth_user as sale_man ON self.user_id = sale_man.id
      JOIN
      meta_select as selection ON
      selection.name = 'crm.event.status.select'
      JOIN
      meta_select_item as selection_item ON
      selection_item.select_id = selection.id
      LEFT JOIN
      meta_translation ON selection_item.select_id =
      selection.id
      JOIN
      auth_user AS _user
      ON _user.id = :__user__
      WHERE
      self.status_select != 25
      AND
      cast(selection_item.value as decimal) = self.status_select
      AND message_key =
      selection_item.title AND meta_translation.language = _user.language
      GROUP BY
      _status,
      _sale_man,
      message_value, message_key
      ORDER BY
      _status,
      _sale_man

    </dataset>
    <category key="_sale_man" type="text" title="Salesperson"/>
    <series key="_cases" type="bar" groupBy="_status" title="Cases"/>
  </chart>

  <chart onInit="action.crm.chart.set.date" name="chart.leads.by.country.bar"
    title="Leads by Country">
    <search-fields>
      <field type="datetime" name="fromDateT" title="From Date" x-required="true"/>
      <field type="datetime" name="toDateT" title="To Date" x-required="true"/>
    </search-fields>
    <dataset type="sql">
		    <![CDATA[
		    SELECT
			    COUNT(self.id)    	AS 	_total_leads,
			    country.name 		AS 	_country
			FROM
			  	crm_lead as self
			LEFT JOIN
	        	base_country as country ON self.primary_country = country.id
	        WHERE
	        	self.created_on BETWEEN DATE(:fromDateT) AND DATE(:toDateT)
	    	GROUP BY
			  	_country
			ORDER BY
			   	_country
			  ]]>
    </dataset>
    <category key="_country" type="text" title="Country"/>
    <series key="_total_leads" type="bar" title="Leads"/>
  </chart>

  <action-record model="com.axelor.apps.crm.db.Lead"
    name="action.crm.chart.default.month.value.6m">
    <field name="monthSelect" expr="eval:6"/>
  </action-record>

  <chart onInit="action.crm.chart.default.month.value.6m" name="chart.created.leads.per.month"
    title="Created leads per month">
    <search-fields>
      <field type="string" name="monthSelect" title="Historical Period"
        selection="base.year.period.duration.select" x-required="true"/>
    </search-fields>
    <dataset type="sql">
      SELECT
      COUNT(self.id) AS _leads,
      to_char(self.created_on,'yyyy-MM') AS
      _month
      FROM
      crm_lead self
      WHERE
      self.created_on BETWEEN DATE(:todayDate) - CAST(:monthSelect as
      int) * INTERVAL '1 month' AND DATE(:todayDate) +
      INTERVAL '1 day'
      GROUP BY
      _month
      ORDER BY
      _month
    </dataset>
    <category key="_month" type="month" title="Month"/>
    <series key="_leads" type="bar" title="Leads"/>
    <config name="xFormat" value="MM-YYYY"/>
  </chart>

  <chart name="chart.created.leads.by.industry.sector"
    title="Created leads by industry sector">
    <dataset type="jpql">
		    <![CDATA[
		    SELECT
		        COUNT(*) AS leads,
		        self.industrySector.name AS industrySector
		    FROM
		        Lead self
		    GROUP BY
		    	self.industrySector.name
		    ]]>
    </dataset>
    <category key="industrySector" type="text" title="Industry Sector"/>
    <series key="leads" type="bar" title="Leads"/>
  </chart>

  <!-- CRM EVENT ASSOCIATED TO PARTNER -->
  <chart name="chart.customer.crm.activities" title="CRM Activities">
    <dataset type="sql">
      SELECT
      coalesce(COUNT(_event.id),0) AS _num_event,
      selection_item.title AS
      _type
      FROM
      meta_select as selection
      JOIN
      meta_select_item as selection_item ON
      selection_item.select_id = selection.id
      LEFT JOIN
      ical_event as _event
      ON
      _event.type_select=cast(selection_item.value as int) AND _event.contact_partner=:id
      WHERE
      selection.name = 'icalendar.event.type.select'
      GROUP BY
      _type
    </dataset>
    <category key="_type" type="text" title="Type"/>
    <series key="_num_event" type="bar" title="Activities"/>
  </chart>

</object-views>
