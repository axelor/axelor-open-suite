<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_6.1.xsd">

  <input file="studio_appPurchase.csv" separator=";" type="com.axelor.studio.db.AppPurchase"
    search="self.app.code = :code"/>

  <input file="purchase_purchaseConfig.csv" separator=";"
    type="com.axelor.apps.purchase.db.PurchaseConfig" search="self.importId = :importId"/>

  <input file="purchase_purchaseOrder.csv" separator=";"
    type="com.axelor.apps.purchase.db.PurchaseOrder">
    <bind to="createdOn"
      eval="call:com.axelor.csv.script.ImportDateTime:importDateTime(creationDate)"
      column="creationDate"/>
    <bind to="estimatedReceiptDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(estimatedReceiptDate)"
      column="estimatedReceiptDate"/>
    <bind to="orderDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(orderDate)"
      column="orderDate"/>
  </input>

  <input file="purchase_purchaseOrderLine.csv" separator=";"
    type="com.axelor.apps.purchase.db.PurchaseOrderLine"
    call="com.axelor.apps.purchase.script.ImportPurchaseOrderLine:importPurchaseOrderLine">
    <bind to="desiredReceiptDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDateTime(desiredReceiptDate)"
      column="desiredReceiptDate"/>
    <bind to="estimatedReceiptDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(estimatedReceiptDate)"
      column="estimatedReceiptDate"/>
  </input>

  <input file="purchase_supplierCatalog.csv" separator=";"
    type="com.axelor.apps.purchase.db.SupplierCatalog"
    call="com.axelor.apps.purchase.script.ImportSupplierCatalog:importSupplierCatalog"/>

  <input file="base_sequence.csv" separator=";" type="com.axelor.apps.base.db.Sequence"
    search="self.importId = :importId" call="com.axelor.csv.script.ImportSequence:importSequence">
    <bind to="yearlyResetOk" column="yearlyResetOk" eval="yearlyResetOk == '1' ? true : false"
      if="yearlyResetOk"/>
    <bind to="nextNum" column="nextNum" eval="nextNum?.empty ? '1' : nextNum"/>
    <bind to="padding" column="padding" eval="padding?.empty ? '1' : padding"/>
    <bind to="toBeAdded" column="toBeAdded" eval="toBeAdded?.empty ? '1' : toBeAdded"/>
    <bind to="resetDate"
      eval="call:com.axelor.apps.base.service.app.AppBaseService:getTodayDate(null)"/>
  </input>

  <input file="purchase_purchaseOrder.csv" separator=";"
    type="com.axelor.apps.purchase.db.PurchaseOrder" search="self.importId = :importId"
    call="com.axelor.apps.purchase.script.ImportPurchaseOrder:importPurchaseOrder">
    <bind to="createdOn"
      eval="call:com.axelor.csv.script.ImportDateTime:importDateTime(creationDate)"
      column="creationDate"/>
    <bind to="estimatedReceiptDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(estimatedReceiptDate)"
      column="estimatedReceiptDate"/>
    <bind to="orderDate" eval="call:com.axelor.csv.script.ImportDateTime:importDate(orderDate)"
      column="orderDate"/>
  </input>

  <input file="base_template.csv" separator=";" type="com.axelor.message.db.Template"
    search="self.name = :name">
    <bind to="language" search="self.code = :languageCode"/>
    <bind column="birtTemplateSet_importId" to="birtTemplateSet"
      search="self.importId in :birtTemplateSet_importId"
      eval="birtTemplateSet_importId.split('\\|') as List" update="true"/>
  </input>

</csv-inputs>

