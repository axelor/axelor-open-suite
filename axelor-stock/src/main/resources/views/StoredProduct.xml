<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_7.0.xsd">

  <grid name="stored-products-mass-stock-move-grid" title="Stored products"
    model="com.axelor.apps.stock.db.StoredProduct" groupBy="storedProduct"
    onNew="action-stored-products-group-onnew" canDelete="false">
    <field name="storedProduct" required="true" domain="self.productTypeSelect = 'storable'"
      onChange="action-stored-products-group-product-onchange"
      readonlyIf="$get('stockMoveLine.stockMove.statusSelect') == 3"/>
    <field name="trackingNumber"
      onSelect="action-stored-products-attrs-tracking-number-domain"
      onChange="action-stored-products-record-set-currentqty"
      readonlyIf="$get('stockMoveLine.stockMove.statusSelect') == 3"/>
    <field name="currentQty" readonly="true"/>
    <field name="unit" readonly="true"/>
    <field name="toStockLocation" required="true"
      onSelect="action-stored-product-attrs-set-domain-to-stock-location"
      readonlyIf="$get('stockMoveLine.stockMove.statusSelect') == 3"/>
    <field name="storedQty" required="true"
      readonlyIf="$get('stockMoveLine.stockMove.statusSelect') == 3"/>
    <field name="stockMoveLine.stockMove" readonly="true"/>
    <field name="stockMoveLine.stockMove.statusSelect" readonly="true"/>
    <button name="realizeStorageBtn" icon="fa-play"
      onClick="save,action-stored-product-method-realize-storage,save"
      readonlyIf="$get('stockMoveLine.stockMove.statusSelect') == 3"/>
    <button name="cancelStorageBtn" icon="fa-undo"
      onClick="save,action-stored-product-method-cancel-storage"
      readonlyIf="$get('stockMoveLine.stockMove.statusSelect') != 3"/>
  </grid>

  <form name="stored-products-form" title="Stored products"
    model="com.axelor.apps.stock.db.StoredProduct" onNew="action-stored-products-group-onnew"
    canDelete="false">
    <panel name="mainPanel">
      <field name="storedProduct" required="true" domain="self.productTypeSelect = 'storable'"
        onChange="action-stored-products-group-product-onchange"/>
      <field name="trackingNumber"
        onSelect="action-stored-products-attrs-tracking-number-domain"
        onChange="action-stored-products-record-set-currentqty"/>
      <field name="currentQty" readonly="true"/>
      <field name="unit" readonly="true"/>
      <field name="toStockLocation" required="true" domain="self.typeSelect != 3"/>
      <field name="storedQty" required="true"/>
    </panel>
  </form>

  <action-attrs name="action-stored-products-attrs-tracking-number-required">
    <attribute name="required" for="trackingNumber"
      expr="eval: storedProduct?.trackingNumberConfiguration != null"/>
  </action-attrs>

  <action-attrs name="action-stored-products-attrs-tracking-number-domain">
    <attribute name="domain"
      expr="eval: &quot; self.product = :storedProduct AND (self IN (SELECT stockLocationLine.trackingNumber FROM StockLocationLine stockLocationLine   WHERE stockLocationLine.detailsStockLocation = ${massStockMove.cartStockLocation?.id}))&quot;"
      for="trackingNumber"/>
  </action-attrs>

  <action-record name="action-stored-products-record-default-location"
    model="com.axelor.apps.stock.db.StoredProduct">
    <field name="toStockLocation" expr="eval: __parent__?.commonToStockLocation"/>
  </action-record>

  <action-record name="action-stored-products-record-set-tracking-number"
    model="com.axelor.apps.stock.db.StoredProduct">
    <field name="trackingNumber" expr="eval: null"
      if="(__repo__(StockLocationLine).all().filter('self.product = ?1 AND self.detailsStockLocation = ?2', storedProduct, __parent__.cartStockLocation?.id)?.fetchOne()?.trackingNumber) != trackingNumber"/>
  </action-record>

  <action-record name="action-stored-products-record-set-currentqty"
    model="com.axelor.apps.stock.db.StoredProduct">
    <field if="__parent__.cartStockLocation != null" name="currentQty"
      expr="eval: __repo__(StockLocationLine).all().filter('self.product = ?1 AND self.stockLocation = ?2', storedProduct, __parent__.cartStockLocation)?.fetchOne()?.currentQty"/>
    <field if="__parent__.cartStockLocation != null &amp;&amp; trackingNumber != null"
      name="currentQty"
      expr="eval: __repo__(StockLocationLine).all().filter('self.product = ?1 AND self.detailsStockLocation = ?2 AND self.trackingNumber = ?3', storedProduct, __parent__.cartStockLocation, trackingNumber)?.fetchOne()?.currentQty"/>
  </action-record>

  <action-record name="action-stored-products-record-get-unit"
    model="com.axelor.apps.stock.db.StoredProduct">
    <field name="unit" expr="eval: unit = storedProduct?.unit"/>
  </action-record>

  <action-group name="action-stored-products-group-onnew">
    <action name="action-stored-products-record-default-location"/>
  </action-group>

  <action-group name="action-stored-products-group-product-onchange">
    <action name="action-stored-products-record-set-tracking-number"/>
    <action name="action-stored-products-attrs-tracking-number-required"/>
    <action name="action-stored-products-record-set-currentqty"/>
    <action name="action-stored-products-record-get-unit"/>
  </action-group>

  <action-attrs name="action-stored-product-attrs-set-domain-to-stock-location">
    <attribute for="toStockLocation" name="domain"
      expr="eval: self.company = (SELECT company FROM MassStockMove WHERE id = :massStockMove) AND self.typeSelect != 3"/>
  </action-attrs>

</object-views>