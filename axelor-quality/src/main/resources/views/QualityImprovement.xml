<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_7.0.xsd">

  <grid name="quality-improvement-grid" title="Quality improvements"
    model="com.axelor.apps.quality.db.QualityImprovement" orderBy="sequence">
    <field name="sequence"/>
    <field name="company"/>
    <field name="type"/>
    <field name="qiStatus"/>
    <field name="gravityTypeSelect"/>
    <field name="analysisMethod"/>
  </grid>

  <form name="quality-improvement-form" title="Quality improvement"
    model="com.axelor.apps.quality.db.QualityImprovement" width="large"
    onLoad="action-quality-improvement-group-on-load"
    onNew="action-quality-improvement-method-set-default-values-on-new">
    <panel name="mainPanel">
      <field name="qiStatus" colSpan="12" showTitle="false" readonlyIf="!id"
        widget="NavSelect" x-order="sequence"/>
      <field name="sequence" colSpan="4"/>
      <field name="company" colSpan="4" form-view="company-form" grid-view="company-grid"/>
      <field name="type" colSpan="4"/>
      <field name="qiDetection" colSpan="4"
        onSelect="action-quality-improvement-attrs-set-qi-detection-domain"
        form-view="qi-detection-form" grid-view="qi-detection-grid"/>
      <field name="gravityTypeSelect" colSpan="4"/>
      <field name="analysisMethod" colSpan="4"
        readonlyIf="qiAnalysis.qiAnalysisCausesList != null"
        onSelect="action-quality-improvement-attrs-set-analysis-method-domain"/>
    </panel>
    <panel-tabs name="mainPanelTab" showIf="id">
      <panel name="identificationPanel" title="Identification">
        <field name="qiIdentification" showTitle="false" colSpan="12" canSelect="false"
          canRemove="false">
          <editor x-viewer="true">
            <panel title="Partner" name="nonIntPanel" colSpan="12">
              <field name="customerPartner"
                onChange="action-quality-improvement-group-customer-partner-on-change"
                domain="self.isCustomer = true" requiredIf="$get('qi.qiDetection.origin') == 3"/>
              <field name="contact" title="Customer contact"
                showIf="$get('qi.qiDetection.origin') == 3"
                onChange="action-quality-improvement-method-set-written-on-and-written-by"
                onSelect="action-quality-improvement-attrs-set-contact-domain"/>
              <field name="customerSaleOrder" showIf="$get('qi.qiDetection.origin') == 3"
                onChange="action-quality-improvement-group-customer-sale-order-on-change"
                domain="self.clientPartner = :customerPartner"/>
              <field name="customerSaleOrderLine" showIf="$get('qi.qiDetection.origin') == 3"
                onChange="action-quality-improvement-group-customer-sale-order-line-on-change"
                domain="self.saleOrder = :customerSaleOrder"/>
              <field name="stockMove" showIf="customerSaleOrder || supplierPurchaseOrder"
                onChange="action-quality-improvement-group-stock-move-on-change"
                onSelect="action-quality-improvement-attrs-set-stock-move-domain"/>
              <field name="stockMoveLine" showIf="customerSaleOrder || supplierPurchaseOrder"
                onChange="action-quality-improvement-group-stock-move-line-on-change"
                onSelect="action-quality-improvement-attrs-set-stock-move-line-domain"/>
              <field name="supplierPartner" showIf="$get('qi.qiDetection.origin') == 1"
                onChange="action-quality-improvement-group-supplier-partner-on-change"
                domain="self.isSupplier = true" requiredIf="$get('qi.qiDetection.origin') == 1"/>
              <field name="contact" title="Supplier contact"
                showIf="$get('qi.qiDetection.origin') == 1"
                onChange="action-quality-improvement-method-set-written-on-and-written-by"
                onSelect="action-quality-improvement-attrs-set-contact-domain"/>
              <field name="supplierPurchaseOrder" showIf="$get('qi.qiDetection.origin') == 1"
                onChange="action-quality-improvement-group-supplier-purchase-order-on-change"
                domain="self.supplierPartner = :supplierPartner"/>
              <field name="supplierPurchaseOrderLine"
                showIf="$get('qi.qiDetection.origin') == 1"
                onChange="action-quality-improvement-group-supplier-purchase-order-line-on-change"
                domain="self.purchaseOrder = :supplierPurchaseOrder"/>
            </panel>
            <panel title="Interne" name="intPanel" colSpan="12">
              <field name="detectedByInternal"
                onChange="action-quality-improvement-method-set-written-on-and-written-by"
                onSelect="action-qi-identification-attrs-set-detected-by-internal-domain"
                requiredIf="$get('qi.qiDetection.origin') == 2"/>
              <field name="documentReference"
                onChange="action-quality-improvement-method-set-written-on-and-written-by"/>
              <field name="writtenBy"
                onChange="action-quality-improvement-method-set-written-on-and-written-by"/>
              <field name="writtenOn"/>
              <field name="manufOrder" hideIf="$get('qi.type') == 2"
                onChange="action-quality-improvement-group-manuf-order-on-change"/>
              <field name="operationOrder" showIf="manufOrder != null"
                onChange="action-quality-improvement-method-set-written-on-and-written-by"
                onSelect="action-quality-improvement-attrs-set-operation-order-domain"/>
              <field name="toConsumeProdProduct" showIf="manufOrder != null"
                onChange="action-quality-improvement-method-set-written-on-and-written-by"
                onSelect="action-quality-improvement-attrs-set-to-consume-prod-product-domain"/>
              <field name="consumedProdProduct" showIf="manufOrder != null"
                onChange="action-quality-improvement-method-set-written-on-and-written-by"
                onSelect="action-quality-improvement-attrs-set-consume-prod-product-domain"/>
              <field name="product" hideIf="$get('qi.type') == 2"
                onChange="action-quality-improvement-method-set-written-on-and-written-by"/>
              <field name="project"
                onChange="action-quality-improvement-method-set-written-on-and-written-by"/>
              <field name="quantity" hideIf="$get('qi.type') == 2"
                onChange="action-quality-improvement-method-set-written-on-and-written-by"/>
              <field name="nonConformingQuantity" hideIf="$get('qi.type') == 2"
                onChange="action-quality-improvement-method-set-written-on-and-written-by"/>
              <field name="qualityControl" hideIf="$get('qi.type') == 2"
                onChange="action-quality-improvement-method-set-written-on-and-written-by"/>
              <field name="sourceQIList" widget="tag-select" canNew="false" colSpan="6"
                onChange="action-quality-improvement-method-set-written-on-and-written-by "/>
            </panel>
            <panel name="hiddenPanel" hidden="true">
              <field name="qi"/>
              <field name="qi.type"/>
              <field name="qi.qiDetection"/>
              <field name="qi.qiDetection.origin"/>
              <field name="$dummyCustomerPartner" type="many-to-one"
                x-target="com.axelor.apps.base.db.Partner"/>
              <field name="$dummySupplierPartner" type="many-to-one"
                x-target="com.axelor.apps.base.db.Partner"/>
              <field name="$dummyCustomerSaleOrder" type="many-to-one"
                x-target="com.axelor.apps.sale.db.SaleOrder"/>
              <field name="$dummyCustomerSaleOrderLine" type="many-to-one"
                x-target="com.axelor.apps.sale.db.SaleOrderLine"/>
              <field name="$dummySupplierPurchaseOrder" type="many-to-one"
                x-target="com.axelor.apps.purchase.db.PurchaseOrder"/>
              <field name="$dummySupplierPurchaseOrderLine" type="many-to-one"
                x-target="com.axelor.apps.purchase.db.PurchaseOrderLine"/>
              <field name="$dummyStockMove" type="many-to-one"
                x-target="com.axelor.apps.stock.db.StockMove"/>
              <field name="$dummyStockMoveLine" type="many-to-one"
                x-target="com.axelor.apps.stock.db.StockMoveLine"/>
              <field name="$dummyManufOrder" type="many-to-one"
                x-target="com.axelor.apps.production.db.ManufOrder"/>
            </panel>
          </editor>
        </field>
      </panel>
      <panel name="resolutionPanel" title="Resolution">
        <field name="qiResolution" showTitle="false" colSpan="12" canSelect="false"
          canRemove="false">
          <editor x-viewer="true">
            <field name="qi.qiIdentification.nonConformingQuantity" readonly="true"
              hideIf="$get('qi.type') == 2"/>
            <panel name="defaultPanel" title="Observed defaults" colSpan="12">
              <field name="defaultWrittenBy" form-view="user-form" grid-view="user-grid"
                onChange="action-quality-improvement-record-set-default-written-on"/>
              <field name="defaultWrittenOn"/>
              <field name="qiResolutionDefaultsList" showTitle="false" colSpan="12"
                form-view="qi-resolution-default-form" grid-view="qi-resolution-default-grid"/>
            </panel>
            <panel name="decisionPanel" title="Decision making" hideIf="$get('qi.type') == 2"
              colSpan="12">
              <field name="decisionsWrittenBy"
                onChange="action-quality-improvement-record-set-decisions-written-on"
                form-view="user-form" grid-view="user-grid"/>
              <field name="decisionsWrittenOn"/>
              <field name="qiResolutionDecisionsList" showTitle="false" colSpan="12"
                form-view="qi-resolution-decision-form" grid-view="qi-resolution-decision-grid"/>
              <button name="generateDistributionBtn" title="Generate distributions"
                onClick="save,action-quality-improvement-validate-lines-selected-for-generation,action-quality-improvement-method-generate-qi-decision-distributions"/>
              <field name="qiDecisionDistributionList" showTitle="false" colSpan="12"
                form-view="qi-decision-distribution-form" grid-view="qi-decision-distribution-grid"
                canNew="false" canRemove="false"/>
              <button name="sendDistributionBtn" title="Send the distributions"
                onClick="save,action-quality-improvement-validate-lines-selected-for-send,action-quality-improvement-view-open-qi-decision-distribution-send-form"/>
            </panel>
            <panel name="hiddenPanel" hidden="true">
              <field name="qi"/>
              <field name="qi.qiDetection"/>
              <field name="qi.type"/>
            </panel>
          </editor>
        </field>
      </panel>
      <panel name="analysisPanel" title="Analysis">
        <field name="qiAnalysis" showTitle="false" colSpan="12" canSelect="false"
          canRemove="false">
          <editor x-viewer="true">
            <panel name="planPanel" title="Plan" colSpan="12">
              <field name="planOwner" colSpan="3" form-view="user-form" grid-view="user-grid"/>
              <field name="advancement" colSpan="3" widget="progress"/>
              <field name="earliestDate" colSpan="3"/>
              <field name="latestDate" colSpan="3"/>
              <field name="objective" colSpan="6" widget="html"/>
              <field name="efficiencyCriteria" colSpan="6" widget="html"/>
            </panel>
            <panel name="planEfficiencyPanel" title="Efficiency" colSpan="12">
              <field name="efficiencySelect" colSpan="3"
                onChange="action-quality-improvement-record-set-efficency-checked-by-and-checked-on"/>
              <field name="efficiencyCheckedBy" colSpan="3" form-view="user-form"
                grid-view="user-grid"/>
              <field name="efficiencyCheckedOn" colSpan="3"/>
              <field name="analysisCheck" colSpan="6" widget="html"/>
            </panel>
            <panel name="causeAnalysisPanel" title="Cause analysis" colSpan="12">
              <field name="causesWrittenBy" form-view="user-form" grid-view="user-grid"/>
              <field name="causesWrittenOn"/>
              <field name="qiAnalysisCausesList" showTitle="false" colSpan="12"
                onChange="action-quality-improvement-record-set-causes-written-by-and-written-on"
                form-view="qi-analysis-cause-form" grid-view="qi-analysis-cause-grid"/>
            </panel>
            <panel name="taskPlanPanel" title="Action plan" colSpan="12">
              <field name="qiTasksList" showTitle="false" colSpan="12"
                onChange="action-quality-improvement-method-set-advancement"
                form-view="qi-task-form" grid-view="qi-task-grid"/>
              <panel name="qiTaskListBtnsPannel" colSpan="12" itemSpan="6">
                <button
                  onClick="save,action-quality-improvement-validate-task-lines-selected-for-generation-of-qi-action-distributions,action-quality-improvement-method-generate-qi-action-distribution"
                  name="generateDistributionForResponsibles"
                  title="Generate distributions for responsibles"/>
                <button
                  onClick="save,action-quality-improvement-validate-task-lines-selected-for-generation-of-qi-action-distributions,action-quality-improvement-view-open-qi-action-distribution-select-partner-form"
                  name="generateDistributionForOther" title="Generate distributions for other"/>
              </panel>
            </panel>
            <panel name="distributionPanel" title="Distribution" colSpan="12">
              <field name="qiActionDistributionList" showTitle="false" colSpan="12"
                form-view="qi-action-distribution-form" grid-view="qi-action-distribution-grid"
                canNew="false" canRemove="false" canEdit="false"/>
              <button name="sendDistributionBtn" title="Send the distributions"
                onClick="save,action-quality-improvement-validate-distribution-lines-selected-for-send,action-quality-improvement-view-open-qi-action-distribution-send-form"/>
            </panel>
          </editor>
        </field>
      </panel>
      <panel name="analysisCostPanel" title="Analysis costs">
        <panel-dashlet name="costsListPanel" colSpan="6" height="350"
          action="custom:quality.improvements.costs.lists.per.decision"/>
        <panel-dashlet name="costsDistributionPanel" colSpan="6" height="350"
          action="chart:chart.quality.improvements.costs.distributions.per.decision"/>
      </panel>
    </panel-tabs>
    <panel-mail name="mailPanel">
      <mail-messages limit="4"/>
      <mail-followers/>
    </panel-mail>
  </form>

  <form name="qi-decision-distribution-send-form" title="Send QI Decision distributions"
    model="com.axelor.utils.db.Wizard"
    onNew="action-quality-improvement-attrs-set-qi-decision-distribution-list-on-new">
    <panel name="mainPanel" colSpan="12">
      <panel-related field="$qiDecisionDistributionList" title="Distributions"
        target="com.axelor.apps.quality.db.QIDecisionDistribution" type="one-to-many"
        grid-view="qi-decision-distribution-grid" form-view="qi-decision-distribution-form"
        colSpan="12" canNew="false"/>
      <field name="$qiDecisionDistributionMessageTemplate" title="Template"
        target="com.axelor.message.db.Template" type="many-to-one" required="true"
        domain="self.metaModel.name = 'QIDecisionDistribution'" grid-view="template-grid"
        form-view="template-form"/>
      <button name="sendDistributionBtn" title="Send the distributions"
        onClick="action-quality-improvement-method-send-qi-decision-distributions"
        showIf="$qiDecisionDistributionMessageTemplate"/>
    </panel>
  </form>

  <kanban name="quality-improvement-kanban" title="Quality improvement"
    model="com.axelor.apps.quality.db.QualityImprovement" columnBy="qiStatus"
    sequenceBy="technicalSeq" draggable="true" limit="10">
    <field name="type"/>
    <field name="qiDetection.origin"/>
    <field name="sequence"/>
    <field name="qiIdentification.supplierPartner.fullName"/>
    <field name="qiIdentification.detectedByInternal.fullName"/>
    <field name="qiIdentification.customerPartner.fullName"/>
    <field name="qiIdentification.product.fullName"/>
    <field name="qiIdentification.quantity"/>
    <field name="qiIdentification.nonConformingQuantity"/>
    <hilite color="danger" if="$get('qiDetection.origin') == 1"/>
    <hilite color="info" if="$get('qiDetection.origin') == 2"/>
    <hilite color="warning" if="$get('qiDetection.origin') == 3"/>
    <template>
    	<![CDATA[
  			<>
	    		<h4>{sequence}</h4>
  				<Box as="dl" mt={4}>
  					{qiDetection.origin == 1 && qiIdentification.supplierPartner.fullName &&
  						<Box>
  							<dt>{_t('Supplier')}</dt>
  							<Box as="dd" ms={2}>{qiIdentification.supplierPartner.fullName}</Box>
  						</Box>
  					}
  					{qiDetection.origin == 2 && qiIdentification.detectedByInternal.fullName &&
  						<Box>
  							<dt>{_t('Internal')}</dt>
  							<Box as="dd" ms={2}>{qiIdentification.detectedByInternal.fullName}</Box>
  						</Box>
  					}
  					{qiDetection.origin == 3 && qiIdentification.customerPartner.fullName &&
  						<Box>
  							<dt>{_t('Customer')}</dt>
  							<Box as="dd" ms={2}>{qiIdentification.customerPartner.fullName}</Box>
  						</Box>
  					}
  					{qiIdentification.product.fullName &&
  						<Box>
  							<dt>{_t('Product')}</dt>
  							<Box as="dd" ms={2}>{qiIdentification.product.fullName}</Box>
  						</Box>
  					}
  					{qiIdentification.quantity != 0 &&
  						<Box>
  							<dt>{_t('Quantity')}</dt>
  							<Box as="dd" ms={2}>{qiIdentification.quantity}</Box>
  						</Box>
  					}
  					{qiIdentification.nonConformingQuantity != 0 &&
  						<Box>
  							<dt>{_t('Non-Conforming quantity')}</dt>
  							<Box as="dd" ms={2}>{qiIdentification.nonConformingQuantity}</Box>
  						</Box>
  					}
  				</Box>
  				<Box d="flex" gap="4" mt={4}>
  					{type == 1 && <Badge bg="primary">{_t('Product')}</Badge>}
  					{type == 2 && <Badge bg="info">{_t('System')}</Badge>}

  					{qiDetection.origin == 1 && <Badge bg="danger">{_t('Supplier')}</Badge>}
  					{qiDetection.origin == 2 && <Badge bg="info">{_t('Internal')}</Badge>}
  					{qiDetection.origin == 3 && <Badge bg="warning">{_t('Customer')}</Badge>}
  				</Box>
  			</>
  		]]>
    </template>
  </kanban>

  <action-method name="action-quality-improvement-method-set-default-values-on-new">
    <call class="com.axelor.apps.quality.web.QualityImprovementController"
      method="setDefaultValues"/>
  </action-method>

  <action-attrs name="action-quality-improvement-attrs-set-defaults">
    <attribute name="title" for="qiIdentification.stockMove"
      expr="eval: com.axelor.i18n.I18n.get('Customer delivery note')" if="qiDetection?.origin == 3"/>
    <attribute name="title" for="qiIdentification.stockMove"
      expr="eval: com.axelor.i18n.I18n.get('Supplier delivery note')" if="qiDetection?.origin == 1"/>
    <attribute name="title" for="qiIdentification.stockMoveLine"
      expr="eval: com.axelor.i18n.I18n.get('Customer delivery note line')"
      if="qiDetection?.origin == 3"/>
    <attribute name="title" for="qiIdentification.stockMoveLine"
      expr="eval: com.axelor.i18n.I18n.get('Supplier delivery note line')"
      if="qiDetection?.origin == 1"/>
  </action-attrs>

  <action-attrs name="action-quality-improvement-attrs-set-qi-detection-domain">
    <attribute name="domain" for="qiDetection"
      expr="eval: &quot; self.origin = ${qiDetection?.origin} AND self.isProductOrigin = true &quot;"
      if="id != null &amp;&amp; type == 1"/>
    <attribute name="domain" for="qiDetection"
      expr="eval: &quot; self.origin = ${qiDetection?.origin} AND self.isSystemOrigin = true &quot;"
      if="id != null &amp;&amp; type == 2"/>
    <attribute name="domain" for="qiDetection" expr="eval: null" if="id == null"/>
  </action-attrs>

  <action-attrs name="action-quality-improvement-attrs-set-analysis-method-domain">
    <attribute name="domain" for="analysisMethod"
      expr="eval: &quot; self.isProduct = true AND self.isCritical = true &quot;"
      if="type == 1 &amp;&amp; (gravityTypeSelect != null &amp;&amp; gravityTypeSelect == 1)"/>
    <attribute name="domain" for="analysisMethod"
      expr="eval: &quot; self.isProduct = true AND self.isMajor = true &quot;"
      if="type == 1 &amp;&amp; (gravityTypeSelect != null &amp;&amp; gravityTypeSelect == 2)"/>
    <attribute name="domain" for="analysisMethod"
      expr="eval: &quot; self.isProduct = true AND self.isMinor = true &quot;"
      if="type == 1 &amp;&amp; (gravityTypeSelect != null &amp;&amp; gravityTypeSelect == 3)"/>
    <attribute name="domain" for="analysisMethod"
      expr="eval: &quot; self.isSystem = true AND self.isCritical = true &quot;"
      if="type == 2 &amp;&amp; (gravityTypeSelect != null &amp;&amp; gravityTypeSelect == 1)"/>
    <attribute name="domain" for="analysisMethod"
      expr="eval: &quot; self.isSystem = true AND self.isMajor = true &quot;"
      if="type == 2 &amp;&amp; (gravityTypeSelect != null &amp;&amp; gravityTypeSelect == 2)"/>
    <attribute name="domain" for="analysisMethod"
      expr="eval: &quot; self.isSystem = true AND self.isMinor = true &quot;"
      if="type == 2 &amp;&amp; (gravityTypeSelect != null &amp;&amp; gravityTypeSelect == 3)"/>
    <attribute name="domain" for="analysisMethod"
      expr="eval: &quot; self.isProduct = true &quot;"
      if="type == 1 &amp;&amp; gravityTypeSelect == 0"/>
    <attribute name="domain" for="analysisMethod"
      expr="eval: &quot; self.isSystem = true &quot;"
      if="type == 2 &amp;&amp; gravityTypeSelect == 0"/>
  </action-attrs>

  <action-attrs name="action-quality-improvement-attrs-set-contact-domain">
    <attribute name="domain" for="contact"
      expr="eval: &quot; self.isContact = true AND self.mainPartner = :customerPartner &quot;"
      if="qi?.qiDetection?.origin == 3"/>
    <attribute name="domain" for="contact"
      expr="eval: &quot; self.isContact = true AND self.mainPartner = :supplierPartner &quot;"
      if="qi?.qiDetection?.origin == 1"/>
  </action-attrs>

  <action-attrs name="action-qi-identification-attrs-set-detected-by-internal-domain">
    <attribute name="domain" for="detectedByInternal"
      expr="eval: &quot; self.isContact = true AND ${qi?.company?.id} MEMBER OF self.companySet &quot;"
      if="qi"/>
  </action-attrs>

  <action-attrs name="action-quality-improvement-attrs-set-stock-move-domain">
    <attribute name="domain" for="stockMove"
      expr="eval: &quot; self.saleOrder = :customerSaleOrder &quot;"
      if="qi?.qiDetection?.origin == 3"/>
    <attribute name="domain" for="stockMove"
      expr="eval: &quot; self.purchaseOrder = :supplierPurchaseOrder &quot;"
      if="qi?.qiDetection?.origin == 1"/>
  </action-attrs>

  <action-attrs name="action-quality-improvement-attrs-set-stock-move-line-domain">
    <attribute name="domain" for="stockMoveLine"
      expr="eval: &quot; self.saleOrderLine = :customerSaleOrderLine &quot;"
      if="qi?.qiDetection?.origin == 3"/>
    <attribute name="domain" for="stockMoveLine"
      expr="eval: &quot; self.purchaseOrderLine = :supplierPurchaseOrderLine &quot;"
      if="qi?.qiDetection?.origin == 1"/>
  </action-attrs>

  <action-attrs name="action-quality-improvement-attrs-set-operation-order-domain">
    <attribute name="domain" for="operationOrder"
      expr="eval: &quot; self.id IN (${manufOrder?.operationOrderList?.collect{it.id}.join(',')}) &quot;"
      if="!manufOrder.operationOrderList.isEmpty()"/>
    <attribute name="domain" for="operationOrder"
      expr="eval: &quot; self.id IN (0) &quot;" if="manufOrder.operationOrderList.isEmpty()"/>
  </action-attrs>

  <action-attrs
    name="action-quality-improvement-attrs-set-to-consume-prod-product-domain">
    <attribute name="domain" for="toConsumeProdProduct"
      expr="eval: &quot; self.id IN (${manufOrder?.toConsumeProdProductList?.collect{it.id}.join(',')}) &quot;"
      if="!manufOrder.toConsumeProdProductList.isEmpty()"/>
    <attribute name="domain" for="toConsumeProdProduct"
      expr="eval: &quot; self.id IN (0) &quot;" if="manufOrder.toConsumeProdProductList.isEmpty()"/>
  </action-attrs>

  <action-attrs name="action-quality-improvement-attrs-set-consume-prod-product-domain">
    <attribute name="domain" for="consumeProdProduct"
      expr="eval: &quot; self.id IN (${manufOrder?.consumedStockMoveLineList?.collect{it.id}.join(',')}) &quot;"
      if="!manufOrder.consumedStockMoveLineList.isEmpty()"/>
    <attribute name="domain" for="consumeProdProduct"
      expr="eval: &quot; self.id IN (0) &quot;" if="manufOrder.consumedStockMoveLineList.isEmpty()"/>
  </action-attrs>

  <action-group name="action-quality-improvement-group-on-load">
    <action name="action-quality-improvement-attrs-set-defaults" if="qiDetection"/>
    <action name="action-quality-improvement-attrs-set-dummy-field-values-onload"
      if="qiIdentification"/>
    <action name="action-quality-improvement-refresh-analysis-costs-dashlets"/>
  </action-group>

  <action-group name="action-quality-improvement-group-customer-partner-on-change">
    <action name="action-quality-improvement-validate-customer-partner-on-change"/>
    <action name="action-quality-improvement-record-customer-partner-on-change-set-values"/>
    <action name="action-quality-improvement-method-set-written-on-and-written-by"/>
    <action name="action-quality-improvement-attrs-set-dummy-field-values"/>
  </action-group>

  <action-group name="action-quality-improvement-group-supplier-partner-on-change">
    <action name="action-quality-improvement-validate-supplier-partner-on-change"/>
    <action name="action-quality-improvement-record-supplier-partner-on-change-set-values"/>
    <action name="action-quality-improvement-method-set-written-on-and-written-by"/>
    <action name="action-quality-improvement-attrs-set-dummy-field-values"/>
  </action-group>

  <action-group name="action-quality-improvement-group-customer-sale-order-on-change">
    <action name="action-quality-improvement-validate-customer-sale-order-on-change"/>
    <action name="action-quality-improvement-record-customer-sale-order-on-change-set-values"/>
    <action name="action-quality-improvement-method-set-written-on-and-written-by"/>
    <action name="action-quality-improvement-attrs-set-dummy-field-values"/>
  </action-group>

  <action-group
    name="action-quality-improvement-group-customer-sale-order-line-on-change">
    <action name="action-quality-improvement-validate-customer-sale-order-line-on-change"/>
    <action
      name="action-quality-improvement-record-customer-sale-order-line-on-change-set-values"/>
    <action name="action-quality-improvement-method-set-written-on-and-written-by"/>
    <action name="action-quality-improvement-attrs-set-dummy-field-values"/>
  </action-group>

  <action-group
    name="action-quality-improvement-group-supplier-purchase-order-on-change">
    <action name="action-quality-improvement-validate-supplier-purchase-order-on-change"/>
    <action
      name="action-quality-improvement-record-supplier-purchase-order-on-change-set-values"/>
    <action name="action-quality-improvement-method-set-written-on-and-written-by"/>
    <action name="action-quality-improvement-attrs-set-dummy-field-values"/>
  </action-group>

  <action-group
    name="action-quality-improvement-group-supplier-purchase-order-line-on-change">
    <action name="action-quality-improvement-validate-supplier-purchase-order-line-on-change"/>
    <action
      name="action-quality-improvement-record-supplier-purchase-order-line-on-change-set-values"/>
    <action name="action-quality-improvement-method-set-written-on-and-written-by"/>
    <action name="action-quality-improvement-attrs-set-dummy-field-values"/>
  </action-group>

  <action-group name="action-quality-improvement-group-stock-move-on-change">
    <action name="action-quality-improvement-validate-stock-move-on-change"/>
    <action name="action-quality-improvement-record-stock-move-on-change-set-values"/>
    <action name="action-quality-improvement-method-set-written-on-and-written-by"/>
    <action name="action-quality-improvement-attrs-set-dummy-field-values"/>
  </action-group>

  <action-group name="action-quality-improvement-group-stock-move-line-on-change">
    <action name="action-quality-improvement-method-set-written-on-and-written-by"/>
    <action name="action-quality-improvement-attrs-set-dummy-field-values"/>
  </action-group>

  <action-group name="action-quality-improvement-group-manuf-order-on-change">
    <action name="action-quality-improvement-validate-manuf-order-on-change"/>
    <action name="action-quality-improvement-record-manuf-order-on-change-set-values"/>
    <action name="action-quality-improvement-method-set-written-on-and-written-by"/>
    <action name="action-quality-improvement-attrs-set-dummy-field-values"/>
  </action-group>

  <action-attrs name="action-quality-improvement-attrs-set-dummy-field-values">
    <attribute name="value" for="$dummyCustomerPartner" expr="eval: customerPartner"
      if="customerPartner != null"/>
    <attribute name="value" for="$dummySupplierPartner" expr="eval: supplierPartner"
      if="supplierPartner != null"/>
    <attribute name="value" for="$dummyCustomerSaleOrder" expr="eval: customerSaleOrder"
      if="customerSaleOrder != null"/>
    <attribute name="value" for="$dummyCustomerSaleOrderLine"
      expr="eval: customerSaleOrderLine" if="customerSaleOrderLine != null"/>
    <attribute name="value" for="$dummySupplierPurchaseOrder"
      expr="eval: supplierPurchaseOrder" if="supplierPurchaseOrder != null"/>
    <attribute name="value" for="$dummySupplierPurchaseOrderLine"
      expr="eval: supplierPurchaseOrderLine" if="supplierPurchaseOrderLine != null"/>
    <attribute name="value" for="$dummyStockMove" expr="eval: stockMove"
      if="stockMove != null"/>
    <attribute name="value" for="$dummyStockMoveLine" expr="eval: stockMoveLine"
      if="stockMoveLine != null"/>
    <attribute name="value" for="$dummyManufOrder" expr="eval: manufOrder"
      if="manufOrder != null"/>
  </action-attrs>

  <action-attrs name="action-quality-improvement-attrs-set-dummy-field-values-onload">
    <attribute name="value" for="qiIdentification.$dummyCustomerPartner"
      expr="eval: qiIdentification.customerPartner" if="qiIdentification.customerPartner != null"/>
    <attribute name="value" for="qiIdentification.$dummySupplierPartner"
      expr="eval: qiIdentification.supplierPartner" if="qiIdentification.supplierPartner != null"/>
    <attribute name="value" for="qiIdentification.$dummyCustomerSaleOrder"
      expr="eval: qiIdentification.customerSaleOrder"
      if="qiIdentification.customerSaleOrder != null"/>
    <attribute name="value" for="qiIdentification.$dummyCustomerSaleOrderLine"
      expr="eval: qiIdentification.customerSaleOrderLine"
      if="qiIdentification.customerSaleOrderLine != null"/>
    <attribute name="value" for="qiIdentification.$dummySupplierPurchaseOrder"
      expr="eval: qiIdentification.supplierPurchaseOrder"
      if="qiIdentification.supplierPurchaseOrder != null"/>
    <attribute name="value" for="qiIdentification.$dummySupplierPurchaseOrderLine"
      expr="eval: qiIdentification.supplierPurchaseOrderLine"
      if="qiIdentification.supplierPurchaseOrderLine != null"/>
    <attribute name="value" for="qiIdentification.$dummyStockMove"
      expr="eval: qiIdentification.stockMove" if="qiIdentification.stockMove != null"/>
    <attribute name="value" for="qiIdentification.$dummyStockMoveLine"
      expr="eval: qiIdentification.stockMoveLine" if="qiIdentification.stockMoveLine != null"/>
    <attribute name="value" for="qiIdentification.$dummyManufOrder"
      expr="eval: qiIdentification.manufOrder" if="qiIdentification.manufOrder != null"/>
  </action-attrs>

  <action-attrs name="action-quality-improvement-attrs-on-validate-set-field-values">
    <attribute name="value" for="customerPartner" expr="eval: dummyCustomerPartner"/>
    <attribute name="value" for="supplierPartner" expr="eval: dummySupplierPartner"/>
    <attribute name="value" for="customerSaleOrder" expr="eval: dummyCustomerSaleOrder"/>
    <attribute name="value" for="customerSaleOrderLine"
      expr="eval: dummyCustomerSaleOrderLine"/>
    <attribute name="value" for="supplierPurchaseOrder"
      expr="eval: dummySupplierPurchaseOrder"/>
    <attribute name="value" for="supplierPurchaseOrderLine"
      expr="eval: dummySupplierPurchaseOrderLine"/>
    <attribute name="value" for="stockMove" expr="eval: dummyStockMove"/>
    <attribute name="value" for="stockMoveLine" expr="eval: dummyStockMoveLine"/>
    <attribute name="value" for="manufOrder" expr="eval: dummyManufOrder"/>
  </action-attrs>

  <action-validate
    name="action-quality-improvement-validate-customer-partner-on-change">
    <alert message="All fields related to the order will be reset, continue ?"
      if="customerSaleOrder != null || customerSaleOrderLine != null || stockMove != null || stockMoveLine != null"
      action="action-quality-improvement-attrs-on-validate-set-field-values"/>
  </action-validate>

  <action-validate
    name="action-quality-improvement-validate-supplier-partner-on-change">
    <alert message="All fields related to the order will be reset, continue ?"
      if="supplierPurchaseOrder != null || supplierPurchaseOrderLine != null || stockMove != null || stockMoveLine != null"
      action="action-quality-improvement-attrs-on-validate-set-field-values"/>
  </action-validate>

  <action-validate
    name="action-quality-improvement-validate-customer-sale-order-on-change">
    <alert
      message="The following fields will be reset: customer order, stock move and stock move line , continue ?"
      if="customerSaleOrderLine	 != null || stockMove != null || stockMoveLine != null"
      action="action-quality-improvement-attrs-on-validate-set-field-values"/>
  </action-validate>

  <action-validate
    name="action-quality-improvement-validate-customer-sale-order-line-on-change">
    <alert
      message="The following fields will be reset: customer stock move and customer stock move line , continue ?"
      if="stockMove != null || stockMoveLine != null"
      action="action-qi-improvement-attrs-on-validate-set-field-values"/>
    <alert message="Changing this value will change value of product, continue ?"
      if="customerSaleOrderLine != null &amp;&amp; product != null &amp;&amp; customerSaleOrderLine.product != product"
      action="action-quality-improvement-attrs-on-validate-set-field-values"/>
  </action-validate>

  <action-validate
    name="action-quality-improvement-validate-supplier-purchase-order-on-change">
    <alert
      message="The following fields will be reset: supplier order, stock move and stock move line , continue ?"
      if="supplierPurchaseOrderLine != null || stockMove != null || stockMoveLine != null"
      action="action-quality-improvement-attrs-on-validate-set-field-values"/>
  </action-validate>

  <action-validate
    name="action-quality-improvement-validate-supplier-purchase-order-line-on-change">
    <alert
      message="The following fields will be reset: supplier stock move and supplier stock move line , continue ?"
      if="stockMove != null || stockMoveLine != null"
      action="action-qi-improvement-attrs-on-validate-set-field-values"/>
    <alert message="Changing this value will change value of product, continue ?"
      if="supplierPurchaseOrderLine != null &amp;&amp; product != null &amp;&amp; supplierPurchaseOrderLine.product != product"
      action="action-quality-improvement-attrs-on-validate-set-field-values"/>
  </action-validate>

  <action-validate name="action-quality-improvement-validate-stock-move-on-change">
    <alert message="The following fields will be reset: stock move line , continue ?"
      if="stockMoveLine != null"
      action="action-quality-improvement-attrs-on-validate-set-field-values"/>
  </action-validate>

  <action-validate name="action-quality-improvement-validate-manuf-order-on-change">
    <alert
      message="The following fields will be reset: operation order line, manuf Order product to consume, consummed manuf order product , continue ?"
      if="operationOrder != null || toConsumeProdProduct != null || consummedProdProduct != null"
      action="action-quality-improvement-attrs-on-validate-set-field-values"/>
  </action-validate>

  <action-record
    name="action-quality-improvement-record-customer-sale-order-on-change-set-values"
    model="com.axelor.apps.quality.db.QIIdentification">
    <field name="customerSaleOrderLine" expr="eval: null"/>
    <field name="stockMove" expr="eval: null"/>
    <field name="stockMoveLine" expr="eval: null"/>
  </action-record>

  <action-record
    name="action-quality-improvement-record-customer-sale-order-line-on-change-set-values"
    model="com.axelor.apps.quality.db.QIIdentification">
    <field name="stockMove" expr="eval: null"/>
    <field name="stockMoveLine" expr="eval: null"/>
    <field name="product" expr="eval: customerSaleOrderLine.product"
      if="customerSaleOrderLine != null &amp;&amp; product != null &amp;&amp; customerSaleOrderLine.product != product"/>
  </action-record>

  <action-record
    name="action-quality-improvement-record-customer-partner-on-change-set-values"
    model="com.axelor.apps.quality.db.QIIdentification">
    <field name="contact" expr="eval: null"/>
    <field name="customerSaleOrder" expr="eval: null"/>
    <field name="customerSaleOrderLine" expr="eval: null"/>
    <field name="stockMove" expr="eval: null"/>
    <field name="stockMoveLine" expr="eval: null"/>
  </action-record>

  <action-record
    name="action-quality-improvement-record-supplier-partner-on-change-set-values"
    model="com.axelor.apps.quality.db.QIIdentification">
    <field name="contact" expr="eval: null"/>
    <field name="supplierPurchaseOrder" expr="eval: null"/>
    <field name="supplierPurchaseOrderLine" expr="eval: null"/>
    <field name="stockMove" expr="eval: null"/>
    <field name="stockMoveLine" expr="eval: null"/>
  </action-record>

  <action-record
    name="action-quality-improvement-record-supplier-purchase-order-on-change-set-values"
    model="com.axelor.apps.quality.db.QIIdentification">
    <field name="supplierPurchaseOrderLine" expr="eval: null"/>
    <field name="stockMove" expr="eval: null"/>
    <field name="stockMoveLine" expr="eval: null"/>
  </action-record>

  <action-record
    name="action-quality-improvement-record-supplier-purchase-order-line-on-change-set-values"
    model="com.axelor.apps.quality.db.QIIdentification">
    <field name="stockMove" expr="eval: null"/>
    <field name="stockMoveLine" expr="eval: null"/>
    <field name="product" expr="eval: supplierPurchaseOrderLine.product"
      if="supplierPurchaseOrderLine != null &amp;&amp; product != null &amp;&amp; supplierPurchaseOrderLine.product != product"/>
  </action-record>

  <action-record
    name="action-quality-improvement-record-stock-move-on-change-set-values"
    model="com.axelor.apps.quality.db.QIIdentification">
    <field name="stockMoveLine" expr="eval: null"/>
  </action-record>

  <action-record
    name="action-quality-improvement-record-manuf-order-on-change-set-values"
    model="com.axelor.apps.quality.db.QIIdentification">
    <field name="operationOrder" expr="eval: null"/>
    <field name="toConsumeProdProduct" expr="eval: null"/>
    <field name="consummedProdProduct" expr="eval: null"/>
  </action-record>

  <action-record
    name="action-quality-improvement-record-written-by-on-change-set-values"
    model="com.axelor.apps.quality.db.QIIdentification">
    <field name="writtenOn" expr="eval: __datetime__"/>
  </action-record>

  <action-method
    name="action-quality-improvement-method-set-written-on-and-written-by">
    <call class="com.axelor.apps.quality.web.QIIdentificationController"
      method="updateQIIdentification"/>
  </action-method>

  <action-record name="action-quality-improvement-record-set-default-written-on"
    model="com.axelor.apps.quality.db.QIResolution">
    <field name="defaultWrittenOn" expr="eval: __time__"
      if="!defaultWrittenOn &amp;&amp; defaultWrittenBy"/>
  </action-record>

  <action-record name="action-quality-improvement-record-set-decisions-written-on"
    model="com.axelor.apps.quality.db.QIResolution">
    <field name="decisionsWrittenOn" expr="eval: __time__"
      if="!decisionsWrittenOn &amp;&amp; decisionsWrittenBy"/>
  </action-record>

  <action-record
    name="action-quality-improvement-record-set-efficency-checked-by-and-checked-on"
    model="com.axelor.apps.quality.db.QIAnalysis">
    <field name="efficiencyCheckedBy" expr="eval: null" if="efficiencySelect == 1"/>
    <field name="efficiencyCheckedOn" expr="eval: null" if="efficiencySelect == 1"/>
    <field name="efficiencyCheckedBy" expr="eval: __user__"
      if="!efficiencyCheckedBy &amp;&amp; (efficiencySelect == 2 || efficiencySelect == 3)"/>
    <field name="efficiencyCheckedOn" expr="eval: __time__"
      if="!efficiencyCheckedOn &amp;&amp; (efficiencySelect == 2 || efficiencySelect == 3)"/>
  </action-record>

  <action-record
    name="action-quality-improvement-record-set-causes-written-by-and-written-on"
    model="com.axelor.apps.quality.db.QIAnalysis">
    <field name="causesWrittenBy" expr="eval: null" if="qiAnalysisCausesList.isEmpty()"/>
    <field name="causesWrittenOn" expr="eval: null" if="qiAnalysisCausesList.isEmpty()"/>
    <field name="causesWrittenBy" expr="eval: __user__"
      if="!qiAnalysisCausesList.isEmpty() &amp;&amp; !causesWrittenBy"/>
    <field name="causesWrittenOn" expr="eval: __time__"
      if="!qiAnalysisCausesList.isEmpty() &amp;&amp; !causesWrittenOn"/>
  </action-record>

  <action-method name="action-quality-improvement-method-set-advancement">
    <call class="com.axelor.apps.quality.web.QIAnalysisController" method="setAdvancement"/>
  </action-method>

  <action-attrs name="action-quality-improvement-refresh-analysis-costs-dashlets">
    <attribute name="refresh" for="costsListPanel" expr="eval: true"/>
    <attribute name="refresh" for="costsDistributionPanel" expr="eval: true"/>
  </action-attrs>

  <action-validate
    name="action-quality-improvement-validate-task-lines-selected-for-generation-of-qi-action-distributions">
    <error message="Please select at least a line to generate a distribution."
      if="qiTasksList?.findAll{ it.selected }.size() == 0"/>
  </action-validate>

  <action-validate
    name="action-quality-improvement-validate-distribution-lines-selected-for-send">
    <error message="Please select at least a line to send a distribution."
      if="qiActionDistributionList?.findAll{ it.selected }.size() == 0"/>
  </action-validate>

  <action-method name="action-quality-improvement-method-send-mail">
    <call class="com.axelor.apps.quality.web.QIAnalysisController"
      method="sendQIActionDistributions"/>
  </action-method>

  <action-method
    name="action-quality-improvement-method-generate-qi-action-distribution">
    <call class="com.axelor.apps.quality.web.QIAnalysisController"
      method="generateQIActionDistribution"/>
  </action-method>

  <action-method
    name="action-quality-improvement-method-generate-qi-action-distribution-for-others">
    <call class="com.axelor.apps.quality.web.QIAnalysisController"
      method="generateQIActionDistributionForOthers"/>
  </action-method>

  <action-view
    name="action-quality-improvement-view-open-qi-action-distribution-select-partner-form"
    title="Select recepient partner for QI Action distribution"
    model="com.axelor.apps.quality.db.QIActionDistribution">
    <view type="form" name="qi-action-distribution-select-recepient-partner-form"/>
    <view-param name="popup" value="reload"/>
    <view-param name="popup-save" value="false"/>
    <view-param name="show-toolbar" value="false"/>
    <view-param name="show-confirm" value="false"/>
    <context name="_qiAnalysis" expr="eval:__this__"/>
  </action-view>

  <form name="qi-action-distribution-select-recepient-partner-form"
    title="Select recepient partner for QI Action distribution"
    model="com.axelor.apps.quality.db.QIActionDistribution">
    <panel name="mainPanel">
      <field name="$recipient" title="Recipient" type="integer" min="1" max="100"
        selection="quality.qi.resolution.decision.responsible.select"/>
      <field name="$recipientPartner" type="many-to-one"
        target="com.axelor.apps.base.db.Partner" title="Recipient name" grid-view="partner-grid"
        form-view="partner-form"/>
      <button
        onClick="action-quality-improvement-method-generate-qi-action-distribution-for-others,close"
        name="generateDistributions" title="Generate distributions for other"/>
    </panel>
  </form>

  <action-attrs
    name="action-quality-improvement-attrs-set-qi-actions-distribution-list-on-new">
    <attribute name="value" for="$qiActionDistributionList"
      expr="eval: _qiActionDistributionList"/>
  </action-attrs>

  <action-view
    name="action-quality-improvement-view-open-qi-action-distribution-send-form"
    title="Send QI Action distributions" model="com.axelor.utils.db.Wizard">
    <view type="form" name="qi-action-distribution-wizard-form"/>
    <view-param name="popup" value="reload"/>
    <view-param name="popup-save" value="false"/>
    <view-param name="show-toolbar" value="false"/>
    <view-param name="show-confirm" value="false"/>
    <context name="_qiActionDistributionList"
      expr="eval: qiActionDistributionList?.findAll{ it.selected }"/>
  </action-view>

  <form name="qi-action-distribution-wizard-form" title="Send QI Action distributions"
    model="com.axelor.utils.db.Wizard"
    onNew="action-quality-improvement-attrs-set-qi-actions-distribution-list-on-new">
    <panel name="mainPanel" colSpan="12">
      <panel-related field="$qiActionDistributionList"
        grid-view="qi-action-distribution-grid" form-view="qi-action-distribution-form"
        title="Distributions" target="com.axelor.apps.quality.db.QIActionDistribution"
        type="one-to-many" colSpan="12" canNew="false" canEdit="false" canRemove="false"/>
      <field name="$qiActionDistributionMessageTemplate" title="Template"
        target="com.axelor.message.db.Template" target-name="name" type="many-to-one"
        required="true" canSelect="true" domain="self.metaModel.name = 'QIActionDistribution'"/>
      <button onClick="action-quality-improvement-method-send-mail"
        name="sendTheDistributions" title="Send the distributions"
        showIf="$qiActionDistributionMessageTemplate != null"/>
    </panel>
  </form>

  <action-validate
    name="action-quality-improvement-validate-lines-selected-for-generation">
    <error message="Please select at least a line to generate a distribution."
      if="qiResolutionDecisionsList?.findAll{ it.selected }.size() == 0"/>
  </action-validate>

  <action-method
    name="action-quality-improvement-method-generate-qi-decision-distributions">
    <call class="com.axelor.apps.quality.web.QIResolutionController"
      method="generateQIDecisionDistributions"/>
  </action-method>

  <action-validate
    name="action-quality-improvement-validate-lines-selected-for-send">
    <error message="Please select at least a line to send a distribution."
      if="qiDecisionDistributionList?.findAll{ it.selected }.size() == 0"/>
  </action-validate>

  <action-method
    name="action-quality-improvement-method-send-qi-decision-distributions">
    <call class="com.axelor.apps.quality.web.QIResolutionController"
      method="sendQIDecisionDistributions"/>
  </action-method>

  <action-view
    name="action-quality-improvement-view-open-qi-decision-distribution-send-form"
    title="Send QI Decision distributions" model="com.axelor.utils.db.Wizard">
    <view type="form" name="qi-decision-distribution-send-form"/>
    <view-param name="popup" value="reload"/>
    <view-param name="popup-save" value="false"/>
    <view-param name="show-toolbar" value="false"/>
    <view-param name="show-confirm" value="false"/>
    <context name="_qiDecisionDistributionList"
      expr="eval: qiDecisionDistributionList?.findAll{ it.selected }"/>
  </action-view>

  <action-attrs
    name="action-quality-improvement-attrs-set-qi-decision-distribution-list-on-new">
    <attribute name="value" for="$qiDecisionDistributionList"
      expr="eval: _qiDecisionDistributionList"/>
  </action-attrs>

</object-views>
