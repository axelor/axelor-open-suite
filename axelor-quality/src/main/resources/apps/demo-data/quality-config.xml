<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_6.1.xsd">

  <input file="base_sequence.csv" separator=";" type="com.axelor.apps.base.db.Sequence"
    search="self.importId = :importId" call="com.axelor.csv.script.ImportSequence:importSequence">
    <bind to="yearlyResetOk" column="yearlyResetOk" eval="yearlyResetOk == '1' ? true : false"
      if="yearlyResetOk"/>
    <bind to="nextNum" column="nextNum" eval="nextNum?.empty ? '1' : nextNum"/>
    <bind to="padding" column="padding" eval="padding?.empty ? '1' : padding"/>
    <bind to="toBeAdded" column="toBeAdded" eval="toBeAdded?.empty ? '1' : toBeAdded"/>
    <bind to="resetDate"
      eval="call:com.axelor.apps.base.service.app.AppBaseService:getTodayDate(null)"/>
  </input>

  <input file="quality_qiAction.csv" separator=";" type="com.axelor.apps.quality.db.QIAction"
    search="self.importId = :importId"/>

  <input file="quality_qiDefault.csv" separator=";"
    type="com.axelor.apps.quality.db.QIDefault" search="self.importId = :importId"/>

  <input file="quality_qiDetection.csv" separator=";"
    type="com.axelor.apps.quality.db.QIDetection" search="self.importId = :importId"/>

  <input file="quality_qiProcess.csv" separator=";"
    type="com.axelor.apps.quality.db.QIProcess" search="self.importId = :importId"/>

  <input file="quality_qiStatus.csv" separator=";" type="com.axelor.apps.quality.db.QIStatus"
    search="self.importId = :importId"/>

  <input file="quality_qiAnalysisMethod.csv" separator=";"
    type="com.axelor.apps.quality.db.QIAnalysisMethod" search="self.importId = :importId"/>

  <input file="quality_qiAnalysisMethodItem.csv" separator=";"
    type="com.axelor.apps.quality.db.QIAnalysisMethodItem" search="self.importId = :importId"/>

  <input file="quality_qiCause.csv" separator=";" type="com.axelor.apps.quality.db.QICause"
    search="self.importId = :importId"/>

  <input file="quality_qiDecision.csv" separator=";"
    type="com.axelor.apps.quality.db.QIDecision" search="self.importId = :importId"/>

  <input file="quality_qiDecisionConfigCompany.csv" separator=";"
    type="com.axelor.apps.quality.db.QIDecisionConfigCompany" search="self.importId = :importId"/>

  <input file="quality_qualityImprovement.csv" separator=";"
    type="com.axelor.apps.quality.db.QualityImprovement" search="self.importId = :importId">
    <bind to="sequence"
      eval="call:com.axelor.apps.base.service.administration.SequenceService:getSequenceNumber(com.axelor.apps.base.db.repo.SequenceRepository.QUALITY_IMPROVEMENT,com.axelor.apps.quality.db.QualityImprovement,'sequence')"/>
  </input>

  <input file="quality_qiIdentification.csv" separator=";"
    type="com.axelor.apps.quality.db.QIIdentification" search="self.importId = :importId">
    <bind to="writtenOn"
      eval="call:com.axelor.csv.script.ImportDateTime:importDateTime(writtenOn)" column="writtenOn"/>
  </input>

  <input file="quality_qiResolution.csv" separator=";"
    type="com.axelor.apps.quality.db.QIResolution" search="self.importId = :importId">
    <bind to="defaultWrittenOn"
      eval="call:com.axelor.csv.script.ImportDateTime:importDateTime(defaultWrittenOn)"
      column="defaultWrittenOn"/>
    <bind to="decisionsWrittenOn"
      eval="call:com.axelor.csv.script.ImportDateTime:importDateTime(decisionsWrittenOn)"
      column="decisionsWrittenOn"/>
  </input>

  <input file="quality_qiResolutionDefault.csv" separator=";"
    type="com.axelor.apps.quality.db.QIResolutionDefault" search="self.importId = :importId">
    <bind column="trackingNumbersSet" to="trackingNumbersSet"
      search="self.trackingNumberSeq in :trackingNumbersSet"
      eval="(trackingNumbersSet != null ? trackingNumbersSet.split('\\|') : []) as List"/>
  </input>

  <input file="quality_qiResolutionDecision.csv" separator=";"
    type="com.axelor.apps.quality.db.QIResolutionDecision" search="self.importId = :importId"/>

  <input file="quality_qiAnalysisCause.csv" separator=";"
    type="com.axelor.apps.quality.db.QIAnalysisCause" search="self.importId = :importId">
  </input>

  <input file="quality_qiTask.csv" separator=";" type="com.axelor.apps.quality.db.QITask"
    search="self.importId = :importId">
    <bind to="startDateTime"
      eval="call:com.axelor.csv.script.ImportDateTime:importDateTime(startDateTime)"
      column="startDateTime"/>
    <bind to="endDateTime"
      eval="call:com.axelor.csv.script.ImportDateTime:importDateTime(endDateTime)"
      column="endDateTime"/>
    <bind column="qiResolutionDefaultsSet" to="qiResolutionDefaultsSet"
      search="self.importId in :qiResolutionDefaultsSet"
      eval="qiResolutionDefaultsSet.split('\\|') as List"/>
  </input>

  <input file="quality_qiAnalysis.csv" separator=";"
    type="com.axelor.apps.quality.db.QIAnalysis" search="self.importId = :importId">
    <bind to="causesWrittenOn"
      eval="call:com.axelor.csv.script.ImportDateTime:importDateTime(causesWrittenOn)"
      column="causesWrittenOn"/>
    <bind to="earliestDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(earliestDate)"
      column="earliestDate"/>
    <bind to="latestDate"
      eval="call:com.axelor.csv.script.ImportDateTime:importDate(latestDate)" column="latestDate"/>
    <bind column="qiAnalysisCausesList" to="qiAnalysisCausesList"
      search="self.importId in :qiAnalysisCausesList"
      eval="qiAnalysisCausesList.split('\\|') as List"/>
    <bind column="qiTasksList" to="qiTasksList" search="self.importId in :qiTasksList"
      eval="qiTasksList.split('\\|') as List"/>
  </input>
</csv-inputs>