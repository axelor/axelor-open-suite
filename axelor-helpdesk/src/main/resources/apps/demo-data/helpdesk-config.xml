<?xml version="1.0" encoding="UTF-8"?>
<csv-inputs xmlns="http://axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_7.4.xsd">

  <adapter name="LocalDateTime" type="com.axelor.data.adapter.JavaTimeAdapter">
    <option name="type" value="LocalDateTime"/>
    <option name="format" value="dd/MM/yy HH:mm"/>
  </adapter>

  <input file="helpdesk_ticketType.csv" separator=";"
    type="com.axelor.apps.helpdesk.db.TicketType" search="self.importId = :importId">
    <bind column="name" to="name"
      check="com.axelor.utils.helpers.ImportHelper.isValuePresent(name)"
      check-message="Name must not be null"/>
  </input>

  <input file="helpdesk_ticket.csv" separator=";" type="com.axelor.apps.helpdesk.db.Ticket"
    search="self.importId = :importId" call="com.axelor.csv.script.ImportTicket:importTicket">
    <bind column="subject" to="subject"
      check="com.axelor.utils.helpers.ImportHelper.isValuePresent(subject)"
      check-message="Subject must not be null"/>
    <bind column="progressSelect" to="progressSelect"
      check="com.axelor.utils.helpers.ImportHelper.checkSelection('com.axelor.apps.helpdesk.db.Ticket', 'progressSelect', progressSelect)"
      check-message="Invalid progressSelect"/>
    <bind column="prioritySelect" to="prioritySelect"
      check="com.axelor.utils.helpers.ImportHelper.checkSelection('com.axelor.apps.helpdesk.db.Ticket', 'prioritySelect', prioritySelect)"
      check-message="Invalid prioritySelect"/>
    <bind to="startDateT" column="startDateT" adapter="LocalDateTime"/>
    <bind to="endDateT" column="endDateT" adapter="LocalDateTime"/>
  </input>

  <input file="base_sequence.csv" separator=";" type="com.axelor.apps.base.db.Sequence"
    search="self.importId = :importId" call="com.axelor.csv.script.ImportSequence:importSequence">
    <bind column="codeSelect" to="codeSelect"
      check="com.axelor.utils.helpers.ImportHelper.checkSelection('com.axelor.apps.base.db.Sequence', 'codeSelect', codeSelect)"
      check-message="Invalid codeSelect"/>
    <bind column="name" to="name"
      check="com.axelor.utils.helpers.ImportHelper.isValuePresent(name)"
      check-message="Name must not be null"/>
    <bind column="sequenceTypeSelect" to="sequenceTypeSelect"
      check="com.axelor.utils.helpers.ImportHelper.isValuePresent(sequenceTypeSelect)"
      check-message="Sequence type must not be null"/>
    <bind column="company_importId" to="company" search="self.importId = :company_importId"
      check="com.axelor.utils.helpers.ImportHelper.checkUniqueConstraint('com.axelor.apps.base.db.Sequence', 'importId', importId, 'company.importId, codeSelect, prefixe, suffixe', company_importId, codeSelect, prefixe, suffixe)"
      check-message="Company, code, prefixe and suffixe must be unique"/>
    <bind to="yearlyResetOk" column="yearlyResetOk" eval="yearlyResetOk == '1' ? true : false"
      if="yearlyResetOk"/>
    <bind to="nextNum" column="nextNum" eval="nextNum?.empty ? '1' : nextNum"/>
    <bind to="padding" column="padding" eval="padding?.empty ? '1' : padding"/>
    <bind to="toBeAdded" column="toBeAdded" eval="toBeAdded?.empty ? '1' : toBeAdded"/>
  </input>

</csv-inputs>