<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_7.0.xsd">

  <grid name="prod-process-grid" title="Production process"
    model="com.axelor.apps.production.db.ProdProcess">
    <field name="name"/>
    <field name="company" if="__config__.app.getApp('base')?.getEnableMultiCompany()"/>
    <field name="workshopStockLocation"
      if="__config__.app.getApp('production')?.getManageWorkshop()"/>
    <field name="code" x-bind="{{code|unaccent|uppercase}}"/>
    <field name="stockLocation" grid-view="stock-location-grid"
      form-view="stock-location-form"/>
    <field name="product"/>
    <field name="statusSelect"/>
  </grid>

  <form name="prod-process-form" title="Production process"
    model="com.axelor.apps.production.db.ProdProcess" onNew="action-prod-process-group-on-new"
    onLoad="action-prod-process-group-on-load"
    onSave="action-prod-process-method-validate-prod-process" width="large">

    <toolbar>
      <button name="printBtn" title="Print" icon="fa-print"
        onClick="save,action-method-print-birt"/>
      <button name="newVersionBtn" title="Generate new version"
        if="__config__.app.getApp('production')?.manageProdProcessVersion"
        onClick="action-production-process-check-other-version,action-production-process-generate-new-version"/>
    </toolbar>

    <panel name="mainPanel">
      <field name="statusSelect" showTitle="false" colSpan="12" readonly="false"
        widget="NavSelect"/>
      <panel name="namePanel" stacked="true" colSpan="8">
        <field name="fullName" hidden="true" showIf="$readonly()" showTitle="false"
          css="label-bold bold large"/>
        <field name="name" hidden="true" showIf="!$readonly()" css="label-bold bold large"/>
      </panel>
      <field name="$numberOfPhases" showTitle="false" type="integer" readonly="true"
        showIf="$numberOfPhases > 0" colSpan="4">
        <viewer depends="$numberOfPhases">
                    <![CDATA[
						<>
	                    	<Box d="flex" justifyContent="flex-end">
	                    		<Badge style={{ backgroundColor: "#2185D0" }}>
	                    			{_t('Number of phases')} <Badge style={{ backgroundColor: "#23C6C8", fontSize: "12px" }}>{$fmt('$numberOfPhases')}</Badge>
	                    		</Badge>
	                    	</Box>
						</>
					]]>
        </viewer>
      </field>
      <field name="code" x-bind="{{code|unaccent|uppercase}}"/>
      <field name="product" requiredIf="!isEnabledForAllProducts" canEdit="false"
        grid-view="product-grid" form-view="product-form"
        domain="self.productTypeSelect = 'storable' AND self.dtype = 'Product'"/>
      <field name="company" canEdit="false" widget="SuggestBox" form-view="company-form"
        grid-view="company-grid"/>
      <field name="workshopStockLocation" canEdit="false"
        domain="self.usableOnProduction = True AND self.company = :company and self.typeSelect = 1 and self.isWorkshop = true"
        if="__config__.app.getApp('production')?.getManageWorkshop()"/>
    </panel>

    <panel-tabs>

      <panel-related title="Phases" name="prodProcessLineListPanel"
        field="prodProcessLineList" colSpan="12" height="15"
        onChange="action-prod-process-record-count-number-of-phases"
        grid-view="prod-process-line-grid" form-view="prod-process-line-form"/>

      <panel title="Details" name="detailsPanel">
        <field name="stockLocation" canEdit="false" required="true"
          grid-view="stock-location-grid" form-view="stock-location-form"
          onChange="action-prod-process-record-set-second-location"
          domain="self.usableOnProduction = True AND self.company = :company AND self.typeSelect != 3"/>
        <field name="producedProductStockLocation" canEdit="false"
          grid-view="stock-location-grid" form-view="stock-location-form"
          domain="self.usableOnProduction = True AND self.company = :company AND self.typeSelect != 3"/>
        <field name="launchQty"/>
        <field name="stockMoveRealizeOrderSelect"/>
        <field name="isConsProOnOperation" onChange="action-prod-process-validate-is-cons-pro"
          readonlyIf="isEnabledForAllProducts"/>
        <panel name="outsourcePanel"
          if="__config__.app.getApp('production')?.getManageOutsourcing()" colSpan="12"
          showTitle="false">
          <field name="outsourcing" colSpan="4"
            onChange="action-prod-process-method-change-prodprocesslist-outsourcing"
            if="__config__.app.getApp('production')?.getManageOutsourcing()"
            readonlyIf="outsourcable || prodProcessLinesOutsourcable"/>
          <field name="outsourcable" colSpan="4"
            onChange="action-prod-process-method-change-prodprocesslist-outsourcing"
            if="__config__.app.getApp('production')?.getManageOutsourcing()"
            readonlyIf="outsourcing || prodProcessLinesOutsourcable"/>
          <field name="prodProcessLinesOutsourcable" colSpan="4"
            onChange="action-prod-process-method-change-prodprocesslist-outsourcing"
            if="__config__.app.getApp('production')?.getManageOutsourcing()"
            readonlyIf="outsourcing || outsourcable"/>
          <field name="subcontractor" domain="self.isSubcontractor = true" colSpan="4"
            onChange="action-production-record-subcontractor-on-change"
            if="__config__.app.getApp('production')?.getManageOutsourcing()"
            showIf="outsourcing || outsourcable" requiredIf="outsourcing || outsourcable"
            form-view="partner-form"/>
          <field name="generatePurchaseOrderOnMoPlanning" colSpan="4"
            if="__config__.app.getApp('production')?.getManageOutsourcing()"
            showIf="outsourcing || outsourcable"/>
        </panel>

        <field name="isEnabledForAllProducts" colSpan="4" readonlyIf="isConsProOnOperation"/>
        <spacer colSpan="2"/>
        <field name="operationContinuity"/>

      </panel>

      <panel-dashlet name="viewBillOfMaterialsPanel"
        action="action-prod-process-view-bill-of-materials" title="Bills of material"/>

    </panel-tabs>

    <panel name="versionManagementPanel" title="Version management" hidden="true"
      showIf="versionNumber &gt; 1">
      <field name="versionNumber" colSpan="3"/>
      <field name="originalProdProcess" grid-view="prod-process-grid"
        form-view="prod-process-form" colSpan="3" readonly="true"/>
    </panel>

    <panel-mail name="mailPanel">
      <mail-messages limit="4"/>
      <mail-followers/>
    </panel-mail>
  </form>

  <action-attrs name="action-prod-process-attrs-scale-and-precision">
    <attribute name="scale" for="launchQty"
      expr="eval: __config__.app.getNbDecimalDigitForQty()"/>
  </action-attrs>

  <action-record name="action-production-record-subcontractor-on-change"
    model="com.axelor.apps.production.db.ProdProcess">
    <field name="outsourcingStockLocation" if="subcontractor != null"
      expr="eval: subcontractor?.partnerStockSettingsList?.find{it.defaultStockLocation?.isOutsourcingLocation == true} != null ?
	                                                                                  subcontractor?.partnerStockSettingsList?.find{it.defaultStockLocation?.isOutsourcingLocation == true}?.defaultStockLocation :
	                                                                                  company?.stockConfig?.virtualOutsourcingStockLocation"/>
  </action-record>

  <action-group name="action-prod-process-group-on-new">
    <action name="action-prod-process-default-record" if="_product"/>
    <action name="action-prod-process-record-set-default-company"/>
    <action name="action-prod-process-record-set-realize-order-select"/>
    <action name="action-prod-process-attrs-scale-and-precision"/>
    <action name="action-prod-process-attrs-hide-operation-continuity"/>
    <action name="action-prod-process-record-true-operation-continuity"/>
    <action name="action-prod-process-record-generate-purchase-order-default"/>
  </action-group>

  <action-group name="action-prod-process-group-on-load">
    <action name="action-prod-process-record-count-number-of-phases"/>
    <action name="action-prod-process-attrs-hide-outsourcing"/>
    <action name="action-prod-process-attrs-scale-and-precision"/>
    <action name="action-prod-process-attrs-hide-operation-continuity"/>
  </action-group>

  <action-attrs name="action-prod-process-attrs-hide-outsourcing">
    <attribute name="hidden" for="prodProcessLineList.outsourcing"
      expr="eval:!__this__.outsourcing"/>
  </action-attrs>

  <action-attrs name="action-prod-process-attrs-hide-operation-continuity">
    <attribute name="hidden" for="operationContinuity"
      expr="eval: __config__.app.getApp('production')?.getOperationContinuitySelect() == __repo__(AppProduction).OPERATION_CONTINUITY_SELECT_NO_CONTINUITY"/>
  </action-attrs>

  <action-validate name="action-prod-process-validate-is-cons-pro">
    <error
      message="You can't manage the consumed products on phases because this production process is related to several bills of material"
      if="isConsProOnOperation == true &amp;&amp; __repo__(BillOfMaterial).all().filter('self.prodProcess.id = ?1', __self__ ? __self__.id : 0).fetch().size &gt; 1"
      action="action-prod-process-record-false"/>
  </action-validate>

  <action-record name="action-prod-process-record-generate-purchase-order-default"
    model="com.axelor.apps.production.db.ProdProcess">
    <field name="generatePurchaseOrderOnMoPlanning"
      expr="eval: __config__.app.getApp('production').manageOutsourcing &amp;&amp; __config__.app.getApp('production').generatePurchaseOrderOnMoPlanning"/>
  </action-record>

  <action-record name="action-prod-process-default-record"
    model="com.axelor.apps.production.db.ProdProcess">
    <field name="product" expr="eval:_product"/>
    <field name="name" expr="eval:_product?.name"/>
    <field name="code" expr="eval:_product?.code"/>
  </action-record>

  <action-record name="action-prod-process-record-false"
    model="com.axelor.apps.production.db.ProdProcess">
    <field name="isConsProOnOperation" expr="false"/>
  </action-record>

  <action-record name="action-prod-process-record-true-operation-continuity"
    model="com.axelor.apps.production.db.ProdProcess">
    <field name="operationContinuity" expr="true"
      if=" __config__.app.getApp('production')?.getOperationContinuitySelect() == __repo__(AppProduction).OPERATION_CONTINUITY_SELECT_CONTINUITY_BY_DEFAULT"/>
  </action-record>

  <action-method name="action-prod-process-method-validate-prod-process">
    <call class="com.axelor.apps.production.web.ProdProcessController"
      method="validateProdProcess"/>
  </action-method>

  <action-method name="action-prod-process-method-change-prodprocesslist-outsourcing">
    <call class="com.axelor.apps.production.web.ProdProcessController"
      method="changeProdProcessListOutsourcing"/>
  </action-method>

  <action-method name="action-production-process-check-other-version">
    <call class="com.axelor.apps.production.web.ProdProcessController"
      method="checkOriginalProductionProcess"/>
  </action-method>

  <action-method name="action-production-process-generate-new-version">
    <call class="com.axelor.apps.production.web.ProdProcessController"
      method="generateNewVersion"/>
  </action-method>

  <action-record name="action-prod-process-record-set-second-location"
    model="com.axelor.apps.production.db.ProdProcess">
    <field name="producedProductStockLocation" expr="eval: stockLocation"
      if="producedProductStockLocation == null"/>
  </action-record>

  <action-record name="action-prod-process-record-set-default-company"
    model="com.axelor.apps.production.db.ProdProcess">
    <field name="company" expr="eval: __user__.getActiveCompany()"/>
    <field name="workshopStockLocation" expr="eval:__user__.workshopStockLocation"
      if="__config__.app.getApp('production')?.getManageWorkshop() &amp;&amp; __user__.workshopStockLocation != null"/>
  </action-record>

  <action-record name="action-prod-process-record-set-realize-order-select"
    model="com.axelor.apps.production.db.ProdProcess">
    <field name="stockMoveRealizeOrderSelect"
      expr="__config__.app.getApp('production')?.getStockMoveRealizeOrderSelect()"/>
  </action-record>

  <action-record name="action-prod-process-record-count-number-of-phases"
    model="com.axelor.apps.production.db.ProdProcess">
    <field name="$numberOfPhases" expr="eval: prodProcessLineList.size()"/>
  </action-record>

  <action-view name="action-prod-process-view-bill-of-materials"
    title="Bill of materials" model="com.axelor.apps.production.db.BillOfMaterial">
    <view type="grid" name="bill-of-material-grid"/>
    <view type="form" name="bill-of-material-form"/>
    <domain>self.prodProcess.id = :prodProcessId</domain>
    <context name="prodProcessId" expr="eval: id"/>
  </action-view>

  <search-filters name="prod-process-filters"
    model="com.axelor.apps.production.db.ProdProcess" title="Prod process filters">
    <field name="company" hidden="true"
      if="!__config__.app.getApp('base')?.getEnableMultiCompany()"/>
    <field name="workshopStockLocation" hidden="true"
      if="!__config__.app.getApp('production')?.getManageWorkshop()"/>
  </search-filters>
</object-views>
