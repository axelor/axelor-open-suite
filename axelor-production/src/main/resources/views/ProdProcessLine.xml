<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_7.0.xsd">

  <grid name="prod-process-line-grid" title="Phases"
    model="com.axelor.apps.production.db.ProdProcessLine" orderBy="priority">
    <field name="priority" width="75"/>
    <field name="name"/>
    <field name="workCenter" grid-view="work-center-grid" form-view="work-center-form"/>
    <field name="outsourcing" width="115"
      if="__config__.app.getApp('production')?.getManageOutsourcing()"/>
    <field name="optional"/>
    <field name="description"/>
  </grid>

  <form name="prod-process-line-form" title="Phase"
    model="com.axelor.apps.production.db.ProdProcessLine"
    onNew="action-prod-process-line-record-default, action-prod-process-line-attrs-default"
    onLoad="action-prod-process-line-attrs-default,action-prod-process-line-attrs-hide-duration"
    width="large">
    <panel name="mainPanel">
      <field name="name"/>
      <field name="priority" colSpan="3"/>
      <panel name="workCenterGroupPanel" colSpan="12">
        <field name="workCenterTypeSelect"/>
        <field name="workCenterGroup" canNew="true" canEdit="true" colSpan="6"
          form-view="work-center-group-form" grid-view="work-center-group-grid"
          onChange="action-prod-process-line-group-work-center-group-onchange"
          domain="self.workCenterTypeSelect = :workCenterTypeSelect"/>
      </panel>
      <field name="workCenter" grid-view="work-center-grid" form-view="work-center-form"
        canNew="workCenterGroup == null"
        onChange="action-prod-process-line-group-work-center-onchange"
        onSelect="action-prod-process-line-attrs-set-work-center-domain"/>
      <panel name="outsourcePanel" showTitle="false" colSpan="12">
        <field name="outsourcing"
          readonlyIf="!prodProcess.prodProcessLinesOutsourcable || outsourcable" colSpan="4"/>
        <field name="outsourcable"
          readonlyIf="!prodProcess.prodProcessLinesOutsourcable || outsourcing" colSpan="4"/>
        <field name="outsourcingPartner"
          showIf="(outsourcing &amp;&amp; !prodProcess.outsourcing) || outsourcable" colSpan="4"
          domain="self.isSubcontractor = true"
          requiredIf="(outsourcing &amp;&amp; !prodProcess.outsourcing) || outsourcable"/>
        <field name="generatePurchaseOrderOnMoPlanning"
          showIf="(outsourcing || outsourcable) &amp;&amp; !prodProcess.outsourcing" colSpan="4"/>
        <field name="useLineInGeneratedPurchaseOrder"
          showIf="prodProcess.outsourcing || prodProcess.outsourcable || (prodProcess.prodProcessLinesOutsourcable &amp;&amp; (outsourcing || outsourcable))"/>
      </panel>

      <field name="optional"/>

      <field name="machineTool" onSelect="action-prod-process-line-attrs-machine-tool-domain"
        if="__config__.app.getApp('production')?.getEnableToolManagement()"/>
      <field name="stockLocation"/>
      <panel name="capacitySettingsPanel" title="Capacity settings" colSpan="12">
        <field name="minCapacityPerCycle" colSpan="4"/>
        <field name="maxCapacityPerCycle" colSpan="4"/>
        <field name="durationPerCycle" colSpan="6" widget="duration" x-big="true"
          x-seconds="true" if="!__config__.app.getApp('production')?.getIsInputInHundredthHours()"/>
        <field name="humanDuration" colSpan="6" widget="duration" x-big="true"
          x-seconds="true" if="!__config__.app.getApp('production')?.getIsInputInHundredthHours()"/>
        <field name="durationPerCycleDecimal" colSpan="6"
          if="__config__.app.getApp('production')?.getIsInputInHundredthHours()"/>
        <field name="humanDurationDecimal" colSpan="6"
          if="__config__.app.getApp('production')?.getIsInputInHundredthHours()"/>

        <field name="prodProcess.outsourcing" hidden="true"/>
        <field name="prodProcess.outsourcable" hidden="true"/>
        <field name="prodProcess.prodProcessLinesOutsourcable" hidden="true"/>
      </panel>

      <panel name="costSettingPanel" colSpan="12" itemSpan="12"
        if="__config__.app.getApp('production')?.getIsCostPerProcessLine()">
        <panel name="generalCostSettingsPanel" title="Costing settings"
          showIf="workCenter.workCenterTypeSelect == 2 || workCenter.workCenterTypeSelect == 3">
          <field name="product"
            domain="self.productTypeSelect = 'service' AND self.dtype = 'Product'" canEdit="false"/>
          <field name="costTypeSelect" colSpan="3"/>
          <field name="costAmount" colSpan="3"/>
        </panel>
        <panel name="hrCostSettings" title="HR Cost Settings"
          showIf="workCenter.workCenterTypeSelect == 1 || workCenter.workCenterTypeSelect == 3">
          <field name="hrProduct"
            domain="self.productTypeSelect = 'service' AND self.dtype = 'Product'" canEdit="false"
            form-view="product-form" grid-view="product-grid"/>
          <field name="hrCostTypeSelect" colSpan="3" selection-in="[1,3]"/>
          <field name="hrCostAmount" colSpan="3"/>
        </panel>
        <field name="workCenter.workCenterTypeSelect" hidden="true"/>
      </panel>

      <panel name="descriptionPanel" title="Description" colSpan="12">
        <field name="description" showTitle="false" height="5" colSpan="12"/>
      </panel>
    </panel>
    <panel-tabs name="mainPanelTab">
      <panel-related name="toConsumeProdProductListPanel"
        field="toConsumeProdProductList" title="To consume products" editable="true" colSpan="12"
        form-view="prod-product-form" grid-view="prod-product-grid"/>
      <panel name="descriptionPanel" title="Descriptions">
        <field name="objectDescriptionList" form-view="object-description-form"
          grid-view="object-description-grid" colSpan="12"/>
      </panel>
    </panel-tabs>

    <panel-mail name="mailPanel">
      <mail-messages limit="4"/>
      <mail-followers/>
    </panel-mail>
  </form>

  <action-record name="action-prod-process-line-record-default"
    model="com.axelor.apps.production.db.ProdProcessLine">
    <field name="priority"
      expr="eval: (__parent__?.prodProcessLineList?.max{ it.getPriority() }?.getPriority()? __parent__.prodProcessLineList.max{ it.getPriority() }.getPriority() : 0) + 10"/>
    <field name="stockLocation"
      expr="eval:__parent__?.company?.getStockConfig().getProductionVirtualStockLocation()"/>
    <field name="workCenterTypeSelect" expr="eval: 1"/>
    <field name="outsourcing" expr="eval: __parent__?.outsourcing"/>
    <field name="generatePurchaseOrderOnMoPlanning"
      expr="eval: __config__.app.getApp('production').manageOutsourcing &amp;&amp; __config__.app.getApp('production').generatePurchaseOrderOnMoPlanning"/>
  </action-record>

  <action-record name="action-prod-process-line-record-update-from-workcenter"
    model="com.axelor.apps.production.db.ProdProcessLine">
    <field name="durationPerCycle" expr="eval: workCenter?.durationPerCycle"
      if="workCenter?.workCenterTypeSelect == 2 || workCenter?.workCenterTypeSelect == 3"/>
    <field name="humanDuration" expr="eval: workCenter?.hrDurationPerCycle"
      if="workCenter?.workCenterTypeSelect == 1 || workCenter?.workCenterTypeSelect == 3"/>
    <field name="product" expr="eval: workCenter?.product"
      if="__config__.app.getApp('production')?.getIsCostPerProcessLine()"/>
    <field name="costTypeSelect" expr="eval: workCenter?.costTypeSelect"
      if="__config__.app.getApp('production')?.getIsCostPerProcessLine()"/>
    <field name="costAmount" expr="eval: workCenter?.costAmount"
      if="__config__.app.getApp('production')?.getIsCostPerProcessLine()"/>
    <field name="hrProduct" expr="eval: workCenter?.hrProduct"
      if="__config__.app.getApp('production')?.getIsCostPerProcessLine()"/>
    <field name="hrCostTypeSelect" expr="eval: workCenter?.hrCostTypeSelect"
      if="__config__.app.getApp('production')?.getIsCostPerProcessLine()"/>
    <field name="hrCostAmount" expr="eval: workCenter?.hrCostAmount"
      if="__config__.app.getApp('production')?.getIsCostPerProcessLine()"/>
    <field name="minCapacityPerCycle" expr="eval: workCenter?.minCapacityPerCycle"
      if="workCenter?.workCenterTypeSelect == 2 || workCenter?.workCenterTypeSelect == 3"/>
    <field name="maxCapacityPerCycle" expr="eval: workCenter?.maxCapacityPerCycle"
      if="workCenter?.workCenterTypeSelect == 2 || workCenter?.workCenterTypeSelect == 3"/>
  </action-record>

  <action-group name="action-prod-process-line-group-work-center-onchange">
    <action name="action-prod-process-line-record-update-from-workcenter"/>
    <action name="action-prod-process-line-method-capacity-settings"/>
    <action name="action-prod-process-line-attrs-hide-duration"/>
  </action-group>

  <action-attrs name="action-prod-process-line-attrs-hide-duration">
    <attribute name="hidden" for="durationPerCycle"
      expr="eval: workCenter?.workCenterTypeSelect != 3 &amp;&amp; workCenter?.workCenterTypeSelect != 2"/>
    <attribute name="hidden" for="humanDuration"
      expr="eval: workCenter?.workCenterTypeSelect != 3 &amp;&amp; workCenter?.workCenterTypeSelect != 1"/>
  </action-attrs>

  <action-group name="action-prod-process-line-group-work-center-group-onchange">
    <action name="action-prod-process-line-method-work-center-group-fill-work-center"/>
    <action name="action-prod-process-line-group-work-center-onchange"/>
  </action-group>

  <action-method
    name="action-prod-process-line-method-work-center-group-fill-work-center"
    model="com.axelor.apps.production.db.ProdProcessLine">
    <call class="com.axelor.apps.production.web.ProdProcessLineController"
      method="fillWorkCenter"/>
  </action-method>

  <action-method name="action-prod-process-line-method-capacity-settings">
    <call class="com.axelor.apps.production.web.ProdProcessLineController"
      method="updateCapacitySettings"/>
  </action-method>

  <action-attrs name="action-prod-process-line-attrs-default">
    <attribute name="hidden" for="toConsumeProdProductList"
      expr="eval: __parent__ != null ? !__parent__.isConsProOnOperation : !prodProcess.isConsProOnOperation"/>
    <attribute name="hidden" for="stockLocation"
      expr="eval: !__parent__?.isConsProOnOperation"/>
    <attribute name="hidden" for="useLineInGeneratedPurchaseOrder"
      expr="eval: !((__parent__.outsourcing || outsourcing) &amp;&amp; __parent__.generatePurchaseOrderOnMoPlanning)"
      if="__parent__ != null"/>
    <attribute name="required" for="workCenter"
      expr="eval: !__config__.app.getApp('production')?.getManageWorkCenterGroup()"/>
    <attribute name="hidden" for="workCenterGroupPanel"
      expr="eval: !__config__.app.getApp('production')?.getManageWorkCenterGroup()"/>


  </action-attrs>

  <action-attrs name="action-prod-process-line-attrs-machine-tool-domain">
    <attribute name="domain"
      expr="eval: &quot; self.machine.id in (SELECT machine.id FROM WorkCenter where id = ${workCenter?.id}) &quot;"
      for="machineTool"/>
  </action-attrs>


  <action-attrs name="action-prod-process-line-attrs-set-work-center-domain">
    <attribute name="domain" for="workCenter"
      expr="eval: 'self.id IN (' + workCenterGroup?.workCenterSet?.collect{ it.id }.join(',') + ')'"
      if="__config__.app.getApp('production')?.getManageWorkCenterGroup() &amp;&amp; workCenterGroup?.workCenterSet &amp;&amp; !workCenterGroup?.workCenterSet.isEmpty()"/>
  </action-attrs>



</object-views>

